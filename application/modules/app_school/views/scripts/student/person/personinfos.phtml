<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 20.20.2012
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$columndata = array();

$OBJECT_GRID = new CamemisGrid("STUDENT", "LIST");
$OBJECT_GRID->setLoadUrl("/student/jsonload/");
$OBJECT_GRID->setSaveUrl("/student/jsonsave/");

$isCancel = isset($_GET["isCancel"]) ? addText($_GET["isCancel"]):"";
$target = isset($_GET["target"])?addText($_GET["target"]):"";

function columnProperties($header, $dataindex, $width){
    $js = "";
    $js .= "editor: new Ext.form.TextArea({";
        $js .= "allowBlank: false";
    $js .= "})";
    $js .= ",renderer:cssDefault";
    $js .= ",align: 'left'";
    $js .= ",height:25";
    $js .= ",header: '<b>".$header."</b>'";
    $js .= ",dataIndex: '".$dataindex."'";
    $js .= ",width: $width";
    
    return $js;
}
?>
<style type="text/css">
    span.Text{
        font:bold 10px Tahoma,Verdana,Arial,Sans-serif,Hanuman;
        color:#333;
    }
</style>
<script>
    var comboValue;
    Ext.onReady(function() {

        Ext.QuickTips.init();
        function cssDefault(value){
            return '<div style="font-weight:normal; padding: 5px; height:15px;">' + value + '</div>';
        }
        <?
        
        switch($target){
            case "PARINFO":
                $OBJECT_GRID->addReadField("name: 'NAME'");
                    $OBJECT_GRID->addReadField("name: 'OCCUPATION'");
                    $OBJECT_GRID->addReadField("name: 'PHONE'");
                    $OBJECT_GRID->addReadField("name: 'EMAIL'");
                    $OBJECT_GRID->addReadField("name: 'RELATIONSHIP'");
                    $OBJECT_GRID->addReadField("name: 'ADDRESS'");
                    $OBJECT_GRID->addReadField("name: 'DATE_BIRTH'");
                    $OBJECT_GRID->addReadField("name: 'ETHNICITY'");
                    $OBJECT_GRID->addReadField("name: 'NATIONALITY'");
                    $OBJECT_GRID->addReadField("name: 'DELETE'");
                    
                    $OBJECT_GRID->addColumn(columnProperties(NAME,"NAME",150,checkColHidden(1,$columndata)));
                    $OBJECT_GRID->addColumn(columnProperties(PHONE,"PHONE",150,checkColHidden(2,$columndata)));
                    $OBJECT_GRID->addColumn(columnProperties(EMAIL,"EMAIL",150,checkColHidden(3,$columndata)));
                    $OBJECT_GRID->addColumn(columnProperties(ADDRESS,"ADDRESS",150,checkColHidden(4,$columndata)));
                    $OBJECT_GRID->addColumn(columnProperties(DATE_BIRTH,"DATE_BIRTH",150,checkColHidden(5,$columndata)));
                    $OBJECT_GRID->addColumn(columnProperties(PARENT_GUARDIAN_EMPLOYMENT_INFORMATION,"OCCUPATION",150,checkColHidden(5,$columndata)));
                    ////////////////////////////////////////////////////// RELATIONSHIP CAMBOBOX IN GRID
                    $OBJECT_GRID->addColumn("
                        header: '<b>".PARENT_GUARDIAN_RELATIONSHIP."</b>',
                        dataIndex: 'RELATIONSHIP',
                        width: 150,
                        align: 'left',
                        editor: new Ext.form.ComboBox({
                            triggerAction:'all'
                            ,mode:'local'
                            ,store: new Ext.data.JsonStore({
                                autoDestroy: true
                                ,fields: ['chooseValue', 'chooseDisplay']
                                ,data:".CamemisTypeDBAccess::comboxCamemisType('RELATIONSHIP_TYPE')."
                            })
                            ,valueField: 'chooseValue'
                            ,displayField: 'chooseDisplay'
                            ,editable: false
                            ,listeners: {
                                select: function(combo, record, index) {
                                    replaceValue = combo.getValue();
                                    var newDisplay = record.get('chooseDisplay');
                                    combo.setValue(newDisplay);
                                    comboValue = replaceValue;
                                }
                            }
                        })
                    ");
                    ////////////////////////////////////////////////////// ETHNICITY CAMBOBOX IN GRID
                    $OBJECT_GRID->addColumn("
                        header: '<b>".ETHNICITY."</b>',
                        dataIndex: 'ETHNICITY',
                        width: 150,
                        align: 'left',
                        editor: new Ext.form.ComboBox({
                            triggerAction:'all'
                            ,mode:'local'
                            ,store: new Ext.data.JsonStore({
                                autoDestroy: true
                                ,fields: ['chooseValue', 'chooseDisplay']
                                ,data:".CamemisTypeDBAccess::comboxCamemisType('ETHNICITY_TYPE')."
                            })
                            ,valueField: 'chooseValue'
                            ,displayField: 'chooseDisplay'
                            ,editable: false
                            ,listeners: {
                                select: function(combo, record, index) {
                                    replaceValue = combo.getValue();
                                    var newDisplay = record.get('chooseDisplay');
                                    combo.setValue(newDisplay);
                                    comboValue = replaceValue;
                                }
                            }
                        })
                    ");
                    /////////////////////////////////////////////////////////// NATIONALITY CAMBOBOX IN GRID
                    $OBJECT_GRID->addColumn("
                        header: '<b>".NATIONALITY."</b>',
                        dataIndex: 'NATIONALITY',
                        width: 150,
                        align: 'left',
                        editor: new Ext.form.ComboBox({
                            triggerAction:'all'
                            ,mode:'local'
                            ,store: new Ext.data.JsonStore({
                                autoDestroy: true
                                ,fields: ['chooseValue', 'chooseDisplay']
                                ,data:".CamemisTypeDBAccess::comboxCamemisType('NATIONALITY_TYPE')."
                            })
                            ,valueField: 'chooseValue'
                            ,displayField: 'chooseDisplay'
                            ,editable: false
                            ,listeners: {
                                select: function(combo, record, index) {
                                    replaceValue = combo.getValue();
                                    var newDisplay = record.get('chooseDisplay');
                                    combo.setValue(newDisplay);
                                    comboValue = replaceValue;
                                }
                            }
                        })
                    ");
                    /////////////////////////////////////////////////////////// EMERGENCY_CONTACT CAMBOBOX IN GRID
                    $OBJECT_GRID->addColumn("
                        header: '<b>".EMERGENCY_CALL."</b>',
                        dataIndex: 'EMERGENCY_CONTACT',
                        width: 150,
                        align: 'left',
                        editor: new Ext.form.ComboBox({
                            triggerAction:'all'
                            ,mode:'local'
                            ,store: new Ext.data.JsonStore({
                                autoDestroy: true
                                ,fields: ['chooseValue', 'chooseDisplay']
                                ,data:".CamemisTypeDBAccess::comboxCamemisType('EMERGENCY_CONTACT_TYPE')."
                            })
                            ,valueField: 'chooseValue'
                            ,displayField: 'chooseDisplay'
                            ,editable: false
                            ,listeners: {
                                select: function(combo, record, index) {
                                    replaceValue = combo.getValue();
                                    var newDisplay = record.get('chooseDisplay');
                                    combo.setValue(newDisplay);
                                    comboValue = replaceValue;
                                }
                            }
                        })
                    ");
                    /////////////////////////////////////////////////////////////////////////////////////////////////
                break;
            case "EDUBACK":
                $OBJECT_GRID->addReadField("name: 'ACADEMIC_YEAR'");
                $OBJECT_GRID->addReadField("name: 'INSTITUTION_NAME'");
                $OBJECT_GRID->addReadField("name: 'MAJOR'");
                $OBJECT_GRID->addReadField("name: 'QUALIFICATION_DEGREE'");
                $OBJECT_GRID->addReadField("name: 'CITY_PROVINCE'");
                $OBJECT_GRID->addReadField("name: 'CERTIFICATE_NUMBER'");
                $OBJECT_GRID->addReadField("name: 'DELETE'");
                
                $OBJECT_GRID->addColumn(columnProperties(ACADEMIC_YEAR,"ACADEMIC_YEAR",150,checkColHidden(1,$columndata)));
                $OBJECT_GRID->addColumn(columnProperties(INSTITUTION_NAME,"INSTITUTION_NAME",150,checkColHidden(2,$columndata)));
                /////////////////////////////////////////////////////////// MAJOR CAMBOBOX IN GRID
                $OBJECT_GRID->addColumn("
                    header: '<b>".MAJOR."</b>',
                    dataIndex: 'MAJOR',
                    width: 150,
                    align: 'left',
                    editor: new Ext.form.ComboBox({
                        triggerAction:'all'
                        ,mode:'local'
                        ,store: new Ext.data.JsonStore({
                            autoDestroy: true
                            ,fields: ['chooseValue', 'chooseDisplay']
                            ,data:".CamemisTypeDBAccess::comboxCamemisType('MAJOR_TYPE')."
                        })
                        ,valueField: 'chooseValue'
                        ,displayField: 'chooseDisplay'
                        ,editable: false
                        ,listeners: {
                            select: function(combo, record, index) {
                                replaceValue = combo.getValue();
                                var newDisplay = record.get('chooseDisplay');
                                combo.setValue(newDisplay);
                                comboValue = replaceValue;
                            }
                        }
                    })
                ");
                /////////////////////////////////////////////////////////// QUALIFICATION_DEGREE CAMBOBOX IN GRID
                $OBJECT_GRID->addColumn("
                    header: '<b>".QUALIFICATION_DEGREE."</b>',
                    dataIndex: 'QUALIFICATION_DEGREE',
                    width: 150,
                    align: 'left',
                    editor: new Ext.form.ComboBox({
                        triggerAction:'all'
                        ,mode:'local'
                        ,store: new Ext.data.JsonStore({
                            autoDestroy: true
                            ,fields: ['chooseValue', 'chooseDisplay']
                            ,data:".CamemisTypeDBAccess::comboxCamemisType('QUALIFICATION_DEGREE_TYPE')."
                        })
                        ,valueField: 'chooseValue'
                        ,displayField: 'chooseDisplay'
                        ,editable: false
                        ,listeners: {
                            select: function(combo, record, index) {
                                replaceValue = combo.getValue();
                                var newDisplay = record.get('chooseDisplay');
                                combo.setValue(newDisplay);
                                comboValue = replaceValue;
                            }
                        }
                    })
                ");
                /////////////////////////////////////////////////////////////////// CITY_PROVINCE CAMBOBOX IN GRID
                $OBJECT_GRID->addColumn("
                    header: '<b>".CITY_PROVINCE."</b>',
                    dataIndex: 'CITY_PROVINCE',
                    width: 150,
                    align: 'left',
                    editor: new Ext.form.ComboBox({
                        triggerAction:'all'
                        ,mode:'local'
                        ,store: new Ext.data.JsonStore({
                            autoDestroy: true
                            ,fields: ['chooseValue', 'chooseDisplay']
                            ,data:".LocationDBAccess::comboxLocation()."
                        })
                        ,valueField: 'chooseValue'
                        ,displayField: 'chooseDisplay'
                        ,editable: false
                        ,listeners: {
                            select: function(combo, record, index) {
                                replaceValue = combo.getValue();
                                var newDisplay = record.get('chooseDisplay');
                                combo.setValue(newDisplay);
                                comboValue = replaceValue;
                            }
                        }
                    })
                ");
                ////////////////////////////////////////////////////////////////////////////////
                $OBJECT_GRID->addColumn(columnProperties(CERTIFICATE_NUMBER,"CERTIFICATE_NUMBER",150,checkColHidden(6,$columndata)));
                break;
        }
        
        $OBJECT_GRID->addColumn("
            xtype: 'checkboxcolumn'
            ,align: 'center'
            ,header: '<b>".DELETE."</b>'
            ,dataIndex: 'DELETE'
            ,disabled: true
            ,width: 80
            ,on: 1
            ,off: 0
        ");

        if($isCancel)
        $OBJECT_GRID->addTBarItems("
            tbar.add([{
                text: '".CANCEL."'
                ,id: 'CANCEL_ID'
                ,formBind:true
                ,iconCls:'icon-cancel'
                ,scope:this
                ,handler: function(){
                    window.parent.Ext.getCmp('content').getLayout().setActiveItem(0);
                }
            },'-']);
        ");
        
        if (UserAuth::getACLValue("STUDENT_PERSONAL_INFORMATION_EDIT_RIGHT"))
        $OBJECT_GRID->addTBarItems("
            tbar.add([{
                text: '" . ADD_ENTRY . "'
                ,iconCls:'icon-application_form_add'
                ,handler: function(){
                    data = {
                        NAME:''
                        ,DESCRIPTION:''
                        ,ADDRESS:''
                        ,PHONE:''
                        ,EMAIL:''
                        ,DATE_BIRTH:''
                        ,ACADEMIC_YEAR:''
                        ,ETHNICITY:''
                        ,INSTITUTION_NAME:''
                        ,QUALIFICATION_DEGREE:''
                        ,MAJOR:''
                        ,CERTIFICATE_NUMBER:''
                        ,NATIONALITY:''
                        ,EMERGENCY_CONTACT_PERSON:''
                        ,QUALIFICATION:''
                        ,OCCUPATION:''
                        ,RELATIONSHIP:''
                    };
                    Ext.getCmp('".$OBJECT_GRID->getObjectId()."').getStore().add([new Ext.data.Record(data)]);
                }
            }]);
        ");

        $OBJECT_GRID->setSaveParams("
            cmd: 'actionPersonInfos'
            ,object: '".$this->target."'
            ,objectId: '".$this->objectId."'
            ,comboValue:comboValue
        ");

        $OBJECT_GRID->baseParams = "
            start:0
            ,limit:100
            ,cmd: 'jsonListPersonInfos'
            ,objectId: '".$this->objectId."'
        ";
        $OBJECT_GRID->setAftereditCallback("
            if(jsonData.DELETE || jsonData.CITY_PROVINCE){
                Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload(); 
            }else{
                e.record.set('ID',jsonData.ID);
            }
        ");
        $OBJECT_GRID->setAftereditEvent("
            objectId = jsonData.ID;
        ");
        
        $OBJECT_GRID->isGridEditing = true;
        $OBJECT_GRID->loadMask = false;
        $OBJECT_GRID->isObjectDefaultOnLoad = true;
        $OBJECT_GRID->forceFit = "false";
        $OBJECT_GRID->renderJS();
        ?>
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                border: false
                ,layout: 'fit'
                ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType()?>'}]
            }]
        });
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>