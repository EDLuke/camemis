<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 25.12.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_FORM = new CamemisForm("STUDENT");
$OBJECT_FORM->setLoadUrl('/student/jsonload/');
$OBJECT_FORM->setSaveUrl('/student/jsonsave/');

////////////////////////////////////////////////////////////////////////////////
//Checkbox...
////////////////////////////////////////////////////////////////////////////////
function getExtCheckBoxField($parentId){
    $data = Array();
    $objectParent = DescriptionDBAccess::findObjectFromId($parentId);
    $entries = DescriptionDBAccess::sqlDescription($parentId, "STUDENT", false);
    $CHECKBOX_JS .= "new Ext.form.CheckboxGroup({";
    $CHECKBOX_JS .= "fieldLabel: '".addslashes(stripcslashes($objectParent->NAME))."'";
    $CHECKBOX_JS .= ",columns: 2";
    $CHECKBOX_JS .= ",items:[";
        $CHECKBOX_DATA = array();
        foreach($entries as $v){
            $CHECKBOX_DATA[] = "{boxLabel: '".addslashes(stripcslashes($v->NAME))."', name: 'CHECKBOX_".$v->ID."'}";
        }
        $CHECKBOX_JS .= implode(',',$CHECKBOX_DATA);
    $CHECKBOX_JS .= "]";
    $CHECKBOX_JS .= "})";
    return $CHECKBOX_JS;    
}

////////////////////////////////////////////////////////////////////////////////
//Radiobox...
////////////////////////////////////////////////////////////////////////////////
function getExtRadioBoxField($parentId){
    $data = Array();
    $objectParent = DescriptionDBAccess::findObjectFromId($parentId);
    $entries = DescriptionDBAccess::sqlDescription($parentId, "STUDENT", false);
    $RADIOBOX_JS .= "new Ext.form.RadioGroup({";
        $RADIOBOX_JS .= "fieldLabel: '".addslashes(stripcslashes($objectParent->NAME))."'"; 
        $RADIOBOX_JS .= ",columns: 2";
        $RADIOBOX_JS .= ",items:[";
            $RADIOBOX_DATA = array();
            foreach($entries as $v){
                $RADIOBOX_DATA[] = "{boxLabel: '".addslashes(stripcslashes($v->NAME))."', name: 'RADIOBOX_".$parentId."', inputValue: '".$v->ID."'}";
            }
            $RADIOBOX_JS .= implode(',',$RADIOBOX_DATA);
        $RADIOBOX_JS .= "]";
    $RADIOBOX_JS .= "})";
    return $RADIOBOX_JS;    
}

////////////////////////////////////////////////////////////////////////////////
//Inputfield...
////////////////////////////////////////////////////////////////////////////////

function getExtInputfield($parentId){
    $data = Array();
    $entries = DescriptionDBAccess::sqlDescription($parentId, "STUDENT", false);
    if($entries){
        foreach($entries as $v){
            $data[] = "{
                xtype: 'textfield'
                ,id: 'INPUTFIELD_" . $v->ID . "'"
                . ",fieldLabel: '" . addslashes(stripcslashes($v->NAME)) . "'"
                . ",width:250"
                . ",name: 'INPUTFIELD_" . $v->ID . "'
            }";
        }
    }
    return implode(',',$data);
}

////////////////////////////////////////////////////////////////////////////////
//Textarea...
////////////////////////////////////////////////////////////////////////////////

function getExtTextareafield($parentId){
    $data = Array();
    $entries = DescriptionDBAccess::sqlDescription($parentId, "STUDENT", false);
    if($entries){
        foreach($entries as $v){
            $data[] = "{
                xtype: 'textarea'
                ,id: 'TEXTAREA_" . $v->ID . "'"
                . ",fieldLabel: '" . addslashes(stripcslashes($v->NAME)) . "'"
                . ",width:250"
                . ",height:100"
                . ",name: 'TEXTAREA_" . $v->ID . "'
            }";
        }
    }
    return implode(',',$data);
}

////////////////////////////////////////////////////////////////////////////////
//Panel Controler
//@veasna
////////////////////////////////////////////////////////////////////////////////
function getExtPanel($name,$parentId,$chooseType){
    $PANEL = "{";
            $PANEL .= "title: '".addslashes(stripcslashes($name))."'";
            $PANEL .= ",collapsible: true";
            $PANEL .= ",collapsed: false";
            $PANEL .= ",autoHeight: true";
            $PANEL .= ",style: 'padding-bottom: 5px'";
            $PANEL .= ",width: 550";
            $PANEL .= ",items:[{";
                $PANEL .= "layout: 'form'";
                $PANEL .= ",border: false";
                $PANEL .= ",autoHeight:true";
    switch ($chooseType){
        case "1":
            $PANEL .= ",bodyStyle: 'background:".CamemisPage::userFormBgColor().";padding:10px'";
            $PANEL .= ",items:[". getExtCheckBoxField($parentId)."]";
         
          break;
        case "2":
            $PANEL .= ",bodyStyle: 'background:".CamemisPage::userFormBgColor().";padding:10px'";
            $PANEL .= ",items:[". getExtRadioBoxField($parentId)."]";
          
          break;
        case "3":
            $PANEL .= ",bodyStyle: 'padding:10px'";
            $PANEL .= ",items:[". getExtInputfield($parentId)."]";
          
          break;
        case "4":
            $PANEL .= ",bodyStyle: 'padding:10px'";
            $PANEL .= ",items:[". getExtTextareafield($parentId)."]";
          break;
    }    
           $PANEL .= "}]";
            $PANEL.="}";
            
    return $PANEL;            
}

////////////////////////////////////////////////////////////////////////////////

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
    Ext.onReady(function() {

        <?
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

        //@veasna 
        //display order by sotkey
        $parentType = DescriptionDBAccess::sqlDescription(false, "STUDENT", false);
        if($parentType){
            foreach($parentType as $elementType){
                $DISPLAY_ITEMS[]=getExtPanel($elementType->NAME,$elementType->ID,$elementType->CHOOSE_TYPE); 
            }    
        }
        ////
        
        $SET_ITEMS = "[";
            if ($DISPLAY_ITEMS) $SET_ITEMS .= implode(',',$DISPLAY_ITEMS);
        $SET_ITEMS .= "]";
        $OBJECT_FORM->addTBarItems("
            text: '".CANCEL."'
            ,id: 'CANCEL_ID'
            ,formBind:true
            ,iconCls:'icon-cancel'
            ,scope:this
            ,handler: function(){
                window.parent.Ext.getCmp('content').getLayout().setActiveItem(0);
            }
        ");
        
        if(UserAuth::getACLValue("STUDENT_PERSONAL_INFORMATION_EDIT_RIGHT"))
        $OBJECT_FORM->addTBarItems(CamemisBar::tbarSingleSave());
        
        $items = "
            border: false
            ,id: 'FORM_ITEMS'
            ,bodyStyle: 'padding:0px'
            ,items: ".$SET_ITEMS."
        ";
        $OBJECT_FORM->setLoadParams("cmd: 'loadStudentDescripton',objectId: '".$this->objectId."'");
        $OBJECT_FORM->setSaveParams("
            cmd: 'actionStudentDescription'
            ,objectId: '".$this->objectId."'
        ");
        $OBJECT_FORM->setonEmbeddedEvents("
            XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
        ");
        $OBJECT_FORM->addObjectItems($items);
        $OBJECT_FORM->labelAlign = "left";
        $OBJECT_FORM->labelWidth = 160;
        $OBJECT_FORM->renderJS();
        
        $viewport = "viewport = new Ext.Viewport({";
            $viewport .= "layout: 'fit'";
            $viewport .= ",border: false";
            $viewport .= ",items: [{";
                $viewport .= "xtype: 'panel'";
                $viewport .= ",id: 'panel'";
                $viewport .= ",border: false";
                $viewport .= ",layout: 'fit'";
                if($DISPLAY_ITEMS){
                    $viewport .= ",items:[{xtype: '".$OBJECT_FORM->getObjectXtype()."'}]";
                }else{
                    $viewport .= "
                    ,items:[{
                        title: ''
                        ,border:false
                        ,height:60
                        ,width:550
                        ,bodyStyle: 'padding:20px;'
                        ,html:'<h1 class=\"headerError\">No Data Available</h1>'     
                    }]";
                }
            $viewport .= "}]";
        $viewport .= "});";
        echo $viewport;
        ?>
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>