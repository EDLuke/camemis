<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_GRID = new CamemisGrid("ATTENDANCE", "LIST");
$OBJECT_GRID->setLoadUrl('/attendance/jsonload/');
$OBJECT_GRID->setSaveUrl('/attendance/jsonsave/'); 
$columndata = Utiles::getGridColumnData("ATTENDANCE_LIST_ID");
$constand = SEARCH_RESULT;
if(UserAuth::getUserType()){
    switch(UserAuth::getUserType()){
        case 'STUDENT':
            $constand = LIST_OF_ATTENDANCE;
            break;
    }    
}

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

?>
<script>
    
    Ext.onReady(function() {

        <?
        /**
        * Extjs: s.gif
        */
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

        $OBJECT_GRID->addCellRenderer("
            function renderText(v, p, record, rowIndex){
                var str = '<span class=spanText>' + v + '</span>';
                return str;
            }
        ");
        
        $OBJECT_GRID->addReadField("name: 'ABSENT_TYPE'");
        $OBJECT_GRID->addReadField("name: 'START_DATE'");
        $OBJECT_GRID->addReadField("name: 'END_DATE'");
        $OBJECT_GRID->addReadField("name: 'COUNT_DATE'");
        $OBJECT_GRID->addReadField("name: 'STATUS'");
        $OBJECT_GRID->addReadField("name: 'STATUS_KEY'");
        $OBJECT_GRID->addReadField("name: 'DESCRIPTION'");
        $OBJECT_GRID->addReadField("name: 'SUBJECT_NAME'");
        
        $OBJECT_GRID->addColumn("header: '<b>".TYPE."</b>', width: 130, hidden:".checkColHidden(1, $columndata).", renderer: renderText, sortable: true, dataIndex: 'ABSENT_TYPE'");
        $OBJECT_GRID->addColumn("header: '<b>".FROM_DATE."</b>', align:'center', width: 120, hidden:".checkColHidden(2, $columndata).", renderer: renderText, sortable: true, dataIndex: 'START_DATE'");
        $OBJECT_GRID->addColumn("header: '<b>".TO_DATE."</b>', align:'center', width: 120, hidden:".checkColHidden(3, $columndata).", renderer: renderText, sortable: true, dataIndex: 'END_DATE'");
        $OBJECT_GRID->addColumn("header: '<b>".DAYS."</b>' , align:'center', width: 60, hidden:".checkColHidden(4, $columndata).", renderer: renderText, sortable: true, dataIndex: 'COUNT_DATE'");
        $OBJECT_GRID->addColumn("header: '<b>".SUBJECT."</b>', width: 150, hidden:".checkColHidden(5, $columndata).", sortable: true, dataIndex: 'SUBJECT_NAME'");
        $OBJECT_GRID->addColumn("header: '<b>".DESCRIPTION."</b>', width: 150, hidden:".checkColHidden(6, $columndata).", sortable: true, dataIndex: 'DESCRIPTION'");
        
        $OBJECT_GRID->baseParams = "
            start:0
            ,limit:100
            ,studentId: '".$this->objectId."'
            ,classId:'".$this->classId."'
            ,trainingId:'".$this->trainingId."'
            ,cmd: 'jsonStudentAttendanceMonth'
        ";
        
        $OBJECT_GRID->isGroupingView = true;
        $OBJECT_GRID->groupField = "ABSENT_TYPE";
        $OBJECT_GRID->forceFit = "false";
        $OBJECT_GRID->renderJS();
        ?>
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout: 'fit'
                ,border: false
                ,id: 'CONTENT'
                ,items:[{
                    layout:'fit'
                    ,bodyStyle: 'background:<?=CamemisPage::userBgColor();?>;padding:3px'
                    ,border: false
                    ,items:[{
                        xtype: 'tabpanel'
                        ,id:'TABPANEL_ID'
                        ,tabPosition: 'top'
                        ,plain:true
                        ,activeTab: 0
                        ,enableTabScroll:true
                        ,items:[{
                            title:'<?=CHARTS;?>'
                            ,layout:'fit'
                            ,items: [new Ext.ux.IFrameComponent({ id: 'ATTENDANCE_CHARTS', url:'/attendance/studentchartreport/?camIds=<?=$this->urlEncryp->encryptedGet("classId=".$this->classId."&studentId=".$this->objectId."")?>'})]
                        },{
                            title:'<?=$constand;?>'
                            ,layout:'fit'
                            ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
                        }]
                    }]
                }]
            }]
        });
        Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));        
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>