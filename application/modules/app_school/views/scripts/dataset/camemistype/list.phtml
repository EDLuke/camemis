<?
///////////////////////////////////////////////////////////
// @Sea Peng
// Date: 22.11.2013
///////////////////////////////////////////////////////////
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_TREE = new CamemisTree("DATASET", "CAMEMISTYPE");
$OBJECT_TREE->setURL("/dataset/jsontree/");
$OBJECT_TREE->setSaveUrl("/dataset/jsonsave/"); 

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
Ext.onReady(function() {
	
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeRefresh(false));
    $OBJECT_TREE->backgroundColor = "#F9F9F9";
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());
    
    $store = CamemisTypeDBAccess::getCamemisTypeComboData(false, true);
    $OBJECT_TREE->addTBarItems("
        xtype: 'buttongroup'
        ,items:[{
            ".CamemisField::Combo("FILTER", false, $store, false, false, 200, false, false)."
        }]
    ");
    
    $OBJECT_TREE->addTBarItems("
            text:''
            ,tooltip:'".CAMEMIS_HELP."'
            ,iconCls: 'icon-help'
            ,handler:function(){
                ".CamemisPage::setEmbeddedHelp("FD5F-FF75")."
            }
        ");
    
    $OBJECT_TREE->setBaseParams("
        cmd: 'jsonTreeAllCamemisType'
        ,objectId:''
    ");
    
    $OBJECT_TREE->isAsyncTreeNode = false;
    $OBJECT_TREE->isTreeExpand=false; 
    $OBJECT_TREE->renderJS();
    
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            }
            ,items: [{
               	region:'west'
                ,title: ''
                ,margins: '3 0 3 3'
                ,cmargins: '3 3 3 3'
                ,width:350
                ,minSize:350
                ,maxSize:350
                ,layout: 'fit'
                ,items:[{xtype: '<?=$OBJECT_TREE->getObjectXtype();?>'}]
            },{
               	collapsible: false
                ,id: 'center'
                ,region:'center'
                ,margins: '3 3 3 0'
                ,layout: 'card'
                ,activeItem: 0
                ,items: [{
                    border: false
                    ,layout: 'anchor'
                    ,bodyStyle: 'background:#FFFFFF; padding:25px;'
                    ,items: [{
                        title: ''
                        ,height:60
                        ,width:500
                        ,bodyStyle: 'background:#F9F9F9; padding:10px; border:1px dotted #999;text-align:center;'
                        ,html:'<h1 class="header"><?=PLEASE_MAKE_YOUR_SELECTIONS;?></h1>'
                    }]
                }]
            }]
        }]
    });
    var myCombo = Ext.getCmp('FILTER_ID');
    if (myCombo)
    myCombo.on('select', function() {
        myTree.loader.baseParams.objectId = Ext.getCmp('FILTER_ID').getValue();
        myTree.root.reload();
        myTree.getRootNode().expand(true, false);
        Ext.getCmp('center').getLayout().setActiveItem(0);
    });
    var myTree = <?=$OBJECT_TREE->ExtgetCmp();?>;
    myTree.on('click', function(node, e){
        
        if(!node.isLeaf()){
            var setDisabled = false;
        }else if(node.isLeaf() && node.attributes.isParent!=0){
            var setDisabled = false;
        }else{
            var setDisabled = true;    
        }
        
        if(node.attributes.parent>0){
            if(node.attributes.type == "DISCIPLINE_TYPE_STUDENT" || node.attributes.type == "DISCIPLINE_TYPE_STAFF"){
                var nameAdd = '<?=ADD_A_NEW_ITEM;?> (<?=KIND_OF_PUNISHMENT;?>)';
            }else{
                var nameAdd = '<?=ADD_A_NEW_ITEM;?>';
            }
        }else{
            var nameAdd = '<?=ADD_A_NEW_ITEM;?>';
        }
        
        var contextMenu = new Ext.menu.Menu({
            items: [{
                text: '<?=SHOW_DETAIL;?>'
                ,iconCls:'icon-application_form_magnify'
                ,handler:function(){
                    clickOpenPage('center','<?=SHOW_DETAIL?> &raquo; ' + node.text, '<?=$this->URL_SHOW_CAMEMIS_TYPE;?>objectId=' + node.id);
                }
            },{
                text: nameAdd
                ,iconCls:'icon-application_form_add'
                ,disabled:setDisabled
                ,handler: function(){
                    clickOpenPage('center','<?=ADD_A_NEW_ITEM?>', '<?=$this->URL_SHOW_CAMEMIS_TYPE;?>objectId=new&parentId=' + node.id);
                }
            }]
        });
        e.stopEvent();
        contextMenu.showAt(e.xy);
    }); 
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>