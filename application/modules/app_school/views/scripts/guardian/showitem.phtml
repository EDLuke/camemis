<?
///////////////////////////////////////////////////////////
// @Sea Peng
// Date: 25.11.2013
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once 'models/UserAuth.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_FORM = new CamemisForm("GUARDIAN");
$OBJECT_FORM->setLoadUrl('/guardian/jsonload/');
$OBJECT_FORM->setSaveUrl('/guardian/jsonsave/');

$OBJECT_GRID = new CamemisGrid("GUARDIAN", "LIST");
$OBJECT_GRID->setLoadUrl("/guardian/jsonload/");
$OBJECT_GRID->setSaveUrl("/guardian/jsonsave/");
$columndata = Utiles::getGridColumnData("GUARDIAN_LIST_ID");

$STUDENT_GRID = new CamemisGrid("STUDENTS", "LIST");
$STUDENT_GRID->setLoadUrl("/guardian/jsonload/");
$STUDENT_GRID->setSaveUrl("/guardian/jsonsave/");
$columndataStudent = Utiles::getGridColumnData("STUDENTS_LIST_ID");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
    Ext.onReady(function() {
        
        function cssStatus(v, p, record){
            return String.format('<div style=\"font-weight:bold;padding:4px;background:{1};color:{2};\">{0}</div>'
                ,v
                ,record.data['BG_COLOR']
                ,record.data['BG_COLOR_FONT']
            );
        }

        <?
        /**
         * Extjs: s.gif
         */
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
        
        $OBJECT_GRID->addReadField("name: 'ID'");
        $OBJECT_GRID->addReadField("name: 'CODE'");
        $OBJECT_GRID->addReadField("name: 'STUDENT'");
        $OBJECT_GRID->addReadField("name: 'GENDER'");
        $OBJECT_GRID->addReadField("name: 'DATE_BIRTH'");
        $OBJECT_GRID->addReadField("name: 'BG_COLOR'");
        $OBJECT_GRID->addReadField("name: 'BG_COLOR_FONT'");
        $OBJECT_GRID->addReadField("name: 'STATUS_KEY'");
        
        $OBJECT_GRID->addColumn("header: '<b>".STATUS."</b>', align:'center', width: 100, hidden:".checkColHidden(1, $columndata).", renderer:cssStatus, sortable: true, dataIndex: 'STATUS_KEY'");
        $OBJECT_GRID->addColumn("header: '<b>" . CODE_ID . "</b>', align:'left', width: 80, hidden:".checkColHidden(2, $columndata).", dataIndex: 'CODE'");
        $OBJECT_GRID->addColumn("header: '<b>" . STUDENT . "</b>', align:'left', width: 180, hidden:".checkColHidden(3, $columndata).", dataIndex: 'STUDENT'");
        $OBJECT_GRID->addColumn("header: '<b>" . GENDER . "</b>', width: 70, sortable: true, hidden:".checkColHidden(4, $columndata).", dataIndex: 'GENDER'");
        $OBJECT_GRID->addColumn("header: '<b>" . DATE_BIRTH . "</b>', width: 90, sortable: true, hidden:".checkColHidden(5, $columndata).", dataIndex: 'DATE_BIRTH'");
        
        $OBJECT_GRID->baseParams = "
            start:0
            ,limit:100
            ,cmd: 'jsonLoadStudentGuardian'
            ,objectId: '" . $this->objectId . "'
        ";
        
        $OBJECT_GRID->setRemoveParams("
            cmd: 'jsonRemoveStudentGuardian'
            ,objectId: '" . $this->objectId . "'
        ");
        
        $OBJECT_GRID->setRemoveEmbeddedEvents("
            Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
        ");
        
        if(UserAuth::getUserType()!='GUARDIAN'){
            $OBJECT_GRID->addTBarItems("
                tbar.add([{
                    id: 'ADD_ID'
                    ,scope:this
                    ,text:'".ADD_STUDENTS."'
                    ,tooltip:'".ADD_STUDENTS."'
                    ,iconCls:'icon-application_form_add'
                    ,handler: function(){
                        openWinXType('STUDENT_LIST','".STUDENT."', '".$STUDENT_GRID->getObjectXType()."', percentWidth(90), percentHeight(80));       
                    }
                }]);
            ");
            
            $OBJECT_GRID->addTBarItems(CamemisBar::tbarGridRemove("this.onRemove"));    
        }
        
        $OBJECT_GRID->addTBarItems("
            tbar.add('->');
        ");
        
        $OBJECT_GRID->removeNAME = "STUDENT";
        $OBJECT_GRID->loadMask = true;
        $OBJECT_GRID->isPagingToolbar = true;
        $OBJECT_GRID->forceFit = "false";
        $OBJECT_GRID->renderJS();
        
        //////////////////////////////////////////////////////////////////////////////////////////////////////////
        //@Student Grid
        //////////////////////////////////////////////////////////////////////////////////////////////////////////
        $STUDENT_GRID->addReadField("name: 'ID'");
        $STUDENT_GRID->addReadField("name: 'CODE'");
        $STUDENT_GRID->addReadField("name: 'STUDENT'");
        $STUDENT_GRID->addReadField("name: 'DATE_BIRTH'");
        $STUDENT_GRID->addReadField("name: 'GENDER'");
        $STUDENT_GRID->addReadField("name: 'BG_COLOR'");
        $STUDENT_GRID->addReadField("name: 'BG_COLOR_FONT'");
        $STUDENT_GRID->addReadField("name: 'STATUS_KEY'");
        
        $STUDENT_GRID->addColumn("header: '<b>".STATUS."</b>', align:'center', width: 100, hidden:".checkColHidden(1, $columndataStudent).", renderer:cssStatus, sortable: true, dataIndex: 'STATUS_KEY'");
        $STUDENT_GRID->addColumn("header: '<b>" . CODE_ID . "</b>', align:'left', width: 80, hidden:".checkColHidden(2, $columndataStudent).", dataIndex: 'CODE'");
        $STUDENT_GRID->addColumn("header: '<b>" . STUDENT . "</b>', align:'left', width: 200, hidden:".checkColHidden(3, $columndataStudent).", dataIndex: 'STUDENT'");
        $STUDENT_GRID->addColumn("header: '<b>" . GENDER . "</b>', width: 100, sortable: true, hidden:".checkColHidden(4, $columndataStudent).", dataIndex: 'GENDER'");
        $STUDENT_GRID->addColumn("header: '<b>" . DATE_BIRTH . "</b>', width: 100, sortable: true, hidden:".checkColHidden(5, $columndataStudent).", dataIndex: 'DATE_BIRTH'");
        
        $STUDENT_GRID->baseParams = "
            start:0
            ,limit:100
            ,cmd: 'jsonLoadActiveStudentsForGuardian'
            ,objectId: '" . $this->objectId . "'
        ";
        
        $STUDENT_GRID->setSelectionParams("
            cmd: 'jsonActionAddStudentToGuardian'
            ,objectId: '" . $this->objectId . "'
        ");
        
        $STUDENT_GRID->setSelectionEmbeddedEvents("
            Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
        ");
        
        $STUDENT_GRID->addTBarItems("
            tbar.add([{
                id: 'APLY_ID'
                ,text: '<b>" . APPLY . "</b>'
                ,iconCls:'icon-disk'
                ,scope:this
                ,handler: this.onSelection
            }]);
        ");
        
        $STUDENT_GRID->addTBarItems("
            tbar.add('->');
        ");
        
        $STUDENT_GRID->loadMask = true;
        $STUDENT_GRID->isPagingToolbar = true;
        $STUDENT_GRID->isQuickySearch = true;
        $STUDENT_GRID->isCheckboxSelect = true;
        $STUDENT_GRID->forceFit = "false";
        $STUDENT_GRID->renderJS();
        
        //////////////////////////////////////////////////////////////////////////////////////////////////
        
        $PERSONAL_IMAGE_ITEMS = "
            title: '" . PERSONAL_IMAGE . "'
            ,height: 270
            ,collapsible: true
            ,collapsed: false
            ,layout: 'fit'
            ,style: 'padding-bottom: 5px'
            ,width: 550
            ,items: [new Ext.ux.IFrameComponent({ id: 'PERSONAL_IMAGE', url:'/dataset/image/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&objectName=PERSONAL_IMAGE")."'})]
        ";
        
        if($this->objectId == "new"){
            $PERSONAL_INFORMATION_ITEMS = "
                title: '".PERSONAL_INFORMATION."'
                ,autoHeight: true
                ,style: 'padding-bottom:5px'
                ,collapsible: true
                ,collapsed: false
                ,width: 550
                ,items:[{
                    layout: 'form'
                    ,border: false
                    ,autoHeight:true
                    ,bodyStyle: 'padding:10px'
                    ,items: [
                        {".CamemisField::Textfield("FIRSTNAME","FIRSTNAME",FIRSTNAME, true)."}
                        ,{".CamemisField::Textfield("LASTNAME","LASTNAME",LASTNAME, true)."}
                    ]
                }]   
            ";    
        }else{
            $PERSONAL_INFORMATION_ITEMS = "
                title: '".PERSONAL_INFORMATION."'
                ,autoHeight: true
                ,style: 'padding-bottom:5px'
                ,collapsible: true
                ,collapsed: false
                ,width: 550
                ,items:[{
                    layout: 'form'
                    ,border: false
                    ,autoHeight:true
                    ,bodyStyle: 'padding:10px'
                    ,items: [
                        {".CamemisField::Displayfield("CODE", CODE_ID, false)."}
                        ,{".CamemisField::Textfield("FIRSTNAME","FIRSTNAME",FIRSTNAME, true)."}
                        ,{".CamemisField::Textfield("LASTNAME","LASTNAME",LASTNAME, true)."}
                        ,{".CamemisField::Textfield("FIRSTNAME_LATIN","FIRSTNAME_LATIN",FIRSTNAME_LATIN, false, false)."}
                        ,{".CamemisField::Textfield("LASTNAME_LATIN","LASTNAME_LATIN",LASTNAME_LATIN, false, false)."}
                        ,{".CamemisField::ComboGender(GENDER)."}
                        ,{".CamemisField::Datefield("DATE_BIRTH", DATE_BIRTH, false)."}
                    ]
                }]   
            ";      
        }
        
        $CONTACT_INFORMATION_ITEMS = "
            title: '".CONTACT_INFORMATION."'
            ,autoHeight: true
            ,style: 'padding-bottom:5px'
            ,collapsible: true
            ,collapsed: false
            ,width: 550
            ,items:[{
                layout: 'form'
                ,border: false
                ,autoHeight:true
                ,bodyStyle: 'padding:10px'
                ,items: [
                    {".CamemisField::Textarea("ADDRESS", ADDRESS, 100, false, false)."}
                    ,{".CamemisField::Textfield("PHONE","PHONE",PHONE, false, false)."}
                    ,{".CamemisField::Textfield("EMAIL","EMAIL",EMAIL, false, false)."}
                ]
            }]   
        ";
        
        $STUDENTS_ITEMS = "
            title: '".STUDENTS."'
            ,layout:'fit'
            ,style: 'padding-bottom: 5px'
            ,width:550
            ,height:250
            ,items:[{xtype: '".$OBJECT_GRID->getObjectXtype()."'}]
        ";
        
        $CHANGE_PASSWORD_USER_ITEMS = "
            title: ''
            ,border: false 
            ,items:[{
                xtype: 'panel'
                ,collapsible: true
                ,collapsed: false
                ,style: 'padding-bottom: 5px'
                ,width: 550
                ,title: '".CHANGE_PASSWORD."'
                ,bodyStyle: 'padding:5px'
                ,tbar:['->',{
                    text: '".CHANGE_PASSWORD."'
                    ,iconCls:'icon-lightning'
                    ,handler:function(){
                        openWinIFrame('".CHANGE_PASSWORD."', '/guardian/changepassword/?objectId=".$this->objectId."', 550,350);
                    }
                }]
                ,items:[{
                    layout: 'form'
                    ,border: false
                    ,bodyStyle: 'padding:10px; background:#FFF;'
                    ,style: 'padding-bottom:10px'
                    ,items: [{
                        ".CamemisField::Displayfield("LOGINNAME",LOGINNAME,false)."
                    },{
                        ".CamemisField::Displayfield("PASSWORD",PASSWORD,'**********')."
                    },{
                        ".CamemisField::Displayfield("PASSWORD_REPEAT",PASSWORD_REPEAT,'**********')."
                    }]
                }]
            }]    
        ";
        
        $ITEMS = "[";
            if($this->objectId == "new"){
                $ITEMS .= "{".$PERSONAL_INFORMATION_ITEMS."}";    
            }else{
                $ITEMS .= "{".$PERSONAL_IMAGE_ITEMS."}";
                $ITEMS .= ",{".$STUDENTS_ITEMS."}";
                $ITEMS .= ",{".$CHANGE_PASSWORD_USER_ITEMS."}";
                $ITEMS .= ",{".$PERSONAL_INFORMATION_ITEMS."}";
                $ITEMS .= ",{".$CONTACT_INFORMATION_ITEMS."}";   
            }
        $ITEMS .= "]";
        
        $formItems = "
            border: false
            ,autoScroll: true
            ,id: 'FORM_ITEMS'
            ,items: ".$ITEMS."
        ";
        $OBJECT_FORM->addObjectItems($formItems);
        
        switch(UserAuth::getUserType()) {
            case "GUARDIAN":
                if (UserAuth::getACLValue("PERSONAL_INFORMATION_EDIT_RIGHT"))
                $OBJECT_FORM->addTBarItems(CamemisBar::tbarSingleSave());
                break;
            default:
                $OBJECT_FORM->addTBarItems("
                    text: '".CANCEL."'
                    ,id: 'CANCEL_ID'
                    ,formBind:true
                    ,iconCls:'icon-cancel'
                    ,scope:this
                    ,handler: function(){window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);}
                ");
                
                if($this->objectId != "new"){
                    $OBJECT_FORM->addTBarItems(CamemisBar::tbarSetRelease($this->status));
                    if(!$this->status)
                        $OBJECT_FORM->addTBarItems(CamemisBar::tbarSingleRemove());   
                }
                
                $OBJECT_FORM->addTBarItems(CamemisBar::tbarSave());    
                break;
                      
        }
        
        $OBJECT_FORM->setOnEmbeddedRemoveEvents("
            XMsg('".STATUS."','".MSG_ACTION_REMOVED_ITEM."'); 
            window.parent.Ext.getCmp('GUARDIAN_LIST_ID').store.reload();
            window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);
        ");
        
        $OBJECT_FORM->setSaveParams("
            cmd: 'jsonSaveGuardian'
            ,objectId: '".$this->objectId."'
        ");
        
        $OBJECT_FORM->setRemoveParams("
            cmd: 'jsonRemoveGuardian'
            ,objectId: '".$this->objectId."'
        ");
        
        $OBJECT_FORM->setLoadParams("
            cmd: 'jsonLoadGuardian'
            ,objectId: '".$this->objectId."'
        ");
        
        $OBJECT_FORM->setReleaseParams("
            cmd: 'releaseObject'
            ,objectId: '".$this->objectId."'
        ");
        
         $OBJECT_FORM->setonEmbeddedEvents("
            XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."');
            window.parent.Ext.getCmp('GUARDIAN_LIST_ID').store.reload();
            var result = Ext.util.JSON.decode(action.response.responseText);
            window.location='".$_SERVER["REQUEST_URI"]."&objectId='+result.objectId;
         ");
         
         $OBJECT_FORM->setOnEmbeddedReleaseEvents("
            ".camemisPage::setRequestURI()."
        ");
        
        $OBJECT_FORM->isObjectDefaultOnLoad = ($this->objectId=="new")?false:true; 
        $OBJECT_FORM->labelAlign = "left";
        $OBJECT_FORM->labelWidth = 120;
        $OBJECT_FORM->renderJS();  
        ?>
        
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items: [{
                xtype: 'panel'
                ,id: 'CONTENT'
                ,border: false
                ,layout: 'card'
                ,activeItem: 0
                ,items: [{
                    layout: 'fit'
                    ,border: false
                    ,items: [{xtype: '<?=$OBJECT_FORM->getObjectXType();?>'}]
                }]
            }]
        }); 
        Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'})); 
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>