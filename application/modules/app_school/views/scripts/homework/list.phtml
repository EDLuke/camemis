<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_GRID = new CamemisGrid("HOMEWORK", "LIST");
$OBJECT_GRID->setLoadUrl('/homework/jsonload/');
$OBJECT_GRID->setSaveUrl('/homework/jsonsave/');
$columndata = Utiles::getGridColumnData("HOMEWORK_LIST_ID");
$columndataTeacher = Utiles::getGridColumnData("HOMEWORK_LIST_ID");
$columndataStudent = Utiles::getGridColumnData("HOMEWORK_LIST_ID");

$OBJECT_FORM = new CamemisForm("HOMEWORK");
$OBJECT_FORM->setLoadUrl('/homework/jsonload/');
$OBJECT_FORM->setSaveUrl('/homework/jsonsave/');

$classId = isset($_GET["classId"])?addText($_GET["classId"]):"";
$teacherId = isset($_GET["teacherId"])?addText($_GET["teacherId"]):"";
$subjectId = isset($_GET["subjectId"])? (int)$_GET["subjectId"]:"";
$gradeId = isset($_GET["gradeId"])?addText($_GET["gradeId"]):"";
$schoolyearId = isset($_GET["schoolyearId"])?addText($_GET["schoolyearId"]):"";
$gradesubjectId = isset($_GET["gradesubjectId"])?addText($_GET["gradesubjectId"]):"";
$studentId = isset($_GET["studentId"])? addText($_GET["studentId"]): $this->ObjectId;

//@ Math Man
if ($schoolyearId == '') {
    $entries = Utiles::listStudentSchoolyear($studentId);
    foreach ($entries as $values)
    $schoolyearId = $values['ID'];
}

$studentObject = Utiles::getStudentClassTraditional($studentId, $schoolyearId);
//////////////////////////////////////////////////////////////////////////////

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

?>

<script>
	Ext.onReady(function() {
		
		function cssTextBold(value, metadata, record){
			if(record.data.DISABLED_BY == ''){
				return '<div style="margin: 3px 10px 3px 10px; font-weight:normal; color:#555; white-space:normal;">' + value + '</div>';
			}else{
				return '<div style="margin: 3px 10px 3px 10px; font-weight:normal; color:#30C; white-space:normal;">' + value + '</div>';
			}
		}
        
		function cssText(value, metadata, record){
			return '<div style="margin: 3px 10px 3px 10px; font-weight:normal; color:#555; white-space:normal;">' + value + '</div>';
		}
        
		<?
		$CAMEMIS_PAGE_OBJECT->setCostumerCSS();
		$CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
				
		if(UserAuth::getUserType()){ 
			switch(UserAuth::getUserType()){
				case "SUPERADMIN":
				case "ADMIN":
					$OBJECT_GRID->addReadField("name: 'SUBJECT_NAME'");
					$OBJECT_GRID->addReadField("name: 'NAME'");
					$OBJECT_GRID->addReadField("name: 'FULL_NAME'");
					$OBJECT_GRID->addReadField("name: 'START_DATE'");
					$OBJECT_GRID->addReadField("name: 'END_DATE'"); 
					$OBJECT_GRID->addReadField("name: 'COUNT'");
					$OBJECT_GRID->addReadField("name: 'DISABLED_BY'"); 

					$OBJECT_GRID->addColumn("header: '<b>".SUBJECT."</b>',hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:160, hidden:".checkColHidden(1, $columndata).", dataIndex: 'SUBJECT_NAME'");
					$OBJECT_GRID->addColumn("header: '<b>".HOMEWORK_NAME."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:200, hidden:".checkColHidden(2, $columndata).", dataIndex: 'NAME'");
					$OBJECT_GRID->addColumn("header: '<b>".TEACHER."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, hidden:".checkColHidden(3, $columndata).", dataIndex: 'FULL_NAME'");
					$OBJECT_GRID->addColumn("header: '<b>".START_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, hidden:".checkColHidden(4, $columndata).", dataIndex: 'START_DATE'");
					$OBJECT_GRID->addColumn("header: '<b>".END_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, hidden:".checkColHidden(5, $columndata).", dataIndex: 'END_DATE'");
					$OBJECT_GRID->addColumn("header: '<b>".STATUS."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:80, hidden:".checkColHidden(6, $columndata).", dataIndex: 'COUNT'");
					break;
				case 'INSTRUCTOR':
				case 'TEACHER':
					$OBJECT_GRID->addReadField("name: 'SUBJECT_NAME'");
					$OBJECT_GRID->addReadField("name: 'NAME'");
					$OBJECT_GRID->addReadField("name: 'START_DATE'");
					$OBJECT_GRID->addReadField("name: 'END_DATE'");
					$OBJECT_GRID->addReadField("name: 'CONTENT'");
					$OBJECT_GRID->addReadField("name: 'COUNT'");
					$OBJECT_GRID->addReadField("name: 'DISABLED_BY'"); 

					$OBJECT_GRID->addColumn("header: '<b>".SUBJECT."</b>',hidden: false, align:'left', menuDisabled : true, sortable: true, width:160, hidden:".checkColHidden(1, $columndataTeacher).", dataIndex: 'SUBJECT_NAME'");
					$OBJECT_GRID->addColumn("header: '<b>".HOMEWORK_NAME."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:200, hidden:".checkColHidden(2, $columndataTeacher).", dataIndex: 'NAME'");
					$OBJECT_GRID->addColumn("header: '<b>".START_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, hidden:".checkColHidden(3, $columndataTeacher).", dataIndex: 'START_DATE'");
					$OBJECT_GRID->addColumn("header: '<b>".END_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, hidden:".checkColHidden(4, $columndataTeacher).", dataIndex: 'END_DATE'");
					$OBJECT_GRID->addColumn("header: '<b>".DESCRIPTION."</b>',hidden: false, align:'left',renderer:cssTextBold, menuDisabled : true, sortable: true, width:312, hidden:".checkColHidden(5, $columndataTeacher).", dataIndex: 'CONTENT'");
					$OBJECT_GRID->addColumn("header: '<b>".STATUS."</b>',hidden: false, align:'left',renderer:cssTextBold, menuDisabled : true, sortable: true, width:120, hidden:".checkColHidden(6, $columndataTeacher).", dataIndex: 'COUNT'");
					if($this->subjectId == ''){}
					else{
						if(Zend_Registry::get('USER')->ID == $teacherId )
						$OBJECT_GRID->addTBarItems("
							tbar.add([{
								id: 'ADD_A_NEW_ITEM'
								,text: '".ADD_A_NEW_ITEM."'
								,iconCls:'icon-application_form_add'
								,handler: function(){
									clickOpenPage('content','".ADD_A_NEW_ITEM."', '/homework/showitem/?subjectId=".$subjectId."&teacherId=".$teacherId."&classId=".$classId."&objectId=new');
								}
							}]);
						");
					}
					break;
				case 'STUDENT':
                case 'GUARDIAN': 
					$OBJECT_GRID->addReadField("name: 'SUBJECT_NAME'");
					$OBJECT_GRID->addReadField("name: 'NAME'");
					$OBJECT_GRID->addReadField("name: 'FULL_NAME'");
					$OBJECT_GRID->addReadField("name: 'START_DATE'");
					$OBJECT_GRID->addReadField("name: 'END_DATE'");
					$OBJECT_GRID->addReadField("name: 'CONTENT'");
					$OBJECT_GRID->addReadField("name: 'DISABLED_BY'");

                    if ($studentObject) //@Math Man
                    $OBJECT_GRID->addColumn("header: '<b>".SUBJECT."</b>',hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:160, hidden:".checkColHidden(1, $columndataStudent).", dataIndex: 'SUBJECT_NAME'");
                    $OBJECT_GRID->addColumn("header: '<b>".HOMEWORK_NAME."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:200, hidden:".checkColHidden(2, $columndataStudent).", dataIndex: 'NAME'");
                    $OBJECT_GRID->addColumn("header: '<b>".TEACHER."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, hidden:".checkColHidden(3, $columndataStudent).", dataIndex: 'FULL_NAME'");
                    $OBJECT_GRID->addColumn("header: '<b>".START_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, hidden:".checkColHidden(4, $columndataStudent).", dataIndex: 'START_DATE'");
                    $OBJECT_GRID->addColumn("header: '<b>".END_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, hidden:".checkColHidden(5, $columndataStudent).", dataIndex: 'END_DATE'");
                    if ($studentObject) //@Math Man
                    $OBJECT_GRID->addColumn("header: '<b>".DESCRIPTION."</b>',hidden: false, align:'left',renderer:cssTextBold, menuDisabled : true, sortable: true, width:310, hidden:".checkColHidden(6, $columndataStudent).", dataIndex: 'CONTENT'");
					break;
			}
		}
		
		$OBJECT_GRID->baseParams = "
			start:0
			,limit:100
			,cmd: 'jsonLoadAllSubjectHomeworks'  
			,classId: '".$classId."' 
			,subjectId: '".$subjectId."'
			,gradesubjectId: '".$gradesubjectId."'
			,studentId: '".$studentId."'
			,teacherId: '".$teacherId."'
		";

		$OBJECT_GRID->addTBarItems("
			tbar.add('->');
		");
		$OBJECT_GRID->loadMask = false;
		$OBJECT_GRID->isQuickySearch = true;
		$OBJECT_GRID->isObjectDefaultOnLoad = true;
		switch(UserAuth::getUserType()){
			case 'INSTRUCTOR':
			case 'TEACHER':
				 $OBJECT_GRID->isGroupingView = true;
				 $OBJECT_GRID->groupField = "SUBJECT_NAME";
			break;
		} 
		$OBJECT_GRID->forceFit = "false";
		$OBJECT_GRID->renderJS();
		?>
		
		viewport = new Ext.Viewport({
			layout: 'fit'
			,border: false
			,items:[{
				border: false
				,id:'content'
				,layout: 'card'
				,activeItem: 0
				,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType()?>'}]
			}]
		});
		
		Ext.getCmp('HOMEWORK_LIST_ID').on('cellclick', function(grid, rowIndex, columnIndex, event) {
			var record = grid.store.getAt(rowIndex);
			clickOpenPage('content','','/homework/showitem/?objectId=' + record.data.ID + '&classId=<?=$classId?>&teacherId=<?=$teacherId?>&subjectId=<?=$subjectId?>');
		});
		Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));	
	});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>