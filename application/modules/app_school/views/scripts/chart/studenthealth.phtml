<?
//////////////////////
/// @Sor Veasna
///Date : 26-02-2014
///
///////////////////
require_once 'models/statistic/StudentHealthStatisticsDBAccess.php';
require_once 'models/HealthSettingDBAccess.php';

$target = isset($_GET["target"])?addText($_GET["target"]):"";

$dataSet="[]";

if($objectType){
    switch($objectType){
        case 'VACCINATION':
            $dataSet = "[";
            $vaccination=HealthSettingDBAccess::sqlHealthSetting(3, false);
            if($vaccination){
                $vaccinationItems = HealthSettingDBAccess::sqlHealthSetting($vaccination[0]->ID, false);
                if($vaccinationItems){
                    foreach($vaccinationItems as $item){
                        $dataSet .= "{'key' : '".$item->NAME."','values':".StudentHealthStatisticsDBAccess::getStudentHealthByType($item->ID)."},";    
                    }
                }
            }
            $dataSet .= "]";
            ?>
                <!DOCTYPE html>
                <meta charset="utf-8">
                <link href=http://fonts.googleapis.com/css?family=Hanuman:regular,bold&subset=khmer rel=stylesheet type=text/css>
                <link href="/public/nvd3/src/nv.d3.css" rel="stylesheet" type="text/css">

                <style>

                body {
                  overflow-y:scroll;
                }

                text {
                  font: 11px sans-serif;
                }

                #chart1, #chart2 {
                  height:300px;
                }

                </style>
                <body class='with-3d-shadow with-transitions'>

                <div>
                <svg id="chart1"></svg>
                </div>
                    
                <script src="/public/nvd3/nvd3-camemis.php"></script>
                <script>

                var colors = d3.scale.category20();
                keyColor = function(d, i) {return colors(d.key);};
                var myDataset = <?=$dataSet;?>;

                var chart;
                nv.addGraph(function() {
                    chart = nv.models.stackedAreaChart()
                    //.width(600).height(500)
                    .showLegend(false)
                    .useInteractiveGuideline(true)
                    .x(function(d) { return d[0]; })
                    .y(function(d) { return d[1];})
                    .color(keyColor)
                    .transitionDuration(300);
                    //.clipEdge(true);
                    //chart.stacked.scatter.clipVoronoi(false);
                    chart.xAxis
                    .tickFormat(function(d) { return d3.time.format("%d.%m.%Y")(new Date(d));});
                    chart.yAxis
                    //.tickFormat(d3.format(',.2f'));
                    .tickFormat(function(d){return d;});
                    d3.select('#chart1')
                    .datum(myDataset)
                    .transition().duration(0)
                    .call(chart);
                    nv.utils.windowResize(chart.update);
                    chart.dispatch.on('stateChange', function(e) { nv.log('New State:', JSON.stringify(e)); });
                    return chart;
                });
                </script>
            <? 
            break;
        case 'MEDICAL_VISIT':    
        case 'BMI':
        case 'GROWTH_CHART':
            if($objectType=='MEDICAL_VISIT'){
                $dataSet = "[";
                $dataSet .= "{'key' : '".MALE."','values':".StudentHealthStatisticsDBAccess::getStudentHealthByGender('MALE','MEDICAL_VISIT')."},";    
                $dataSet .= "{'key' : '".FEMALE."','values':".StudentHealthStatisticsDBAccess::getStudentHealthByGender('FEMALE','MEDICAL_VISIT')."},";
            $dataSet .= "]";   
            }else if($objectType=='BMI'){
                $dataSet = "[";
                $dataSet .= "{'key' : 'Underweight','color':'#FFDEDE','values':".StudentHealthStatisticsDBAccess::getStudentHealthBMIByMonthType('UNDERWEIGHT')."}";
                $dataSet .= ",{'key' : 'Normal weight','color':'#99BBE8','values':".StudentHealthStatisticsDBAccess::getStudentHealthBMIByMonthType('NORMAL_WEIGHT')."}";
                $dataSet .= ",{'key' : 'Overweight','color':'#FFDEE7','values':".StudentHealthStatisticsDBAccess::getStudentHealthBMIByMonthType('OVER_WEIGHT')."}";
                $dataSet .= ",{'key' : 'Obesity','color':'#9FFDED','values':".StudentHealthStatisticsDBAccess::getStudentHealthBMIByMonthType('OBESITY')."}";
                $dataSet .= "]";
            }else if($objectType=='GROWTH_CHART'){ 
                $dataSet = "[";
                $dataSet .= "{'key' : '".MALE."','values':".StudentHealthStatisticsDBAccess::getStudentHealthByGender('MALE','GROWTH_CHART')."},";    
                $dataSet .= "{'key' : '".FEMALE."','values':".StudentHealthStatisticsDBAccess::getStudentHealthByGender('FEMALE','GROWTH_CHART')."},";
                $dataSet .= "]";     
            }
            
            ?>
            <!DOCTYPE html>
            <meta charset="utf-8">
            <link href="/public/nvd3/src/nv.d3.css" rel="stylesheet" type="text/css">

            <style>

            body {
                overflow-y:scroll;
            }

            text {
                font: 11px Helvetica,verdana,arial,sans-serif,Hanuman;
            }

            #chart1 {
                height:230px; 
                margin: 10px;
                min-width: 100px;
                min-height: 100px;
                /*
                Minimum height and width is a good idea to prevent negative SVG dimensions...
                For example width should be =< margin.left + margin.right + 1,
                of course 1 pixel for the entire chart would not be very useful, BUT should not have errors
                */
            }

            </style>
            <body>

            <div id="chart1"><svg></svg></div>
            <script src="/public/nvd3/nvd3-camemis.php"></script>
            <script>

            var chart;
            nv.addGraph(function() {
                chart = nv.models.multiBarChart()
                .showLegend(false)
                .barColor(d3.scale.category20().range())
                .margin({bottom: 50})
                .transitionDuration(300)
                .delay(0)
                .rotateLabels(0)
                .groupSpacing(0.1);
                chart.multibar
                .hideable(true);
                chart.reduceXTicks(false).staggerLabels(true);
                chart.xAxis
                .showMaxMin(false)
                .tickFormat(function(d){ return d;});
                chart.yAxis
                .tickFormat(function(d){ return d;});
                d3.select('#chart1 svg')
                .datum(<?=$dataSet?>)
                .call(chart);
                nv.utils.windowResize(chart.update);
                chart.dispatch.on('stateChange', function(e) { nv.log('New State:', JSON.stringify(e)); });
                return chart;
            });
            </script>
            <?  
            break;
            
    }
}

?>

