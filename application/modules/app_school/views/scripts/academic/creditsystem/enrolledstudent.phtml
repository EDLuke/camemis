<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 19.02.2012
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once 'clients/CamemisGrid.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$LIST_OF_STUDENTS_GIRD = new CamemisGrid("LIST_OF_STUDENTS", "LIST_OF_STUDENTS");
$LIST_OF_STUDENTS_GIRD->setLoadUrl("/student/jsonload/");
$LIST_OF_STUDENTS_GIRD->setSaveUrl("/student/jsonsave/");
$ASSIGNED_STUDENTS_GRID = new CamemisGrid("ASSIGNED_STUDENTS", "ENROLLED_STUDENTS");
$ASSIGNED_STUDENTS_GRID->setLoadUrl("/student/jsonload/");
$ASSIGNED_STUDENTS_GRID->setSaveUrl("/student/jsonsave/");

if(!$this->facette) {header("Location: /main/permission/");}

$display = isset($_GET["display"])?$_GET["display"]:"";

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
var studentId;
Ext.onReady(function() {
	
    function cssStatus(v, p, record){
        return String.format('<div style=\"font-weight:bold;padding:4px;background:{1};color:{2};\">{0}</div>'
        ,v
        ,record.data['BG_COLOR']
        ,record.data['BG_COLOR_FONT']
        );
    }
        
    function cssText(value, metadata, record){
        return '<div style="font-weight:normal; color:#000; padding: 5px; height: 15px;;">' + value + '</div>';
    }
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    ///////////////////////////////////////////////////////
    $LIST_OF_STUDENTS_GIRD->addReadField("name: 'CODE_ID'");
    $LIST_OF_STUDENTS_GIRD->addReadField("name: 'LASTNAME'");
    $LIST_OF_STUDENTS_GIRD->addReadField("name: 'FIRSTNAME'");
    $LIST_OF_STUDENTS_GIRD->addReadField("name: 'GENDER'");
    $LIST_OF_STUDENTS_GIRD->addReadField("name: 'DATE_BIRTH'");
    $LIST_OF_STUDENTS_GIRD->addReadField("name: 'BG_COLOR'");
    $LIST_OF_STUDENTS_GIRD->addReadField("name: 'BG_COLOR_FONT'");
    $LIST_OF_STUDENTS_GIRD->addReadField("name: 'STATUS_KEY'");
        
    switch(Zend_Registry::get('SYSTEM_LANGUAGE')){
        case "VIETNAMESE": $width = 125;break;
        default: $width = 85;break;
    }

    $LIST_OF_STUDENTS_GIRD->addColumn("header: '<b>".STATUS."</b>', align:'center', width: ".$width.", renderer:cssStatus, sortable: true, dataIndex: 'STATUS_KEY'");
    $LIST_OF_STUDENTS_GIRD->addColumn("header: '<b>".CODE_ID."</b>', align:'left', renderer:cssText, sortable: true, width: 80, dataIndex: 'CODE_ID'");
    $LIST_OF_STUDENTS_GIRD->addColumn("header: '<b>".LASTNAME."</b>', width: 100, renderer:cssText, sortable: true, dataIndex: 'LASTNAME'");
    $LIST_OF_STUDENTS_GIRD->addColumn("header: '<b>".FIRSTNAME."</b>', width: 100, renderer:cssText, sortable: true, dataIndex: 'FIRSTNAME'");
    $LIST_OF_STUDENTS_GIRD->addColumn("header: '<b>".GENDER."</b>', width: 100, renderer: cssText, sortable: true, dataIndex: 'GENDER'");
    $LIST_OF_STUDENTS_GIRD->addColumn("header: '<b>".DATE_BIRTH."</b>', width: 120, renderer: cssText, sortable: true, dataIndex: 'DATE_BIRTH'");
    
    $LIST_OF_STUDENTS_GIRD->isQuickySearch = true;
    $LIST_OF_STUDENTS_GIRD->isCheckboxSelect = true;

    if(UserAuth::getACLValue("ACADEMIC_GENERAL_EDUCATION_EXECUTE_RIGHT")){
        $LIST_OF_STUDENTS_GIRD->addTBarItems("
            tbar.add('-');
        ");
        $LIST_OF_STUDENTS_GIRD->addTBarItems("
            tbar.add([{
                id: 'LIST_ADD_ENROLLMENT_RECORD_ID'
                ,text: '<b>".APPLY_INTO_LIST_OF_STUDENTS."</b>'
                ,iconCls:'icon-disk'
                ,scope:this
                ,handler: this.onSelection
            }]);
        ");
    }
    
    $LIST_OF_STUDENTS_GIRD->baseParams = "
        start:0
        ,limit:100
        ,academicId: '".$this->facette->GUID."'
        ,cmd: 'jsonUnenrolledStudentSubject'
    ";

    $LIST_OF_STUDENTS_GIRD->setSelectionParams("
        cmd: 'jsonAddEnrollStudentSubject'
        ,academicId: '".$this->facette->GUID."'
    ");

    $LIST_OF_STUDENTS_GIRD->setSelectionEmbeddedEvents("
        Ext.getCmp('".$ASSIGNED_STUDENTS_GRID->getObjectId()."').store.reload();
    ");

    $LIST_OF_STUDENTS_GIRD->addTBarItems("
        tbar.add('->');
    ");
    $LIST_OF_STUDENTS_GIRD->forceFit = "false";
    $LIST_OF_STUDENTS_GIRD->renderJS();
    if(UserAuth::getACLValue("ACADEMIC_GENERAL_EDUCATION_EXECUTE_RIGHT")){
    $ASSIGNED_STUDENTS_GRID->addTBarItems("
        tbar.add('-',[{
            text: '".CANCEL."'
            ,id: 'CANCEL_ID'
            ,formBind:true
            ,iconCls:'icon-cancel'
            ,scope:this
            ,handler: function(){
                window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);
                window.parent.Ext.getCmp('ACADEMIC_ID').expand();
            }
        }]);
    ");
    }
    ///////////////////////////////////////////////////////
    if(UserAuth::getACLValue("ACADEMIC_GENERAL_EDUCATION_EXECUTE_RIGHT")){
    if($display == "target"){  
        $ASSIGNED_STUDENTS_GRID->addTBarItems("
            tbar.add('-',[{
                text: '".CANCEL."'
                ,id: 'CANCEL_ID'
                ,formBind:true
                ,iconCls:'icon-cancel'
                ,scope:this
                ,handler: function(){
                    window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);
                    window.parent.Ext.getCmp('ACADEMIC_ID').expand();
                }
            }]);
        ");  
    }
    }
    
    if(UserAuth::getACLValue("ACADEMIC_GENERAL_EDUCATION_EXECUTE_RIGHT")){
        if($this->facette->OBJECT_TYPE != "SCHOOLYEAR")//$veasna
        $ASSIGNED_STUDENTS_GRID->addTBarItems(CamemisBar::tbarGridRemove("this.onRemove"));
    }
    
    if(UserAuth::getACLValue("ACADEMIC_GENERAL_EDUCATION_EXECUTE_RIGHT")){
        if($this->facette->OBJECT_TYPE != "SCHOOLYEAR")//$veasna
            $ASSIGNED_STUDENTS_GRID->addTBarItems("
                tbar.add(['-',{
                    id: 'ADD_STUDENTS'
                    ,iconCls:'icon-application_form_add'
                    ,text: '".ADD_STUDENTS." '
                    ,handler: function(){
                        openWinXType('WinXType','".ADD_STUDENTS."', '".$LIST_OF_STUDENTS_GIRD->getObjectXType()."',percentWidth(80), percentHeight(85));
                    }
                }]);
            ");
    }
    
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'ID'");
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'CODE_ID'");
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'SUBJECT_TGRADE'");
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'STUDENT'");
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'FIRSTNAME'");
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'LASTNAME'");
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'GENDER'");
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'DATE_BIRTH'");
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'GRADEGROUP'");
    
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'BG_COLOR'");
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'BG_COLOR_FONT'");
    $ASSIGNED_STUDENTS_GRID->addReadField("name: 'STATUS_KEY'");
    
    switch(Zend_Registry::get('SYSTEM_LANGUAGE')){
        case "VIETNAMESE": $width = 125;break;
        default: $width = 85;break;
    }
    if($this->facette->OBJECT_TYPE == "SCHOOLYEAR"){//$veasna
        $ASSIGNED_STUDENTS_GRID->addColumn("header: '<b>".SUBJECT."</b>', align:'center', width: 80, renderer:cssText, sortable: true, dataIndex: 'SUBJECT_TGRADE'");
    }
    switch(UserAuth::getUserType()){
        case "SUPERADMIN":
        case "ADMIN":
    $ASSIGNED_STUDENTS_GRID->addColumn("header: '<b>".STATUS."</b>', align:'center', width: ".$width.", renderer:cssStatus, sortable: true, dataIndex: 'STATUS_KEY'");
        break;
    }
    $ASSIGNED_STUDENTS_GRID->addColumn("header: '<b>".CODE_ID."</b>', align:'center', width: 80, renderer: cssText, sortable: true, dataIndex: 'CODE_ID'");
    $ASSIGNED_STUDENTS_GRID->addColumn("header: '<b>".LASTNAME."</b>', width: 120, renderer: cssText, sortable: true, dataIndex: 'LASTNAME'");
    $ASSIGNED_STUDENTS_GRID->addColumn("header: '<b>".FIRSTNAME."</b>', width: 120, renderer: cssText, sortable: true, dataIndex: 'FIRSTNAME'");
    $ASSIGNED_STUDENTS_GRID->addColumn("header: '<b>".GENDER."</b>', align:'center',  width: 100, renderer: cssText, sortable: true, dataIndex: 'GENDER'");
    $ASSIGNED_STUDENTS_GRID->addColumn("header: '<b>".DATE_BIRTH."</b>', width: 120, renderer: cssText, sortable: true, dataIndex: 'DATE_BIRTH'");
    
    if($this->facette->OBJECT_TYPE == "SUBJECT"){
        $ASSIGNED_STUDENTS_GRID->addColumn("header: '<b>".GRADEGROUP."</b>', width: 120, renderer: cssText, sortable: true, dataIndex: 'GRADEGROUP'");
    }
    
    $ASSIGNED_STUDENTS_GRID->setRemoveParams("
        cmd: 'jsonRemoveEnrolledStudentSubject'
        ,academicId: '".$this->facette->GUID."'
    ");
           
    $ASSIGNED_STUDENTS_GRID->baseParams = "
        start:0
        ,limit:100
        ,academicId: '".$this->facette->GUID."'
        ,cmd: 'jsonEnrolledStudentBySubject'
    ";
    
    $ASSIGNED_STUDENTS_GRID->setRemoveEmbeddedEvents("
        Ext.getCmp('".$ASSIGNED_STUDENTS_GRID->getObjectId()."').store.reload();
    ");
    
    $ASSIGNED_STUDENTS_GRID->addTBarItems("
        tbar.add('->');
    ");
    if($this->facette->OBJECT_TYPE == "SCHOOLYEAR"){    //$veasna
        $ASSIGNED_STUDENTS_GRID->isGroupingView=true;
        $ASSIGNED_STUDENTS_GRID->groupField = "SUBJECT_TGRADE";        
    }
    $ASSIGNED_STUDENTS_GRID->removeNAME = "STUDENT";
    $ASSIGNED_STUDENTS_GRID->loadMask = true;
    $ASSIGNED_STUDENTS_GRID->isPagingToolbar = true;
    $ASSIGNED_STUDENTS_GRID->isQuickySearch = true;
    $ASSIGNED_STUDENTS_GRID->isObjectDefaultOnLoad = true;
    $ASSIGNED_STUDENTS_GRID->forceFit = "false";
    $ASSIGNED_STUDENTS_GRID->renderJS();
    ///////////////////////////////////////////////////////
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'fit'
            ,border: false
            ,items:[{xtype: '<?=$ASSIGNED_STUDENTS_GRID->getObjectXtype();?>'}]
        }]
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>