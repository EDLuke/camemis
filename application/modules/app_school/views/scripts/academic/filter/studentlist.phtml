<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$objectId = isset($_GET["objectId"])?addText($_GET["objectId"]):"";

$gradeId = "";
$campusId = "";
$schoolyearId = "";
$classId = "";

if (strpos($objectId, "CAMPUS_") !== false) {
    $Ids = explode("_",substr($objectId, 7));
    $campusId = isset($Ids[0])?$Ids[0]:"";
    $schoolyearId = isset($Ids[1])?$Ids[1]:"";
    $objectType = "CAMPUS";
} elseif (strpos($objectId, "GRADE_") !== false) {
    $objectType = "GRADE";
    $Ids = explode("_",substr($objectId, 6));
    $gradeId = isset($Ids[0])?$Ids[0]:"";
    $campusId = isset($Ids[1])?$Ids[1]:"";
    $schoolyearId = isset($Ids[2])?$Ids[2]:"";
} else{
    $classId = $objectId;
}

$OBJECT_GRID = new CamemisGrid("STUDENT", "FILTER_".$objectType."");
$OBJECT_GRID->setLoadUrl('/student/jsonload/');
$OBJECT_GRID->setSaveUrl('/student/jsonsave/');

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$columndata = Utiles::getGridColumnData("STUDENT_FILTER_".$objectType."_ID");

?>
<style>
    .filter-row-grid .x-grid3-header {
    background: #f9f9f9 url(/public/images/filter-row-hrow.gif) repeat-x left top;
}

.filter-row-grid .filter-row-header {
    height: 26px;
}

tr.filter-row-header .filter-row-icon input {
    background-image: url(/public/images/filter-row-icon.png);
    background-repeat: no-repeat;
    padding-left: 16px;
}
</style>
<script>
Ext.onReady(function() {
    function cssText(value, metadata, record){
        return '<div style="font-weight:normal; color:#333; padding: 5px;">' + value + '</div>';
    }
    <?
    /**
     * Extjs: s.gif
     */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $OBJECT_GRID->addReadField("name: 'CODE'");
    $OBJECT_GRID->addReadField("name: 'STUDENT_SCHOOL_ID'");
    $OBJECT_GRID->addReadField("name: 'FIRSTNAME'");
    $OBJECT_GRID->addReadField("name: 'LASTNAME'");
    $OBJECT_GRID->addReadField("name: 'GENDER'");
    $OBJECT_GRID->addReadField("name: 'PHONE'");
    $OBJECT_GRID->addReadField("name: 'EMAIL'");
    $OBJECT_GRID->addReadField("name: 'DATE_BIRTH'");
    $OBJECT_GRID->addReadField("name: 'AGE'");
    $OBJECT_GRID->addReadField("name: 'CURRENT_CAMPUS'");
    $OBJECT_GRID->addReadField("name: 'CURRENT_GRADE'");
    $OBJECT_GRID->addReadField("name: 'CURRENT_CLASS'");
    $OBJECT_GRID->addReadField("name: 'NATIONALITY'");
    $OBJECT_GRID->addReadField("name: 'RELIGION'");
    $OBJECT_GRID->addReadField("name: 'ETHNIC_GROUPS'");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".CODE_ID."</b>'
        , width: 80
        , align:'center'
        , hidden:".checkColHidden(1, $columndata)."
        , renderer: cssText
        , sortable: true
        , dataIndex: 'CODE'
        ,filter:{}
    ");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".STUDENT_SCHOOL_ID."</b>'
        , width: 120
        , align:'center'
        , hidden:".checkColHidden(2, $columndata)."
        , renderer: cssText
        , sortable: true
        , dataIndex: 'STUDENT_SCHOOL_ID'
        ,filter:{}
    ");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".FIRSTNAME."</b>'
        , width: 120
        , align:'center'
        , hidden:".checkColHidden(3, $columndata)."
        , renderer: cssText
        , sortable: true
        , dataIndex: 'FIRSTNAME'
        ,filter:{}
    ");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".LASTNAME."</b>'
        , width: 120
        , align:'center'
        , hidden:".checkColHidden(4, $columndata)."
        , renderer: cssText
        , sortable: true
        , dataIndex: 'LASTNAME'
        ,filter:{}
    ");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".GENDER."</b>'
        , width: 120
        , align:'center'
        , hidden:".checkColHidden(5, $columndata)."
        , renderer: cssText
        , sortable: true
        , dataIndex: 'GENDER'
        , filter: {
            field: {
                xtype: 'combo',
                mode: 'local',
                store: new Ext.data.ArrayStore({
                    id: 0,
                    fields: ['value'],
                    data: [['-'], ['" . MALE . "'], ['" . FEMALE . "']]
                }),
                valueField: 'value',
                displayField: 'value',
                triggerAction: 'all',
                value: '-'
            },
            fieldEvents: ['select'],
            test: function(filterValue, value, record) {
                return filterValue === '-' || filterValue === value;
            }
        }
    ");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".DATE_BIRTH."</b>'
        , width: 120
        , align:'center'
        , hidden:".checkColHidden(6, $columndata)."
        , renderer: cssText
        , sortable: true
        , dataIndex: 'DATE_BIRTH'
        ,filter:{}
    ");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".AGE."</b>'
        , width: 80
        , align:'center'
        , hidden:".checkColHidden(7, $columndata)."
        , renderer: cssText
        , sortable: true
        , dataIndex: 'AGE'
        ,filter:{}
    ");
    
    $OBJECT_GRID->addColumn("header: '<b>".PHONE."</b>', width: 150, align:'center', hidden:".checkColHidden(8, $columndata).", renderer: cssText, sortable: true, dataIndex: 'PHONE',filter:{}");
    $OBJECT_GRID->addColumn("header: '<b>".EMAIL."</b>', width: 150, align:'center', hidden:".checkColHidden(9, $columndata).", renderer: cssText, sortable: true, dataIndex: 'EMAIL',filter:{}");
    
    $OBJECT_GRID->addColumn("header: '<b>".CAMPUS."</b>', width: 170, align:'center', hidden:".checkColHidden(10, $columndata).", renderer: cssText, sortable: true, dataIndex: 'CURRENT_CAMPUS',filter:{}");
    $OBJECT_GRID->addColumn("header: '<b>".CURRENT_GRADE."</b>', width: 120, align:'center', hidden:".checkColHidden(11, $columndata).", renderer: cssText, sortable: true, dataIndex: 'CURRENT_GRADE',filter:{}");
    $OBJECT_GRID->addColumn("header: '<b>".CURRENT_CLASS."</b>', width: 120, align:'center', hidden:".checkColHidden(12, $columndata).", renderer: cssText, sortable: true, dataIndex: 'CURRENT_CLASS',filter:{}");
    
    $OBJECT_GRID->addColumn("header: '<b>".NATIONALITY."</b>', width: 150, align:'center', hidden:".checkColHidden(13, $columndata).", renderer: cssText, sortable: true, dataIndex: 'NATIONALITY',filter:{}");
    $OBJECT_GRID->addColumn("header: '<b>".RELIGION."</b>', width: 150, align:'center', hidden:".checkColHidden(14, $columndata).", renderer: cssText, sortable: true, dataIndex: 'RELIGION',filter:{}");
    $OBJECT_GRID->addColumn("header: '<b>".ETHNIC_GROUPS."</b>', width: 150, align:'center', hidden:".checkColHidden(15, $columndata).", renderer: cssText, sortable: true, dataIndex: 'ETHNIC_GROUPS',filter:{}");
    
    ////////////////////////////////////////////////////////////////////////////
    if(UserAuth::getACLValue("STUDENT_SEARCH_EXECUTE_RIGHT")){
        $OBJECT_GRID->addTBarItems("
            tbar.add([{
                text: '" . EXPORT_TO_EXCEL . "'
                ,disabled:true
                ,id: 'EXPORT_TO_EXCEL'
                ,iconCls:'icon-page_excel'
                ,handler: function(){
                    Ext.MessageBox.show({
                        msg: '".SAVING_YOUR_DATA_PLEASE_WAIT."',
                        progressText: 'Saving...',
                        width:300,
                        wait:true,
                        waitConfig: {interval:200},
                        icon:'ext-mb-download'
                    });
                    Ext.Ajax.request({
                        url: '/export/jsonexcel/'
                        ,method: 'POST'
                        ,timeout: 600000
                        ,params:{cmd: 'studentSearch',objectId:'STUDENT_SEARCH_ID'}
                        ,success: function(response, options) {
                            Ext.MessageBox.hide();
                            window.location='/export/openstudentlist/'
                        }
                    });
                }
            }]);
        ");
    }
    
    $OBJECT_GRID->addTBarItems("tbar.add('->');");
    $OBJECT_GRID->isQuickySearch = true;
    $OBJECT_GRID->isPagingToolbar = true;
    $OBJECT_GRID->isFilterRow = true;
    $OBJECT_GRID->isObjectDefaultOnLoad = true;
    $OBJECT_GRID->setUserColumn = true;
    $OBJECT_GRID->forceFit = "false";
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:1000
        ,displayCurrentAcademic:2
        ,cmd: 'searchStudent'
        ,campusId: '".$campusId."'  
        ,gradeId: '".$gradeId."'  
        ,schoolyearId: '".$schoolyearId."'  
        ,classId: '".$classId."'  
    ";
    $OBJECT_GRID->renderJS();
    
    $params = "";
    $params .= "objectType=".$objectType."";
    $params .= "&campusId=".$campusId."";
    $params .= "&gradeId=".$gradeId."";
    $params .= "&schoolyearId=".$schoolyearId."";
    
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            }
            ,items: [{
               	region:'north'
                ,id:'NORTH_ID'
                ,margins: '3 3 0 3'
                ,cmargins: '3 3 3 3'
                ,autoScroll: true
                ,height:300
                ,minSize:300
                ,maxSize:300
                ,layout: 'fit'
                ,items: [new Ext.ux.IFrameComponent({ id: 'TRADITIONAL_EDUCATION_SYSTEM', url:'/chart/studentacademictraditional/?camIds=<?=$this->urlEncryp->encryptedGet($params)?>'})]
            },{
               	collapsible: false
                ,id: 'center'
                ,region:'center'
                ,margins: '0 3 3 3'
                ,layout: 'card'
                ,activeItem: 0
                ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType()?>'}]
            }]
        }]
    });
    Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>