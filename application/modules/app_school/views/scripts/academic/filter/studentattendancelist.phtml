<?
///////////////////////////////////////////////////////////
// @Sor Veasna
// Date: 17.05.2014
// 
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once 'models/app_school/student/StudentAttendanceReportDBAccess.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$studentStatistic = new StudentAttendanceReportDBAccess();
$objectId = isset($_GET["objectId"])?addText($_GET["objectId"]):"";

$gradeId = "";
$campusId = "";
$schoolyearId = "";
$classId = "";

if (strpos($objectId, "CAMPUS_") !== false) {
    $Ids = explode("_",substr($objectId, 7));
    $campusId = isset($Ids[0])?$Ids[0]:"";
    $schoolyearId = isset($Ids[1])?$Ids[1]:"";
    $objectType = "CAMPUS";
} elseif (strpos($objectId, "GRADE_") !== false) {
    $objectType = "GRADE";
    $Ids = explode("_",substr($objectId, 6));
    $gradeId = isset($Ids[0])?$Ids[0]:"";
    $campusId = isset($Ids[1])?$Ids[1]:"";
    $schoolyearId = isset($Ids[2])?$Ids[2]:"";
} else{
    $objectType = "CLASS";
    $classId = $objectId;
}

$OBJECT_GRID = new CamemisGrid("STUDENT_ATTENDANCE", "FILTER_".$objectType."");
$OBJECT_GRID->setLoadUrl('/attendance/jsonload');
$OBJECT_GRID->setSaveUrl('/attendance/jsonsave/');

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$columndata = Utiles::getGridColumnData("STUDENT_ATTENDANCE_FILTER_".$objectType."_ID");

?>
<style>
    .filter-row-grid .x-grid3-header {
    background: #f9f9f9 url(/public/images/filter-row-hrow.gif) repeat-x left top;
}

.filter-row-grid .filter-row-header {
    height: 26px;
}

tr.filter-row-header .filter-row-icon input {
    background-image: url(/public/images/filter-row-icon.png);
    background-repeat: no-repeat;
    padding-left: 16px;
}
</style>
<script>
Ext.onReady(function() {
    <?
    /**
     * Extjs: s.gif
     */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $OBJECT_GRID->addCellRenderer("
        function renderTextBold(v, p, record, rowIndex){
            var str = '<span style=\"font-weight:bold;color:#061f83;white-space:normal;\">' + v + '</span>';
            return str;
        }
    ");
    
    $OBJECT_GRID->addCellRenderer("
        function renderText(v, p, record, rowIndex){
            var str = '<span style=\"font-weight:normal;color:#555;white-space:normal;\">' + v + '</span>';
            return str;
        }
    ");
    
    $OBJECT_GRID->addReadField("name: 'FIRST_CULUMN'");
    $studentStatistic->personType="STUDENT";
    $studentStatistic->status=1;
    $objectAttendanceType = $studentStatistic->getAttendanceType(); 
    if($objectAttendanceType){
        foreach($objectAttendanceType as $value){
            $OBJECT_GRID->addReadField("name: 'ATTENDANCE_".$value->ID."'");
        }
    }
    switch($objectType){
        case 'CAMPUS':
            $OBJECT_GRID->addColumn("
                header: '<b>".GRADE."</b>'
                , width: 160, hidden:".checkColHidden(1, $columndata)."
                , sortable: true
                , dataIndex: 'FIRST_CULUMN'
            ");
            break;
        case 'GRADE':
            $OBJECT_GRID->addColumn("
                header: '<b>".GRADE_CLASS."</b>'
                , width: 160, hidden:".checkColHidden(1, $columndata)."
                , sortable: true
                , dataIndex: 'FIRST_CULUMN'
                
            ");
            break;
        case 'CLASS':
            $OBJECT_GRID->addColumn("header: '<b>".FULL_NAME."</b>', width: 160, hidden:".checkColHidden(1, $columndata).", renderer: renderTextBold, sortable: true, dataIndex: 'FIRST_CULUMN'");
            break;      
    }
    
    foreach($objectAttendanceType as $value){
        $OBJECT_GRID->addColumn("
            header: '<b>".$value->NAME."</b>'
            , width: 160, hidden:".checkColHidden(1, $columndata)."
            ,  sortable: true
            , dataIndex: 'ATTENDANCE_".$value->ID."'
            , summaryType: 'totalCost'
        ");
    }
 
    $OBJECT_GRID->baseParams = "  
        cmd: 'getGridData'
        ,campusId: '".$campusId."'
        ,schoolyearId: '".$schoolyearId."'
        ,gradeId: '".$gradeId."'
        ,classId: '".$classId."'
        ,objectType: '".$objectType."'
        ,personType: 'STUDENT'
        ,status: '1'
    ";
    ////////////////////////////////////////////////////////////////////////////
    if(UserAuth::getACLValue("STUDENT_SEARCH_EXECUTE_RIGHT")){
        $OBJECT_GRID->addTBarItems("
            tbar.add([{
                text: '" . EXPORT_TO_EXCEL . "'
                ,disabled:true
                ,id: 'EXPORT_TO_EXCEL'
                ,iconCls:'icon-page_excel'
                ,handler: function(){
                    Ext.MessageBox.show({
                        msg: '".SAVING_YOUR_DATA_PLEASE_WAIT."',
                        progressText: 'Saving...',
                        width:300,
                        wait:true,
                        waitConfig: {interval:200},
                        icon:'ext-mb-download'
                    });
                    Ext.Ajax.request({
                        url: '/export/jsonexcel/'
                        ,method: 'POST'
                        ,timeout: 600000
                        ,params:{cmd: 'studentSearch'
                                ,objectId:'".$OBJECT_GRID->getObjectId()."'
                                }
                        ,success: function(response, options) {
                            Ext.MessageBox.hide();
                            window.location='/export/openstudentlist/'
                        }
                    });
                }
            }]);
        ");
    }
    
    $OBJECT_GRID->addTBarItems("tbar.add('->');");
    $OBJECT_GRID->isQuickySearch = true;
    $OBJECT_GRID->isObjectDefaultOnLoad = true;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->loadMask = true;
    $OBJECT_GRID->renderJS();
    
    $params = "";
    $params .= "objectType=".$objectType."";
    $params .= "&campusId=".$campusId."";
    $params .= "&gradeId=".$gradeId."";
    $params .= "&schoolyearId=".$schoolyearId."";
    if($gradeId)
    $params .= "&academicId=".$gradeId."";
    
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            }
            ,items: [{
               	region:'north'
                ,id:'NORTH_ID'
                ,margins: '3 3 0 3'
                ,cmargins: '3 3 3 3'
                ,autoScroll: true
                ,height:300
                ,minSize:300
                ,maxSize:300
                ,layout: 'fit'
                ,items: [new Ext.ux.IFrameComponent({ id: 'TRADITIONAL_EDUCATION_SYSTEM', url:'/chart/studentattendance/?camIds=<?=$this->urlEncryp->encryptedGet($params)?>'})]
            },{
               	collapsible: false
                ,id: 'center'
                ,region:'center'
                ,margins: '0 3 3 3'
                ,layout: 'card'
                ,activeItem: 0
                ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType()?>'}]
            }]
        }]
    });
    Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>