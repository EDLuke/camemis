<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 22.12.2012
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once setUserLoacalization();

$OBJECT_GRID = new CamemisGrid("ASSIGNED_STUDENTS", "STUDENT_GRID");
$OBJECT_GRID->setLoadUrl("/student/jsonload/");
$OBJECT_GRID->setSaveUrl("/student/jsonsave/");

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$listSubClasses = AcademicDBAccess::getSubClasses($this->facette->ID);
?>
<script>
function isInt(n) {
    return +n === n && !(n % 1);
}
Ext.onReady(function() {
    function cssStatus(v, p, record){
        return String.format('<div style=\"font-weight:bold;padding:4px;background:{1};color:{2};\">{0}</div>'
            ,v
            ,record.data['BG_COLOR']
            ,record.data['BG_COLOR_FONT']
        );
    }
    
    function cssText(value, metadata, record){
        return '<div style="font-weight:normal; color:#333; padding:3px;">' + value + '</div>';
    }
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    ////////////////////////////////////////////////////////////////////////////
    $OBJECT_GRID->addReadField("name: 'ID'");
    $OBJECT_GRID->addReadField("name: 'CODE'");
    $OBJECT_GRID->addReadField("name: 'STUDENT_NAME'");
    $OBJECT_GRID->addReadField("name: 'GROUP'");
    $OBJECT_GRID->addReadField("name: 'BG_COLOR'");
    $OBJECT_GRID->addReadField("name: 'BG_COLOR_FONT'");
    $OBJECT_GRID->addReadField("name: 'STATUS_KEY'");
    
    if($listSubClasses){
        foreach($listSubClasses as $value){
            $OBJECT_GRID->addReadField("name: 'CHECKED_".$value->ID."'");
        }
    }
    
    switch(Zend_Registry::get('SYSTEM_LANGUAGE')){
        case "VIETNAMESE": $width = 100;break;
        default: $width = 85;break;
    }
    
    $OBJECT_GRID->addColumn("header: '<b>".STATUS."</b>', align:'center', width: ".$width.", renderer:cssStatus, sortable: true, dataIndex: 'STATUS_KEY'");
    $OBJECT_GRID->addColumn("header: '<b>".CODE_ID."</b>', align:'center', width: 80, renderer: cssText, sortable: true, dataIndex: 'CODE'");
    $OBJECT_GRID->addColumn("header: '<b>".FULL_NAME."</b>', align:'left', width: 200, renderer: cssText, sortable: true, dataIndex: 'STUDENT_NAME'");
    
    if($listSubClasses){
        foreach($listSubClasses as $value){
            $OBJECT_GRID->addColumn("
                xtype: 'checkboxcolumn'
                ,align:'center'
                ,header: '<b>" . setShowText($value->NAME) . "</b>'
                ,dataIndex: 'CHECKED_".$value->ID."'
                ,width:120
                ,on: 1
                ,off: 0
                ,renderer: cssText
            ");
        }
    }
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,academicId: '".$this->facette->ID."'
        ,subClass:1
        ,cmd: 'jsonAssignedStudents'
    ";
    $OBJECT_GRID->setSaveParams("
        cmd: 'actionStudent2ClassSectionTraditional'
        ,academicId: '".$this->facette->ID."'
    ");
    $OBJECT_GRID->setEditEmbeddedEvents("
        XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."');
        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
    ");
    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            text: '".CANCEL."'
            ,id: 'CANCEL_ID'
            ,iconCls:'icon-cancel'
            ,handler: function(){window.parent.Ext.getCmp('CONTENT').getLayout().setActiveItem(0);}
        }]);
    ");
    $OBJECT_GRID->loadMask = false;
    $OBJECT_GRID->isGridEditing = true;
    $OBJECT_GRID->isQuickySearch = true;
    $OBJECT_GRID->isObjectDefaultOnLoad = true;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();
    ///////////////////////////////////////////////////////
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'fit'
            ,border: false
            ,items:[{xtype: '<?=$OBJECT_GRID->getObjectXtype();?>'}]
        }]
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>