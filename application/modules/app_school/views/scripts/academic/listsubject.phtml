<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_GRID = new CamemisGrid("SUBJECT", "LIST");  
$OBJECT_GRID->setLoadUrl('/subject/jsonload/');

$classId = isset($_GET["classId"]) ? addText($_GET["classId"]) : "";         

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$TERM_NUMBER = AcademicDBAccess::findAcademicTerm(false, $classId);

?>

<script>
Ext.onReady(function() {
    
    function cssText(value){
        return '<div style="font-weight:normal; color:#555; padding: 5px; height: 15px; background:#FFF;">' + value + '</div>';
    }
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif(); 

    $OBJECT_GRID->addReadField("name: 'SUBJECT_SHORT'");
    $OBJECT_GRID->addReadField("name: 'SUBJECT_NAME'");
    $OBJECT_GRID->addReadField("name: 'SUBJECT_ID'");
                                                                
    $OBJECT_GRID->addColumn("header: '<b>".SHORT."</b>',hidden: false, align:'left', menuDisabled : true, sortable: true, renderer:cssText, width:100, dataIndex: 'SUBJECT_SHORT'");
    $OBJECT_GRID->addColumn("header: '<b>".SUBJECT."</b>',hidden: false, align:'left', menuDisabled : true, sortable: true, renderer:cssText, width:180, dataIndex: 'SUBJECT_NAME'");
    
    switch ($TERM_NUMBER) {
        case 1:
            $OBJECT_GRID->addReadField("name: 'FIRST_TERM'");
            $OBJECT_GRID->addReadField("name: 'SECOND_TERM'");
            $OBJECT_GRID->addReadField("name: 'THIRD_TERM'");
            $OBJECT_GRID->addColumn("header: '<b>".FIRST_TERM."</b>',hidden: false, align:'center', menuDisabled : true, sortable: true, renderer:cssText, width:150, dataIndex: 'FIRST_TERM'");
            $OBJECT_GRID->addColumn("header: '<b>".SECOND_TERM."</b>',hidden: false, align:'center', menuDisabled : true, sortable: true, renderer:cssText, width:150, dataIndex: 'SECOND_TERM'");
            $OBJECT_GRID->addColumn("header: '<b>".THIRD_TERM."</b>',hidden: false, align:'center', menuDisabled : true, sortable: true, renderer:cssText, width:150, dataIndex: 'THIRD_TERM'");
        break;
        case 2:
            $OBJECT_GRID->addReadField("name: 'FIRST_QUARTER'");
            $OBJECT_GRID->addReadField("name: 'SECOND_QUARTER'");
            $OBJECT_GRID->addReadField("name: 'THIRD_QUARTER'");
            $OBJECT_GRID->addReadField("name: 'FOURTH_QUARTER'");
            $OBJECT_GRID->addColumn("header: '<b>".FIRST_QUARTER."</b>',hidden: false, align:'center', menuDisabled : true, sortable: true, renderer:cssText, width:150, dataIndex: 'FIRST_QUARTER'");
            $OBJECT_GRID->addColumn("header: '<b>".SECOND_QUARTER."</b>',hidden: false, align:'center', menuDisabled : true, sortable: true, renderer:cssText, width:150, dataIndex: 'SECOND_QUARTER'");
            $OBJECT_GRID->addColumn("header: '<b>".THIRD_QUARTER."</b>',hidden: false, align:'center', menuDisabled : true, sortable: true, renderer:cssText, width:150, dataIndex: 'THIRD_QUARTER'");
            $OBJECT_GRID->addColumn("header: '<b>".FOURTH_QUARTER."</b>',hidden: false, align:'center', menuDisabled : true, sortable: true, renderer:cssText, width:150, dataIndex: 'FOURTH_QUARTER'");
        break;
        default:
            $OBJECT_GRID->addReadField("name: 'FIRST_SEMESTER'");
            $OBJECT_GRID->addReadField("name: 'SECOND_SEMESTER'");
            $OBJECT_GRID->addColumn("header: '<b>".FIRST_SEMESTER."</b>',hidden: false, align:'center', menuDisabled : true, sortable: true, renderer:cssText, width:150, dataIndex: 'FIRST_SEMESTER'");
            $OBJECT_GRID->addColumn("header: '<b>".SECOND_SEMESTER."</b>',hidden: false, align:'center', menuDisabled : true, sortable: true, renderer:cssText, width:150, dataIndex: 'SECOND_SEMESTER'");
        break;
    }
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'jsonAllSubjectByClass'  
        ,academicId: '".$this->objectId."' 
    ";
    
    $OBJECT_GRID->addTBarItems("
        tbar.add(['-',{
            id: 'REFRESH_ID'
            ,text: '".REFRESH."'
            ,iconCls:'icon-reload'
            ,scope:this
            ,disabled: false
            ,handler: function(){
               Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
            }
        }]);
    ");
    
    $OBJECT_GRID->addTBarItems("
        tbar.add('->');
    ");
    $OBJECT_GRID->loadMask = false;
    $OBJECT_GRID->isQuickySearch = false;
    $OBJECT_GRID->isObjectDefaultOnLoad = true;
    
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();
    
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            border: false
            ,id:'content'
            ,layout: 'card'
            ,activeItem: 0
            ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType()?>'}]
        }]
    });
    
    Ext.getCmp('SUBJECT_LIST_ID').on('cellclick', function(grid, rowIndex, columnIndex, event) {
        var record = grid.store.getAt(rowIndex);
        clickOpenPage('content',record.data.SUBJECT_NAME,'/subject/subjectdisplaymain/?setId=<?=$this->objectId;?>-' + record.data.SUBJECT_ID);
    });
    
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>