<?
///////////////////////////////////////////////////////////
// @Sor Veasna
// Date: 17.07.2014
// 
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'clients/CamemisSchoolTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_FORM = new CamemisForm("DISCIPLINE");
$OBJECT_FORM->setLoadUrl('/enrollment/jsonload/');
$OBJECT_FORM->setSaveUrl('/enrollment/jsonsave/');

$OBJECT_GRID=new CamemisGrid("STUDENT_ACADEMIC_HISTORY","LIST");
$OBJECT_GRID->setLoadUrl('/enrollment/jsonload/');
$OBJECT_GRID->setSaveUrl('/enrollment/jsonload/');
$columndata = Utiles::getGridColumnData("STUDENT_ACADEMIC_HISTORY_LIST_ID");


print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
 
Ext.onReady(function() {
    function cssStatus(v, p, record){
        return String.format('<div style=\"font-weight:bold;padding:4px;background:{1};color:{2};\">{0}</div>'
        ,v
        ,record.data['BG_COLOR']
        ,record.data['BG_COLOR_FONT']
        );
    }
    function cssText(value, metadata, record){
        var name = record.data.STUDENT_NAME;
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<span style="color:#333; padding:5px; height: 25px;">' + value + '</span>';
    }
    <?
    /**
    * Extjs: s.gif
    */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $js = "";
    $js .= "xtype: 'combo'";
    $js .= ",id: 'CHOOSE_OPTION'";
    $js .= ",fieldLabel: '" . TYPE . "'";
    $js .= ",mode: 'local'";
    $js .= ",triggerAction: 'all'";
    $js .= ",emptyText: '" . PLEASE_CHOOSE . "'";
    $js .= ",store: [[0, '[---]'],['1','TRANSFER'],['2','UPGRADE'],['3','DOWNGRADE']]";
    $js .= ",editable:false";
    $js .= ",name: 'CHOOSE_OPTION'";
    $js .= ",hiddenName: 'CHOOSE_OPTION'";
    $js .= ",width:150";

    $OBJECT_GRID->addReadField("name: 'CODE'");                  
    $OBJECT_GRID->addReadField("name: 'STUDENT_NAME'");
    $OBJECT_GRID->addReadField("name: 'DATE_BIRTH'");
    $OBJECT_GRID->addReadField("name: 'TERM'"); 
    $OBJECT_GRID->addReadField("name: 'GENDER'"); 
    $OBJECT_GRID->addReadField("name: 'PREVIOUS_LEVEL'");    
    $OBJECT_GRID->addReadField("name: 'PREVIOUS_CLASS'");
    $OBJECT_GRID->addReadField("name: 'CURRENT_LEVEL'");    
    $OBJECT_GRID->addReadField("name: 'CURRENT_CLASS'");
    $OBJECT_GRID->addReadField("name: 'TYPE'");
    $OBJECT_GRID->addReadField("name: 'BG_COLOR'");
    $OBJECT_GRID->addReadField("name: 'BG_COLOR_FONT'");
    $OBJECT_GRID->addReadField("name: 'STATUS_KEY'"); 
    $OBJECT_GRID->addReadField("name: 'CREATED_DATE'");
    $OBJECT_GRID->addReadField("name: 'CREATED_BY'"); 
    
    
    $OBJECT_GRID->addColumn("header: '<b>".STATUS."</b>', align:'center', width: 120, hidden:".checkColHidden(1, $columndata).", renderer:cssStatus, sortable: true, dataIndex: 'STATUS_KEY'");
    $OBJECT_GRID->addColumn("header: '<b>".CODE."</b>', align:'left', renderer: cssText, width: 80, hidden:".checkColHidden(1, $columndata).", sortable: true, dataIndex: 'CODE'");
    $OBJECT_GRID->addColumn("header: '<b>".NAME."</b>', align:'left', renderer: cssText, width: 120, hidden:".checkColHidden(2, $columndata).", sortable: true, dataIndex: 'STUDENT_NAME'");
    $OBJECT_GRID->addColumn("header: '<b>".GENDER."</b>', align:'left', renderer: cssText, width: 80, hidden:".checkColHidden(3, $columndata).", sortable: true, dataIndex: 'GENDER'");
    $OBJECT_GRID->addColumn("header: '<b>".DATE_BIRTH."</b>', align:'left', renderer: cssText, width: 80, hidden:".checkColHidden(3, $columndata).", sortable: true, dataIndex: 'DATE_BIRTH'");
    $OBJECT_GRID->addColumn("header: '<b>".TERM."</b>', align:'left', renderer: cssText, width: 120, hidden:".checkColHidden(4, $columndata).", sortable: true, dataIndex: 'TERM'");
    $OBJECT_GRID->addColumn("header: '<b>".PREVIOUS." ".LEVEL."</b>', align:'left', renderer: cssText, width: 110, hidden:".checkColHidden(5, $columndata).", sortable: true, dataIndex: 'PREVIOUS_LEVEL'");
    $OBJECT_GRID->addColumn("header: '<b>".PREVIOUS_CLASS."</b>', align:'left', renderer: cssText, width: 110, hidden:".checkColHidden(6, $columndata).", sortable: true, dataIndex: 'PREVIOUS_CLASS'");
    $OBJECT_GRID->addColumn("header: '<b>".CURRENT_LEVEL."</b>', align:'left', renderer: cssText, width: 120, hidden:".checkColHidden(7, $columndata).", sortable: true, dataIndex: 'CURRENT_LEVEL'");
    $OBJECT_GRID->addColumn("header: '<b>".CURRENT_CLASS."</b>', align:'left', renderer: cssText, width: 110, hidden:".checkColHidden(8, $columndata).", sortable: true, dataIndex: 'CURRENT_CLASS'");
    $OBJECT_GRID->addColumn("header: '<b>".TYPE."</b>', align:'left', renderer: cssText, width: 110, hidden:".checkColHidden(9, $columndata).", sortable: true, dataIndex: 'TYPE'");
    $OBJECT_GRID->addColumn("header: '<b>".CREATED_DATE."</b>', align:'left', renderer: cssText, width: 110, hidden:".checkColHidden(10, $columndata).", sortable: true, dataIndex: 'CREATED_DATE'");
    $OBJECT_GRID->addColumn("header: '<b>".CREATED_BY."</b>', align:'left', renderer: cssText, width: 110, hidden:".checkColHidden(11, $columndata).", sortable: true, dataIndex: 'CREATED_BY'");
    
    
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'jsonAllStudentsTrainingHistory'
    ";
    
    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            id: 'REFRESH_ID'
            ,text: '".REFRESH."'
            ,iconCls:'icon-reload'
            ,scope:this
            ,disabled: false
            ,handler: function(){
               Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
            }
        }]);
    ");
    
    $OBJECT_GRID->loadMask = true;
    $OBJECT_GRID->isPagingToolbar = true;
    $OBJECT_GRID->isQuickySearch = true;
    $OBJECT_GRID->isObjectDefaultOnLoad = true;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->setUserColumn = true;
    $OBJECT_GRID->renderJS();
	
    $OBJECT_FORM->addObjectItems("
        xtype:'fieldset'
        ,collapsible:true,collapsed:false
        ,title: '".DATE."'
        ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
        ,width: 310
        ,items:[
            {".CamemisField::Datefield("START_DATE",START_DATE,false,false,150)."}
            ,{".CamemisField::Datefield("END_DATE",END_DATE,false,false,150)."}
        ]
    ");
	

    $OBJECT_FORM->addObjectItems("
        xtype:'fieldset'
        ,collapsible:true,collapsed:false
        ,title: '".PERSONAL_INFORMATION."'
        ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
        ,width: 310
        ,items:[
            {".CamemisField::Textfield("STUDENT_SCHOOL_ID", "STUDENT_SCHOOL_ID", STUDENT_SCHOOL_ID, false, false, false, 150)."}
            ,{".CamemisField::Textfield("CODE_ID", "CODE", CODE_ID, false, false, false, 150)."}
            ,{".CamemisField::Textfield("LASTNAME_ID", "LASTNAME", LASTNAME, false, false, false, 150)."}
            ,{".CamemisField::Textfield("FIRSTNAME_ID", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
            ,{".CamemisField::ComboGender(GENDER, false, false, 150)."}
            ,{".$js."}
            
        ]
    ");
  
    $OBJECT_FORM->addTBarItems("
        text: '".RESET."'
        ,iconCls:'icon-arrow_undo'
        ,scope:this
        ,handler: function(){".CamemisPage::setRequestURI()."}
    ");

    
    $OBJECT_FORM->addTBarItems("
        text: '".FIND."'
        ,formBind:true
        ,iconCls:'icon-magnifier'
        ,scope:this
        ,handler: function(){
            var loadMask = new Ext.LoadMask(Ext.getBody(), {msg:'<b>CAMEMIS " . LOADING . "</b>', msgCls:'x-mask-loading-camemis'});
            loadMask.show(); 
            Ext.Ajax.request({
                url: '/enrollment/jsonload'
                ,method: 'POST'
                ,params:{cmd: 'jsonAllStudentsTrainingHistory',start:0,limit:100}
                ,form: ".$OBJECT_FORM->ExtgetCmp().".getForm().getEl().dom
                ,success: function(response, options) {
                    var gridObject=Ext.getCmp('".$OBJECT_GRID->getObjectId()."');
                    jsonData = Ext.util.JSON.decode(response.responseText);
                    var myform=".$OBJECT_FORM->ExtgetCmp().";
                    for(var i=0;i<myform.getForm().getEl().dom.length;i++){
                        if(myform.getForm().getEl().dom[i].value){
                            Ext.getCmp('".$OBJECT_GRID->getObjectId()."').getStore().setBaseParam(myform.getForm().getEl().dom[i].name,myform.getForm().getEl().dom[i].value);
                        }
                    }
                    
                    Ext.getCmp('".$OBJECT_GRID->getObjectId()."').getStore().loadData(jsonData);
                    loadMask.hide();
                }
            });   
        }
    ");
    
    $OBJECT_FORM->addTBarItems("
        text:''
        ,tooltip:'".CAMEMIS_HELP."'
        ,iconCls: 'icon-help'
        ,handler:function(){
            ".CamemisPage::setEmbeddedHelp("6F4A-AD57")."
        }
    ");
     
    
    $OBJECT_FORM->setBodyStyle("padding:10px;background:".CamemisPage::userFormBgColor().";");
    $OBJECT_FORM->labelAlign = "left";
    $OBJECT_FORM->isObjectDefaultOnLoad = false;
    $OBJECT_FORM->isKeys = true;
    $OBJECT_FORM->renderJS();
    
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            }
            ,items: [{
                title: ''
                ,region:'west'
                ,id: 'WEST_ID'
                ,margins: '3 0 3 3'
                ,cmargins: '3 3 3 3'
                ,width: 350
                ,minSize: 350
                ,maxSize: 350
                ,items: [{xtype: '<?=$OBJECT_FORM->getObjectXType();?>'}]
            },{
                title: ''
                ,collapsible: false
                ,id: 'center'
                ,region:'center'
                ,layout: 'card'
                ,activeItem: 0
                ,margins: '3 3 3 0'
                ,items:[{
                    border: false
                    ,layout: 'fit'
                    ,bodyStyle: 'background:#FFFFFF;'
                    ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
                }]
            }]
        }]
    });
	Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>