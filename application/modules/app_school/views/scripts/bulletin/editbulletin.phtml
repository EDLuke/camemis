<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 25.12.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once 'models/CAMEMISUploadDBAccess.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_FORM = new CamemisForm("BULLETIN");
$OBJECT_FORM->setSaveUrl("/bulletin/jsonsave/");
$OBJECT_FORM->setLoadUrl("/bulletin/jsonload/");

$OBJECT_TREE = new CamemisTree("ACADEMIC_TREE","LIST");
$OBJECT_TREE->setURL('/bulletin/jsontree/');

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>

<script>
    
    Ext.apply(Ext.form.VTypes, {
        daterange : function(val, field) {
            var date = field.parseDate(val);
            if(!date){
                return false;
            }
            if (field.startDateField) {
                var start = Ext.getCmp(field.startDateField);
                if (!start.maxValue || (date.getTime() != start.maxValue.getTime())) {
                    start.setMaxValue(date);
                    start.validate();
                }
            }
            else if (field.endDateField) {
                var end = Ext.getCmp(field.endDateField);
                if (!end.minValue || (date.getTime() != end.minValue.getTime())) {
                    end.setMinValue(date);
                    end.validate();
                }
            }
            return true;
        }
    });
    
    Ext.onReady(function() {
        
		Ext.QuickTips.init();
		
        <?
        /**
         * Extjs: s.gif
         */
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
		
        $OBJECT_TREE->isAsyncTreeNode = false;
        $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
        $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
        $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());
        
        if($this->facette){
            switch($this->facette->EDUCATION_TYPE   ){
               case "GENERAL":
                    $schoolyearObject = AcademicDateDBAccess::findSchoolyearByStartEnd($this->facette->START_DATE, $this->facette->END_DATE);
                    $schoolyearId = $schoolyearObject?$schoolyearObject->ID:''; 
                    $OBJECT_TREE->setBaseParams("
                        cmd: 'getAcademicsByBulletin'
                        ,objectId:'".$this->objectId."'
                        ,SCHOOLYEAR:'".$schoolyearId."'
                    ");
                   break;
               case "CREDIT": //@veasna
                    $schoolyearObject = AcademicDateDBAccess::findSchoolyearByStartEnd($this->facette->START_DATE, $this->facette->END_DATE);
                    $schoolyearId = $schoolyearObject?$schoolyearObject->ID:''; 
                    $OBJECT_TREE->setBaseParams("
                        cmd: 'getAcademicsByBulletin'
                        ,educationSystem:1
                        ,objectId:'".$this->objectId."'
                        ,SCHOOLYEAR:'".$schoolyearId."'
                    ");
                   break;
               case "TRAINING":
                    $OBJECT_TREE->setBaseParams("
                        cmd: 'getTrainingsByBulletin'
                        ,objectId:'".$this->objectId."'
                    ");
                   break;
            }
        }
        
        $schoolyearObject = AcademicDateDBAccess::loadCurrentSchoolyear();
        $currentSchoolyearId = $schoolyearObject?$schoolyearObject->ID:"";
        $STORE_SCHOOLYEAR = "[";
        if(AcademicDateDBAccess::getAllSchoolyear()){
            $i = 0;
            foreach(AcademicDateDBAccess::getAllSchoolyear() as $value){
                $DATA[$i] = $value->ID;
                $STORE_SCHOOLYEAR .= $i?",":"";
                $STORE_SCHOOLYEAR .= "['" . $value->ID . "', '" . setShowText($value->NAME) ."', 'icon-date']";
                $i++;
            }
        }
        
        $STORE_SCHOOLYEAR .= "]";
        $OBJECT_TREE->addTBarItems("
            xtype: 'buttongroup'
            ,items:[{
                xtype:'combo'
                ,id:'COMO_SCHOOLYEAR_ID'
                ,width:170
                ,fieldLabel:'IconCombo'
                ,store: new Ext.data.SimpleStore({
                    fields: ['comboCode', 'comboName', 'comboIcon'],
                    data: ".$STORE_SCHOOLYEAR."
                })
                ,plugins:new Ext.ux.plugins.IconCombo()
                ,valueField: 'comboCode'
                ,displayField: 'comboName'
                ,iconClsField: 'comboIcon'
                ,triggerAction: 'all'
                ,mode: 'local'
                ,value:'".$currentSchoolyearId."'
            }]
        ");
        
        $OBJECT_TREE->backgroundColor = "#F9F9F9";
        $OBJECT_TREE->isOnClickContextMenu = false;
        $OBJECT_TREE->isTreeExpand = true;
        $OBJECT_TREE->renderJS();
        
        $SUBJECT_BULLETIN = "
        {
            title: '".BULLETIN_BOARD."'
            ,autoHeight: true
            ,style: 'padding-bottom: 5px'
            ,width: 550
            ,items:[{
                layout: 'fit'
                ,border: false
                ,bodyStyle: 'background:#FFF; padding:10px'
                ,items: [{".CamemisField::Textarea("SUBJECT_BULLETIN", false, 70, false, true)."}]
            }]
        }
        ";
        
        $PUBLISH_INFORMATION = "
        {
            title: '".PUBLISH."'
            ,autoHeight: true
            ,style: 'padding-bottom: 5px'
            ,width: 550
            ,items:[{
                layout: 'form'
                ,border: false
                ,bodyStyle: 'padding:10px'
                ,items: [{
                    name: 'START_DATE'
                    ,hidden: false
                    ,width: 250
                    ,fieldLabel: '" . START_DATE . "'
                    ,xtype: 'datefield'
                    ,id: 'START_DATE'
                    ,vtype: 'daterange'
                    ,endDateField: 'END_DATE'
                    ,format: '" . setExtDatafieldFormat() . "'
                    ,allowBlank: false
                },{
                    name: 'END_DATE'
                    ,hidden: false
                    ,width: 250
                    ,fieldLabel: '" . END_DATE . "'
                    ,xtype: 'datefield'
                    ,id: 'END_DATE'
                    ,vtype: 'daterange'
                    ,format: '" . setExtDatafieldFormat() . "'
                    ,startDateField: 'START_DATE'
                    ,allowBlank: false
                }]
            }]
        }
        ";
        
        $CONTENT_INFORMATION = "
        {
            title: '".CONTENT."'
            ,autoHeight: true
            ,style: 'padding-bottom: 5px'
            ,width: 550
            ,items:[{
                layout: 'fit'
                ,border: false
                ,bodyStyle: 'background:#FFF; padding:10px'
                ,items: [
                    {".CamemisField::Textarea("CONTENT", false, 200, false, true)."}		
                ]
            }]
        }";
        
        $SETTING_INFORMATION = "
        {
            title: '".SETTING."'
            ,autoHeight: true
            ,style: 'padding-bottom: 5px'
            ,width: 550
            ,items:[{
                layout: 'form'
                ,border: false
                ,autoHeight:true
                ,bodyStyle: 'padding:10px'
                ,items: [
                    {".CamemisField::ComboAcademicSystemType(false,false,false)."}
                    ,new Ext.form.CheckboxGroup({
                        fieldLabel:'".RECIPIENT."'
                        ,columns:1
                        ,items:[
                            {boxLabel: '".TEACHER."', name: 'TEACHER'}
                            ,{boxLabel: '".STUDENT."', name: 'STUDENT'}
                            ,{boxLabel: '".STAFF."', name: 'STAFF'}
                            ,{boxLabel: '".GUARDIAN."', name: 'GUARDIAN'}
                        ]
                    })
                ]
            }]
        }";
        
        if($this->facette)
        $ATTACHMENTS = "
        {
            title: '".ATTACHMENTS."'
            ,tbar:['->',{
                text:'Youtube'
                ,iconCls: 'icon-image_add'
                ,handler:function(){
                    openWinIFrame('Youtube', '/dataset/video?objectId=".$this->facette->GUID."', 500, percentHeight(85));
                }
            }]
            ,style: 'padding-bottom: 5px'
            ,width: 550
            ,height:680
            ,layout:'fit'
            ,items:[new Ext.ux.IFrameComponent({ id: 'ATTACHMENTS', url: '/dataset/attachment/?objectId=".$this->facette->GUID."&template=BULLETIN'})]
        }
        ";
        
        $FORM_ITMES = "[";
        $FORM_ITMES .= $SUBJECT_BULLETIN;
        $FORM_ITMES .= ",".$SETTING_INFORMATION;
        $FORM_ITMES .= ",".$PUBLISH_INFORMATION;
        $FORM_ITMES .= ",".$CONTENT_INFORMATION;
        
        if($this->facette){
            $FORM_ITMES .= ",".$ATTACHMENTS;
        }
        $FORM_ITMES .= "]";
        
		$items = "
            border: false
            ,id: 'FORM_ITEMS'
            ,bodyStyle: 'padding:0px'
            ,items: ".$FORM_ITMES."
        ";
        
        $OBJECT_FORM->addObjectItems($items);

        $OBJECT_FORM->addTBarItems("
            text: '".CANCEL."'
            ,id: 'CANCEL_ID'
            ,formBind:true
            ,iconCls:'icon-cancel'
            ,scope:this
            ,handler: function(){
                window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);
            }
        ");

        if($this->facette){
            if(UserAuth::getACLValue("BULLETIN_BOARD_EDIT_RIGHT"))
            $OBJECT_FORM->addTBarItems(CamemisBar::tbarSetRelease($this->status));
            if(UserAuth::getACLValue("BULLETIN_BOARD_REMOVE_RIGHT"))
            $OBJECT_FORM->addTBarItems(CamemisBar::tbarFormRemoveObject($this->remove_status));
        }
        if(UserAuth::getACLValue("BULLETIN_BOARD_EDIT_RIGHT"))
        $OBJECT_FORM->addTBarItems(CamemisBar::tbarSave());

        $OBJECT_FORM->setLoadParams("cmd: 'loadObject',objectId: '".$this->objectId."'");
        $OBJECT_FORM->setSaveParams("
        cmd: 'jsonSaveBulletin'
        ,objectId: '".$this->objectId."'

        ");
        $OBJECT_FORM->setReleaseParams("cmd: 'releaseObject',objectId: '".$this->objectId."'");

        $OBJECT_FORM->setonEmbeddedEvents("
            if (window.parent.Ext.getCmp('BULLETIN_LIST_ID')) 
            window.parent.Ext.getCmp('BULLETIN_LIST_ID').store.reload();
            XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
            var objectId = '".$this->objectId."';

            if(objectId=='new'){
                var result = Ext.util.JSON.decode(action.response.responseText);
                window.location='".$_SERVER["REQUEST_URI"]."&objectId='+result.objectId;
            }else{
                window.location='" . $_SERVER["REQUEST_URI"] . "';
            }
        ");
		
        $OBJECT_FORM->setOnEmbeddedReleaseEvents("
            if (window.parent.Ext.getCmp('BULLETIN_LIST_ID')) 
            window.location='" . $_SERVER["REQUEST_URI"] . "';
        ");
        
        $OBJECT_FORM->setRemoveParams("
            cmd: 'removeObject'
            ,objectId: '".$this->objectId."'
        ");

        $OBJECT_FORM->setOnEmbeddedRemoveEvents("
            if (window.parent.Ext.getCmp('BULLETIN_LIST_ID')) 
			window.parent.Ext.getCmp('BULLETIN_LIST_ID').store.reload();
            window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);
        ");
		
        $OBJECT_FORM->labelAlign = "left";
        $OBJECT_FORM->labelWidth = 85;
        $OBJECT_FORM->renderJS();
		
        $VIEWPORT_ITEMS = "[{";
        
        if(!$this->facette){
            $VIEWPORT_ITEMS .= "
                layout:'fit'
                ,border: false
                ,items: [{xtype: '".$OBJECT_FORM->getObjectXType()."'}]    
            ";
        }else{
            $VIEWPORT_ITEMS .= "
               layout:'border'
               ,border: false
               ,defaults: {
                   collapsible: true
                   ,split: true
               }
               ,items: [{
                   title: ''
                   ,region:'west'
                   ,id: 'WEST_ID'
                   ,margins: '3 0 3 3'
                   ,cmargins: '3 3 3 3'
                   ,width: 300
                   ,minSize: 300
                   ,maxSize: 300
                   ,layout: 'fit'
                   ,items: [{xtype: '".$OBJECT_TREE->getObjectXType()."'}]    
               },{
                   collapsible: false
                   ,id: 'center'
                   ,region:'center'
                   ,margins: '3 3 3 0'
                   ,layout: 'card'
                   ,activeItem: 0
                   ,items: [{
                       layout: 'fit'
                       ,border: false
                       ,items: [{xtype: '".$OBJECT_FORM->getObjectXType()."'}]    
                   }]
               }]
            ";   
        }
        
        $VIEWPORT_ITEMS .= "}]";
        ?>
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout:'fit'
                ,border: false
                ,items: <?=$VIEWPORT_ITEMS;?>
            }]
        });
        
        var myTree = <?=$OBJECT_TREE->ExtgetCmp();?>;
        var myCombo = Ext.getCmp('COMO_SCHOOLYEAR_ID');
        if (myCombo)
        myCombo.on('select', function() {
            myTree.loader.baseParams.SCHOOLYEAR = Ext.getCmp('COMO_SCHOOLYEAR_ID').getValue();
            myTree.root.reload();
            myTree.getRootNode().expand(true, false);
            Ext.getCmp('center').getLayout().setActiveItem(0);
        });
        
        <?
        if($this->facette){
            $js = "";
            $js .= "var myTree = ".$OBJECT_TREE->ExtgetCmp().";";
            $js .= "myTree.on('checkchange', function(node, checked){";
                $js .= "Ext.Ajax.request({";
                    $js .= "url:'/bulletin/jsonsave/'";
                    $js .= ",method:'POST'";
                    $js .= ",params:{";
                        $js .= "cmd:'jsonActionAcademicToBulletin'";
                        $js .= ",checked: checked";
                        $js .= ",academic: node.id";
                        $js .= ",objectId: '".$this->objectId."'";
                    $js .= "}";
                    $js .= ",success: function(response, options) {";
                        $js .= "result = Ext.util.JSON.decode(response.responseText);";
                        $js .= "XMsg('".STATUS."',result.msg);";
                    $js .= "}";
                $js .= "});";
            $js .= "});";    
            print $js; 
        }
        
        ?>
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>