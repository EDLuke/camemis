<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once 'models/app_school/AcademicDateDBAccess.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_GRID = new CamemisGrid("SCHEDULE", "LIST");
$OBJECT_GRID->setLoadUrl("/schedule/jsonload/");
$OBJECT_GRID->setSaveUrl("/schedule/jsonsave/");

$columndata = Utiles::getGridColumnData("SCHEDULE_LIST_ID");

$actionMenu = false;
switch(strtoupper($this->target)){
    case "GENERAL":
        
        $DB_SCHOOLYEAR = AcademicDateDBAccess::getInstance();
        
        $classObject = AcademicDBAccess::findGradeFromId($this->academicId);
        if($classObject->EDUCATION_SYSTEM){
    
            switch($classObject->OBJECT_TYPE){
                case "SUBJECT":
                    $academicId = $classObject->ID;
                    $actionMenu = true;
                    $groupId = "";
                    break;
                case "CLASS":
                    $academicId = $classObject->PARENT;
                    $actionMenu = false;
                    $groupId = $classObject->ID;
                    break;
            }
        }else{
            $groupId = "";
            $actionMenu = true;
            $academicId = $classObject->ID;
        } 
        break;
    case "TRAINING":
        break;
}

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
Ext.onReady(function() {
    
    function styleTime(v, p, record, rowIndex){
        return String.format('<div style=\"font-weight:bold; padding: 20px; height: 35px;background:{1};color:{2};\">{0}</div>'
            ,v
            ,record.data['COLOR']
            ,record.data['COLOR_FONT']
        );
    }
    
    function showText(v, p, record, rowIndex){
        return String.format('<div style=\"white-space:normal;font-weight:bold; padding: 20px; height: 35px; background:{1};color:{2};\">{0}</div>'
            ,v
            ,record.data['COLOR']
            ,record.data['COLOR_FONT']
        );
    }
    
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

    $OBJECT_GRID->addReadField("name: 'ID'");
    $OBJECT_GRID->addReadField("name: 'TIME'");
    $OBJECT_GRID->addReadField("name: 'SCHEDULE_TYPE'");
    $OBJECT_GRID->addReadField("name: 'EVENT'");
    $OBJECT_GRID->addReadField("name: 'TEACHER'");
    $OBJECT_GRID->addReadField("name: 'ROOM'");
    $OBJECT_GRID->addReadField("name: 'COLOR'");
    $OBJECT_GRID->addReadField("name: 'COLOR_FONT'");
    $OBJECT_GRID->addReadField("name: 'CODE'");
    $OBJECT_GRID->addReadField("name: 'STATUS'");
    $OBJECT_GRID->addReadField("name: 'TEACHING_STATUS'");
    $OBJECT_GRID->addReadField("name: 'SHOW_SUBSTITUTE'");
    $OBJECT_GRID->addReadField("name: 'SHOW_DAYOFFSCHOOL'");
    
    $OBJECT_GRID->addTBarItems("
        tbar.add('-',[{
            id: 'REFRESH_ID'
            ,text: '".REFRESH."'
            ,iconCls:'icon-reload'
            ,scope:this
            ,disabled: false
            ,handler: function(){
                Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
            }
        }]);
    ");
    
    if(UserAuth::getACLValue("ACADEMIC_GENERAL_EDUCATION_EDIT_RIGHT") || UserAuth::getACLValue("TRAINING_PROGRAMS_EDIT_RIGHT")){
        if($actionMenu){
        $OBJECT_GRID->addTBarItems("
            tbar.add('-',[{
                text: '".EXTRA_TEACHING_SESSION."'
                ,iconCls:'icon-application_form_add'
                ,handler:function(){
                    clickOpenPage('center','', '/schedule/extrateachingsession/?&scheduleId=".camemisId()."&academicId=$this->academicId&trainingId=".$this->trainingId."');
                }
            }]);
        ");
        }
    }
    
    $OBJECT_GRID->addColumn("
        header: '<b>" . TIME . "</b>'
        , align:'center'
        ,renderer: styleTime
        , sortable: false
        , dataIndex: 'TIME'
        , width: 150
        , hidden:".checkColHidden(1, $columndata)."
    ");
        
    $OBJECT_GRID->addColumn("
        header: '<b>" . EVENT . "</b>'
        ,renderer: showText
        , align:'center'
        , sortable: false
        , dataIndex: 'EVENT'
        , width: 180
        , hidden:".checkColHidden(2, $columndata)."
    ");
        
    $OBJECT_GRID->addColumn("
        header: '<b>" . TEACHER . "</b>'
        , renderer: showText
        , align:'center'
        , sortable: false
        , dataIndex: 'TEACHER'
        , width: 200
        , hidden:".checkColHidden(3, $columndata)."
    ");
        
    $OBJECT_GRID->addColumn("
        header: '<b>" . ROOM . "</b>'
        , renderer: showText
        , align:'center'
        , sortable: false
        , dataIndex: 'ROOM'
        , width: 200
        , hidden:".checkColHidden(4, $columndata)."
    ");
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,academicId: '".$academicId."'
        ,target: '".$this->target."'
        ,trainingId: '".$this->trainingId."'
        ,teacherId: '".$this->teacherId."'
        ,groupId: '".$groupId."'
        ,cmd: 'jsonListExtraTeachingSession'
    ";
    
    $OBJECT_GRID->objectBorder = "true";
    $OBJECT_GRID->isPagingToolbar = true;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();
	
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            border:false
            ,bodyStyle: 'background:<?=CamemisPage::userBgColor();?>;padding:3px'
            ,layout: 'card'
            ,id: 'center'
            ,activeItem: 0
            ,title: ''
            ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
        }]
    });
    <?
    ////////////////////////////////////////////////////////////////////////////
    //@Sea Peng
    ////////////////////////////////////////////////////////////////////////////
    $js = "";
    $js .= "var grid = Ext.getCmp('".$OBJECT_GRID->getObjectId()."');";
    if(UserAuth::getACLValue("ACADEMIC_GENERAL_EDUCATION_EDIT_RIGHT") || UserAuth::getACLValue("TRAINING_PROGRAMS_EDIT_RIGHT")){
        $js .= "grid.on('cellclick', function(grid, rowIndex, columnIndex, event) {";
            $js .= "var record = grid.store.getAt(rowIndex);";
            $js .= "var contextMenu = new Ext.menu.Menu({";
                $js .= "items: [{";
                    $js .= "text: record.data.TIME + ' - '+record.data.EVENT";
                    $js .= ",iconCls:'icon-application_form_magnify'";
                    $js .= ",scope:this";
                    $js .= ",handler: function(){";
                        $js .= "scheduleId = record.data.ID;";
                        $js .= "clickOpenPage('center','', '/schedule/extrateachingsession/?scheduleId=' + scheduleId +'&academicId=".$this->academicId."');";
                    $js .= "}";
                $js .= "}]";
            $js .= "});";
            $js .= "event.stopEvent();";
            $js .= "contextMenu.showAt(event.xy);";
        $js .= "});";
    }
    if($actionMenu){
        echo $js;
    }
    ///////////////////////////////////////////////////////////////////
    ?>
    Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>