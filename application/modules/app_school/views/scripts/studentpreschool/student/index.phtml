<?
////////////////////////////////////////////////////////////////////////////////
//@THORN Visal
//Date:16.12.2013
////////////////////////////////////////////////////////////////////////////////

require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$objectId = isset($_GET["objectId"])?addText($_GET["objectId"]):"";

$OBJECT_FORM = new CamemisForm("STUDENT_PRESCHOOL");
$OBJECT_FORM->setLoadUrl('/studentpreschool/jsonload/');

$OBJECT_GRID = new CamemisGrid("STUDENT_PRESCHOOL", "LIST");
$OBJECT_GRID->setLoadUrl("/studentpreschool/jsonload/");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$columndata = Utiles::getGridColumnData("STUDENT_PRESCHOOL_LIST_ID");
?>
<script>
    
    Ext.apply(Ext.form.VTypes, {
        daterange : function(val, field) {
            var date = field.parseDate(val);

            if(!date){
                return false;
            }
            if (field.startDateField && (!this.dateRangeMax || (date.getTime() !== this.dateRangeMax.getTime()))) {
                var start = Ext.getCmp(field.startDateField);
                start.setMaxValue(date);
                start.validate();
                this.dateRangeMax = date;
            }
            else if (field.endDateField && (!this.dateRangeMin || (date.getTime() !== this.dateRangeMin.getTime()))) {
                var end = Ext.getCmp(field.endDateField);
                end.setMinValue(date);
                end.validate();
                this.dateRangeMin = date;
            }
            return true;
        }
    });
    
    Ext.onReady(function(){
        
        Ext.QuickTips.init();
    
        function myAjaxRequest(formObject, gridObject){
            var fieldValue = formObject.getForm().getFieldValues();
            if(plsEnterKey(fieldValue)){
                <?=CamemisPage::alertPleaseSelect(NOTES,PLS_ENTER_KEYWORD)?>
            }else{
                var myMask = new Ext.LoadMask(Ext.getBody(), {msg:'<b>CAMEMIS <?=LOADING?></b>', msgCls:'x-mask-loading-camemis'});
                myMask.show();
                Ext.Ajax.request({
                    url: '/studentpreschool/jsonload'
                    ,method: 'POST'
                    ,params:{cmd:'jsonSearchStudentPreschool'}
                    ,form: formObject.getForm().getEl().dom
                    ,success: function(response, options) {
                        jsonData = Ext.util.JSON.decode(response.responseText);
    //                    gridObject.getStore().setBaseParam('CODE',fieldValue.CODE);
                        var myform=<?=$OBJECT_FORM->ExtgetCmp();?>;
                        for(var i=0;i<myform.getForm().getEl().dom.length;i++){
                            if(myform.getForm().getEl().dom[i].value){
                                Ext.getCmp('<?=$OBJECT_GRID->getObjectId();?>').getStore().setBaseParam(myform.getForm().getEl().dom[i].name,myform.getForm().getEl().dom[i].value);
                            }
                        }
                        gridObject.getStore().loadData(jsonData);
                        myMask.hide();
                    }
                });
            }
        }
        
        function plsEnterKey(obj){
            var s;
            if(obj.LASTNAME || obj.FIRSTNAME || obj.GENDER || obj.INFORMATION_TYPE
                || obj.ADDRESS || obj.APPLICATION_TYPE || obj.TESTING_TYPE 
                || obj.REFERENCE_TYPE || obj.EMAIL || obj.PHONE 
            ){
                s = 0;
            }else{
                s = 1;
            }
            return s;
        }
        
        function keyEnter(){
            Ext.getCmp('TABPANEL_ID').getLayout().setActiveItem(1);
            var formObject = Ext.getCmp('<?=$OBJECT_FORM->getObjectId()?>');
            var gridObject = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>');
            myAjaxRequest(formObject, gridObject);
        }
    
        function renderText(value,record){
            return '<div style=\"font-weight:normal; color:#000000; padding: 5px; height:15px;background:#FFFFFF;\">' + value + '</div>';
        }
        <?
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

        $OBJECT_FORM->addTBarItems("
            text: '".FIND."'
            ,formBind:true
            ,iconCls:'icon-magnifier'
            ,scope:this
            ,handler: function(){
                Ext.getCmp('TABPANEL_ID').getLayout().setActiveItem(1);
                var formObject = Ext.getCmp('".$OBJECT_FORM->getObjectId()."');
                var gridObject = Ext.getCmp('".$OBJECT_GRID->getObjectId()."');
                myAjaxRequest(formObject, gridObject);
            }
        ");
        
        $OBJECT_FORM->addTBarItems("
            text: '".MENU_OPTIONS."'
            ,iconCls:'icon-list-items'
            ,menu:[{
                text: '" . ADD_PRESCHOOL_STUDENT . "'
                ,iconCls:'icon-application_form_add'
                ,handler: function(){
                    clickOpenPage('center','".ADD_PRESCHOOL_STUDENT."', '/studentpreschool/studentpreschoolshowitem?objectId=new');
                }
            },{
                text: '" . IMPORT_FROM_XLS_FILE . "'
                ,iconCls:'icon-page_excel'
                ,handler: function(){
                    clickOpenPage('center','".IMPORT_FROM_XLS_FILE."', '/studentpreschool/importxls');
                    Ext.getCmp('WEST_ID').collapse();
                }
            }]
        ");
        
        $INFORMATION_TYPE_STORE = "[
            ['CLEAR', '[---]']
            ,['APPLICATION', '" . APPLICATION_TYPE . "']
            ,['TESTING', '" . TESTING_TYPE . "']
            ,['REFERENCE', '" . REFERENCE_TYPE . "']
        ]";
        
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,id:'INFORMATION_ID'
            ,collapsible:true,collapsed:false
            ,collapsed: false
            ,title: '".INFORMATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 310
            ,items:[
                {".CamemisField::Combo("INFORMATION_TYPE", TYPE, $INFORMATION_TYPE_STORE, false, false, 150, false, true)."}
            ]
        ");
        
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,id: 'PERSONAL_INFORMATION_ID'
            ,collapsible:true,collapsed:false
            ,collapsed: false
            ,title: '".PERSONAL_INFORMATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 310
            ,items:[
                {".CamemisField::Textfield("FIRSTNAME_ID", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("LASTNAME_ID", "LASTNAME", LASTNAME, false, false, false, 150)."}
                ,{".CamemisField::ComboGender(GENDER, false, false, 150)."}
            ]
        ");
        
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,id:'CONTACT_INFORMATION_ID'
            ,collapsible:true,collapsed:false
            ,collapsed: false
            ,title: '".CONTACT_INFORMATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 310
            ,items:[
                {".CamemisField::Textfield("ADDRESS", "ADDRESS", ADDRESS, false, false, false, 150)."}
                ,{".CamemisField::Textfield("PHONE_ID", "PHONE", PHONE, false, false, false, 150)."}
                ,{".CamemisField::Textfield("EMAIL_ID", "EMAIL", EMAIL, false, false, false, 150)."}
            ]
        ");
        
        $SEARCH_TYPE_STORE = "[
            ['CLEAR', '[---]']
            ,['CREATED_DATE', '" . CREATED_DATE . "']
            ,['START_DATE', '" . START_DATE . "']
            ,['END_DATE', '" . END_DATE . "']
        ]";
             
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,id:'APPLICATION_TYPE_ID'
            ,collapsible:true,collapsed:false
            ,collapsed: false
            ,title: '".APPLICATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 310
            ,items:[
            {
                name: 'APPLICATION_START_DATE'
                ,hidden: false
                ,width: 150
                ,fieldLabel: '" . START_DATE . "'
                ,xtype: 'datefield'
                ,id: 'APPLICATION_START_DATE'
                ,vtype: 'daterange'
                ,endDateField: 'APPLICATION_END_DATE'
                ,format: '" . setExtDatafieldFormat() . "'
                ,allowBlank: true
            },{
                name: 'APPLICATION_END_DATE'
                ,hidden: false
                ,width: 150
                ,fieldLabel: '" . END_DATE . "'
                ,xtype: 'datefield'
                ,id: 'APPLICATION_END_DATE'
                ,vtype: 'daterange'
                ,format: '" . setExtDatafieldFormat() . "'
                ,startDateField: 'APPLICATION_START_DATE'
                ,allowBlank: true
            }
            ,{".CamemisField::comboCamemisTypes("APPLICATION_TYPE", TYPE, false,150, false)."}
            ,{".CamemisField::comboCamemisTypes("DEGREE_TYPE", DEGREE_TYPE, false,150, false)."}
            ,{".CamemisField::comboCamemisTypes("SESSION_EVENT", SESSION_EVENT, false,150, false)."}
            ,{".CamemisField::comboCamemisTypes("APPLICATION_STATUS", STATUS, false,150, false)."}
            ]
        ");
        
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,id:'REFERENCE_TYPE_ID'
            ,collapsible:true,collapsed:false
            ,collapsed: false
            ,title: '".REFERENCE."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 310
            ,items:[
                {".CamemisField::comboCamemisTypes("REFERENCE_TYPE", TYPE, false,150, false)."}
            ]
        ");
        
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,id:'TESTING_TYPE_ID'
            ,collapsible:true,collapsed:false
            ,collapsed: false
            ,title: '".TESTING."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 310
            ,items:[
            {
                name: 'TESTING_START_DATE'
                ,hidden: false
                ,width: 150
                ,fieldLabel: '" . START_DATE . "'
                ,xtype: 'datefield'
                ,id: 'TESTING_START_DATE'
                ,vtype: 'daterange'
                ,endDateField: 'TESTING_END_DATE'
                ,format: '" . setExtDatafieldFormat() . "'
                ,allowBlank: true
            },{
                name: 'TESTING_END_DATE'
                ,hidden: false
                ,width: 150
                ,fieldLabel: '" . END_DATE . "'
                ,xtype: 'datefield'
                ,id: 'TESTING_END_DATE'
                ,vtype: 'daterange'
                ,format: '" . setExtDatafieldFormat() . "'
                ,startDateField: 'TESTING_START_DATE'
                ,allowBlank: true
            }
            ,{".CamemisField::comboCamemisTypes("TESTING_TYPE", TYPE, false,150, false)."}
            ]
        ");
        
        $OBJECT_FORM->setBodyStyle("padding:10px;background:".CamemisPage::userFormBgColor().";");
        $OBJECT_FORM->labelAlign = "left";
        $OBJECT_FORM->isObjectDefaultOnLoad = false;
        $OBJECT_FORM->isKeys = false;
        $OBJECT_FORM->renderJS();   
        /////////////////////////////////////////////
        
        $OBJECT_GRID->addReadField("name: 'ID'");
        $OBJECT_GRID->addReadField("name: 'STUDENT_NAME'");
        $OBJECT_GRID->addReadField("name: 'STUDENT_INDEX'");
        $OBJECT_GRID->addReadField("name: 'GENDER'");
        $OBJECT_GRID->addReadField("name: 'CAMEMIS_TYPE'");
        $OBJECT_GRID->addReadField("name: 'SCORE'");
        $OBJECT_GRID->addReadField("name: 'ID_PRESCHOOLTYPE'");
        $OBJECT_GRID->addReadField("name: 'DESCRIPTION'");
        $OBJECT_GRID->addReadField("name: 'SESSION_EVENT'");
        $OBJECT_GRID->addReadField("name: 'CREATED_DATE'");
        $OBJECT_GRID->addReadField("name: 'CREATED_BY'");
        $OBJECT_GRID->addReadField("name: 'OBJECT_TYPE'");
        $OBJECT_GRID->addReadField("name: 'DEGREE_TYPE'");
        $OBJECT_GRID->addReadField("name: 'APPLICATION_STATUS'");
        $OBJECT_GRID->addReadField("name: 'PHONE'");
        $OBJECT_GRID->addReadField("name: 'EMAIL'");
        
        
        $OBJECT_GRID->addColumn("header: '<b>" . FULL_NAME . "</b>', align:'left', width: 150,hidden:".checkColHidden(1, $columndata).", dataIndex: 'STUDENT_NAME'");
        $OBJECT_GRID->addColumn("header: '<b>" . GENDER . "</b>', align:'left', width: 150,hidden:".checkColHidden(2, $columndata).", dataIndex: 'GENDER'");
        $OBJECT_GRID->addColumn("header: '<b>" . TYPE . "</b>', align:'left', width: 120,hidden:".checkColHidden(3, $columndata).", dataIndex: 'CAMEMIS_TYPE'");
        $OBJECT_GRID->addColumn("header: '<b>" . SCORE . "</b>', align:'left', width: 150,hidden:".checkColHidden(4, $columndata).", dataIndex: 'SCORE'");
        $OBJECT_GRID->addColumn("header: '<b>" . DEGREE_TYPE . "</b>', align:'left', width: 100,hidden:".checkColHidden(5, $columndata).", dataIndex: 'DEGREE_TYPE'");
        $OBJECT_GRID->addColumn("header: '<b>" . SESSION_EVENT . "</b>', align:'left', width: 100,hidden:".checkColHidden(6, $columndata).", dataIndex: 'SESSION_EVENT'");
        $OBJECT_GRID->addColumn("header: '<b>" . DESCRIPTION . "</b>', align:'left', width: 150,hidden:".checkColHidden(7, $columndata).", dataIndex: 'DESCRIPTION'");
        $OBJECT_GRID->addColumn("header: '<b>" . STATUS . "</b>', align:'left', width: 100,hidden:".checkColHidden(8, $columndata).", dataIndex: 'APPLICATION_STATUS'");
        $OBJECT_GRID->addColumn("header: '<b>" . CREATED_DATE . "</b>', align:'left', width: 100,hidden:".checkColHidden(9, $columndata).", dataIndex: 'CREATED_DATE'");
        $OBJECT_GRID->addColumn("header: '<b>" . CREATED_BY . "</b>', align:'left', width: 100,hidden:".checkColHidden(10, $columndata).", dataIndex: 'CREATED_BY'");
        $OBJECT_GRID->addColumn("header: '<b>" . PHONE . "</b>', align:'left', width: 100,hidden:".checkColHidden(11, $columndata).", dataIndex: 'PHONE'");
        $OBJECT_GRID->addColumn("header: '<b>" . EMAIL . "</b>', align:'left', width: 100,hidden:".checkColHidden(12, $columndata).", dataIndex: 'EMAIL'");
        
        
        
        
        //if(UserAuth::getACLValue("STUDENT_SEARCH_EXECUTE_RIGHT")){
        $OBJECT_GRID->addTBarItems("
            tbar.add([{
                text: '" . EXPORT_TO_EXCEL . "'
                ,id: 'EXPORT_TO_EXCEL'
                ,iconCls:'icon-page_excel'
                ,handler: function(){
                    Ext.MessageBox.show({
                        msg: '".SAVING_YOUR_DATA_PLEASE_WAIT."',
                        progressText: 'Saving...',
                        width:300,
                        wait:true,
                        waitConfig: {interval:200},
                        icon:'ext-mb-download'
                    });
                    myForm = Ext.getCmp('".$OBJECT_FORM->getObjectId()."').getForm();
                    Ext.Ajax.request({
                        url: '/export/jsonexcel/'
                        ,method: 'POST'
                        ,timeout: 600000
                        ,params:{cmd: 'jsonSearchStudentPreschool',objectId:'STUDENT_PRESCHOOL_LIST_ID'}
                        ,form: myForm.getEl().dom
                        ,success: function(response, options) {
                            Ext.MessageBox.hide();
                            window.location='/export/openstudentpreschoollist/'
                        }
                    });
                }
            }]);
        ");
        //}
        
        $OBJECT_GRID->baseParams = "
            start:0
            ,limit:100
            ,cmd: 'jsonSearchStudentPreschool'
        ";
        
        $OBJECT_GRID->isGroupingView = true;
        $OBJECT_GRID->groupField = "STUDENT_NAME";

        
        $OBJECT_GRID->isObjectDefaultOnLoad = false;
        $OBJECT_GRID->setUserColumn = true;
        $OBJECT_GRID->loadMask = false;
        $OBJECT_GRID->forceFit = "false";
        $OBJECT_GRID->renderJS();
        /////////////////////////////////////////////////
        
        $js = "";
        $js .= "viewport = new Ext.Viewport({";
            $js .= "layout: 'fit'";
            $js .= ",border: false";
            $js .= ",items:[{";
                $js .= "layout:'border'";
                $js .= ",border: false";
                $js .= ",defaults: {";
                    $js .= "collapsible: true";
                    $js .= ",split: true";
                $js .= "}";
                $js .= ",items: [{";
                    $js .= "title: ''";
                    $js .= ",id:'WEST_ID'";
                    $js .= ",region:'west'";
                    $js .= ",margins: '3 0 3 3'";
                    $js .= ",cmargins: '3 3 3 3'";
                    $js .= ",width: 350";
                    $js .= ",minSize: 350";
                    $js .= ",maxSize: 350";
                    $js .= ",layout: 'fit'";
                    $js .= ",keys:{";
                        $js .= "key:[13]";
                        $js .= ",fn: keyEnter";
                        $js .= ",scope:this";
                    $js .= "}";
                    $js .= ",items: [{xtype: '".$OBJECT_FORM->getObjectXType()."'}]";
                $js .= "},{";
                    $js .= "title: ''";
                    $js .= ",collapsible: false";
                    $js .= ",id: 'center'";
                    $js .= ",region:'center'";
                    $js .= ",layout: 'card'";
                    $js .= ",activeItem: 0";
                    $js .= ",margins: '3 3 3 0'";
                    $js .= ",items:[{";
                        $js .= "layout:'fit'";
                        $js .= ",bodyStyle: 'background:".CamemisPage::userBgColor().";padding:3px'";
                        $js .= ",border: false";
                        $js .= ",items:[{";
                            $js .= "xtype: 'tabpanel'";
                            $js .= ",id:'TABPANEL_ID'";
                            $js .= ",tabPosition: 'top'";
                            $js .= ",plain:true";
                            $js .= ",activeTab: 0";
                            $js .= ",enableTabScroll:true";
                            $js .= ",items:[{";
                                $js .= "title:'".CHART."'";
                                $js .= ",id:'TAB_CHART'";
                                $js .= ",layout: 'card'";
                                $js .= ",activeItem: 0";
                                $js .= ",items: [new Ext.ux.IFrameComponent({ id: 'STUDENT_PRESCHOOL_CHARTS', url:'/studentpreschool/chartreport/'})]";
                            $js .= "},{";
                               $js .= "title:'".SEARCH_RESULT."'";
                               $js .= ",id:'SEARCH_RESULT'";
                               $js .= ",layout:'fit'";
                               $js .= ",items: [{xtype:'".$OBJECT_GRID->getObjectXType()."'}]";
                            $js .= "}]";
                        $js .= "}]";
                    $js .= "}]";
                $js .= "}]";
            $js .= "}]";
        $js .= "});";
        
        $js .= "var grid = Ext.getCmp('".$OBJECT_GRID->getObjectId()."');";
        $js .= "if(grid) grid.on('cellclick', function(grid, rowIndex, columnIndex, event) {";
        $js .= "var record = grid.store.getAt(rowIndex);";
        $js .= "clickOpenPage('center','', '/studentpreschool/studentpreschoolshowitem?objectId='+record.data.STUDENT_INDEX+'&type=studentPreschool');";   
        $js .= "})";
        
        print $js;
        
        ?>
                
        Ext.getCmp('APPLICATION_TYPE_ID').hide();
        Ext.getCmp('TESTING_TYPE_ID').hide();
        Ext.getCmp('PERSONAL_INFORMATION_ID').hide();
        Ext.getCmp('CONTACT_INFORMATION_ID').hide();
        Ext.getCmp('REFERENCE_TYPE_ID').hide();
        
        Ext.getCmp('INFORMATION_TYPE_ID').on('select', function() {
            
            Ext.getCmp('TABPANEL_ID').getLayout().setActiveItem(1);
            myGrid = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>');
            myGrid.store.removeAll();
        
            switch(Ext.getCmp('INFORMATION_TYPE_ID').getValue()){
                case 'APPLICATION':
                    Ext.getCmp('APPLICATION_TYPE_ID').show();
                    Ext.getCmp('TESTING_TYPE_ID').hide();
                    Ext.getCmp('PERSONAL_INFORMATION_ID').show();
                    Ext.getCmp('CONTACT_INFORMATION_ID').show();
                    Ext.getCmp('REFERENCE_TYPE_ID').hide();
                    myGrid.getColumnModel().setHidden(3, false);
                    myGrid.getColumnModel().setHidden(4, true);
                    myGrid.getColumnModel().setHidden(5, false);
                    myGrid.getColumnModel().setHidden(6, false);
                    myGrid.getColumnModel().setHidden(7, false);
                    myGrid.getColumnModel().setHidden(8, false);
                    myGrid.getColumnModel().setHidden(9, false);
                    myGrid.getColumnModel().setHidden(10, false);
                    myGrid.getColumnModel().setHidden(11, true);
                    myGrid.getColumnModel().setHidden(12, true);
                    
                    break;
                    
                case 'TESTING':
                    Ext.getCmp('APPLICATION_TYPE_ID').hide();
                    Ext.getCmp('TESTING_TYPE_ID').show();
                    Ext.getCmp('PERSONAL_INFORMATION_ID').show();
                    Ext.getCmp('CONTACT_INFORMATION_ID').show();
                    Ext.getCmp('REFERENCE_TYPE_ID').hide();
                    myGrid.getColumnModel().setHidden(3, false);
                    myGrid.getColumnModel().setHidden(4, false);
                    myGrid.getColumnModel().setHidden(5, true);
                    myGrid.getColumnModel().setHidden(6, true);
                    myGrid.getColumnModel().setHidden(7, false);
                    myGrid.getColumnModel().setHidden(8, true);
                    myGrid.getColumnModel().setHidden(9, false);
                    myGrid.getColumnModel().setHidden(10, false);
                    myGrid.getColumnModel().setHidden(11, true);
                    myGrid.getColumnModel().setHidden(12, true);
                    break
                    
                case 'REFERENCE':
                    Ext.getCmp('APPLICATION_TYPE_ID').hide();
                    Ext.getCmp('TESTING_TYPE_ID').hide();
                    Ext.getCmp('PERSONAL_INFORMATION_ID').hide();
                    Ext.getCmp('CONTACT_INFORMATION_ID').hide();
                    Ext.getCmp('REFERENCE_TYPE_ID').show();
                    myGrid.getColumnModel().setHidden(3, false);
                    myGrid.getColumnModel().setHidden(4, true);
                    myGrid.getColumnModel().setHidden(5, true);
                    myGrid.getColumnModel().setHidden(6, true);
                    myGrid.getColumnModel().setHidden(7, false);
                    myGrid.getColumnModel().setHidden(8, true);
                    myGrid.getColumnModel().setHidden(9, true);
                    myGrid.getColumnModel().setHidden(10, true);
                    myGrid.getColumnModel().setHidden(11, false);
                    myGrid.getColumnModel().setHidden(12, false);
                    break
                
                default:
                    Ext.getCmp('APPLICATION_TYPE_ID').hide();
                    Ext.getCmp('TESTING_TYPE_ID').hide();
                    Ext.getCmp('PERSONAL_INFORMATION_ID').show();
                    Ext.getCmp('CONTACT_INFORMATION_ID').hide();
                    Ext.getCmp('REFERENCE_TYPE_ID').hide();
                    myGrid.getColumnModel().setHidden(3, false);
                    myGrid.getColumnModel().setHidden(4, true);
                    myGrid.getColumnModel().setHidden(5, true);
                    myGrid.getColumnModel().setHidden(6, true);
                    myGrid.getColumnModel().setHidden(7, false);
                    myGrid.getColumnModel().setHidden(8, true);
                    myGrid.getColumnModel().setHidden(9, true);
                    myGrid.getColumnModel().setHidden(10, true);
                    myGrid.getColumnModel().setHidden(11, true);
                    myGrid.getColumnModel().setHidden(12, true);
                    break;
            }
        });
        Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>