<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisSchoolTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once 'models/UserAuth.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$GENERAL_EDU_TREE = new CamemisTree("ACADEMIC","LIST");
$GENERAL_EDU_TREE->setURL('/academic/jsontree/');
$GENERAL_EDU_TREE->setSaveUrl('/academic/jsonsave/');

$TRAINING_TREE = new CamemisTree("TRAINING","LIST");
$TRAINING_TREE->setURL('/training/jsontree/');
$TRAINING_TREE->setSaveUrl('/training/jsonsave/');

$OBJECT_FORM = new CamemisForm("STUDENT");
$OBJECT_FORM->setLoadUrl('/student/jsonload/');
$OBJECT_FORM->setSaveUrl('/student/jsonsave/');

$OBJECT_GRID = new CamemisGrid("STUDENT", "STUDENTSEARCH");
$OBJECT_GRID->setLoadUrl("/student/jsonload/");
$OBJECT_GRID->setSaveUrl("/student/jsonsave/");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
$EDIT_RIGHT=UserAuth::getACLValue("SMS_REGISTRATION_EDIT_RIGHT")?"false":"true";
$REMOVE_RIGHT=UserAuth::getACLValue("SMS_REGISTRATION_REMOVE_RIGHT")?"false":"true";
$EXECUTE_RIGHT=UserAuth::getACLValue("SMS_REGISTRATION_EXECUTE_RIGHT")?"false":"true";

?>
<script>
var seachrSting = "";
var studentId = '';
Ext.onReady(function() {
    
    Ext.form.Field.prototype.msgTarget = 'side';
        
    function renderTextSMS(value, metadata, record){
        return '<div style="font-weight:bold; color: #333;">' + value + '</div>';
    }
    <?
    /**
    * Extjs: s.gif
    */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

    $OBJECT_SCHOOLYEAR = new CamemisDynCombo("ACADEMICDATE","COMBO");
    $OBJECT_SCHOOLYEAR->setLoadUrl('/academicdate/jsonload/');
    $OBJECT_SCHOOLYEAR->objectTitle = false;
    $OBJECT_SCHOOLYEAR->allowBlank = "true";
    $OBJECT_SCHOOLYEAR->varName = "SCHOOLYEAR";
    $OBJECT_SCHOOLYEAR->width = 150;
    $OBJECT_SCHOOLYEAR->setLoadParams("cmd: 'allSchoolyearCombo'");
    $OBJECT_SCHOOLYEAR->renderJS();
        
    $TRAINING_TREE->isAsyncTreeNode = false;
    $TRAINING_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
    $TRAINING_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $TRAINING_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());

    $TRAINING_TREE->setBaseParams("
        cmd: 'jsonTreeAllTrainings'
    ");
    $TRAINING_TREE->backgroundColor = "#F9F9F9";
    $TRAINING_TREE->isTreeExpand = false;  
    $TRAINING_TREE->renderJS();
    $triggerOnClickTraining = "
        openWinXType('XTYPE_TRAINING','".TRAINING_PROGRAMS."', '".$TRAINING_TREE->getObjectXType()."', 500, percentHeight(85));
        var myTree = Ext.getCmp('".$TRAINING_TREE->getObjectId()."');
        if (myTree) myTree.on('click', function(node, e){   
            if(node.attributes.objecttype == 'TERM' || node.attributes.objecttype == 'CLASS'){
                Ext.getCmp('CHOOSE_TRAINING_NAME_ID').setValue(node.text);
                Ext.getCmp('CHOOSE_TRAINING').setValue(node.id);
                Ext.getCmp('XTYPE_TRAINING').close();
            }
        });
    ";
    //
    $GENERAL_EDU_TREE->isAsyncTreeNode = false;
    $GENERAL_EDU_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
    $GENERAL_EDU_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $GENERAL_EDU_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());

    $GENERAL_EDU_TREE->addTBarItems("
        xtype: 'buttongroup'
        ,items:[{
            width: 120
            ,xtype: '".$OBJECT_SCHOOLYEAR->getObjectXType()."'
        }]
    ");

    $GENERAL_EDU_TREE->setBaseParams("
        cmd: 'getTreeTraditionalEducationSystem'
    ");
    $GENERAL_EDU_TREE->backgroundColor = "#F9F9F9";
    $GENERAL_EDU_TREE->isOnClickContextMenu = false;
    $GENERAL_EDU_TREE->isTreeExpand = false;
    $GENERAL_EDU_TREE->renderJS();

    $triggerOnClick = "
        openWinXType('HIGHER_EDUCATION','".HIGHER_EDUCATION."', '".$GENERAL_EDU_TREE->getObjectXType()."', 500, percentHeight(85));
        var myTree = Ext.getCmp('".$GENERAL_EDU_TREE->getObjectId()."');

        Ext.getCmp('COMBO_ID').on('select', function() {
            myTree.loader.baseParams.SCHOOLYEAR = Ext.getCmp('COMBO_ID').getValue();
            myTree.root.reload();
            myTree.getRootNode().expand(true, false);
        });

        myTree.getRootNode().expand(true, false);

        if (myTree) myTree.on('click', function(node, e){   
            if(node.attributes.objecttype == 'SCHOOLYEAR' || node.attributes.objecttype == 'CLASS' ){
                Ext.getCmp('CHOOSE_GRADE_NAME_ID').setValue(node.attributes.title);
                Ext.getCmp('CHOOSE_GRADE').setValue(node.id);
                Ext.getCmp('HIGHER_EDUCATION').close();
            }
        });
    ";
    
    $CAMEMIS_PAGE_OBJECT->setAddTab();
    if(!SchoolDBAccess::displayPersonNameInGrid()){
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,title: '".PERSONAL_INFORMATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor().";padding:10px'
            ,width: 310
            ,items:[
                {".CamemisField::ComboYesNO("SMS_SERVICES", "SMS_SERVICES", SMS_SERVICES, true, false, 150)."}
                ,{".CamemisField::Textfield("CODE_ID", "CODE", CODE_ID, false, false, false, 150)."}
                ,{".CamemisField::Textfield("LASTNAME_ID", "LASTNAME", LASTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("FIRSTNAME_ID", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("MOBIL_PHONE_ID", "MOBIL_PHONE", MOBIL_PHONE, false, false, false, 150)."}
            ]
        ");
    }else{
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,title: '".PERSONAL_INFORMATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor().";padding:10px'
            ,width: 310
            ,items:[
                {".CamemisField::ComboYesNO("SMS_SERVICES", "SMS_SERVICES", SMS_SERVICES, true, false, 150)."}
                ,{".CamemisField::Textfield("CODE_ID", "CODE", CODE_ID, false, false, false, 150)."}
                ,{".CamemisField::Textfield("FIRSTNAME_ID", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("LASTNAME_ID", "LASTNAME", LASTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("MOBIL_PHONE_ID", "MOBIL_PHONE", MOBIL_PHONE, false, false, false, 150)."}
            ]
        ");
    }

    $SEARCH_ITEMS = array();  
    $GENERAL_EDUCATION="{".CamemisField::Radio("GENERAL_EDUCATION", "ACADEMIC", GENERAL_EDUCATION, "GENERAL", false)."}";
    $TRAINING_PROGRAMS= "{".CamemisField::Radio("TRAINING", "ACADEMIC", TRAINING_PROGRAMS, "TRAINING", false)."}";
    $CHOOSE_GRADE_NAME= "{".CamemisField::Trigger("CHOOSE_GRADE_NAME",GENERAL_EDUCATION,$triggerOnClick, false, true, false, 150)."}";
    $CHOOSE_TRAINING_NAME= "{".CamemisField::Trigger("CHOOSE_TRAINING_NAME",TRAINING_PROGRAMS,$triggerOnClickTraining,false, true, false, 150)."}";
    if (UserAuth::displayRoleGeneralEducation()){
       $SEARCH_ITEMS[]=  $GENERAL_EDUCATION ;
    }
    if (UserAuth::displayRoleTrainingEducation()){
       $SEARCH_ITEMS[]=  $TRAINING_PROGRAMS ;    
    }
    $SEARCH_ITEMS[]=  $CHOOSE_GRADE_NAME ;
    $SEARCH_ITEMS[]=  $CHOOSE_TRAINING_NAME ;
    $CHOOSE_SEARCH_ITEMS = implode(",", $SEARCH_ITEMS); 
    $OBJECT_FORM->addObjectItems("
        xtype:'fieldset'
        ,collapsible:true,collapsed:false
        ,collapsed: false
        ,title: '".SCHOOL_INFORMATION."'
        ,bodyStyle: 'background:".CamemisPage::userFormBgColor().";padding:10px'
        ,width: 310
        ,items:[".$CHOOSE_SEARCH_ITEMS."]
    ");
    
    $OBJECT_FORM->addObjectItems(CamemisField::Hidden("CHOOSE_GRADE",false));
    $OBJECT_FORM->addObjectItems(CamemisField::Hidden("CHOOSE_TRAINING",false));
    
    $OBJECT_FORM->addTBarItems("
        text: '".RESET."'
        ,iconCls:'icon-arrow_undo'
        ,scope:this
        ,handler: function(){
            window.location='".$_SERVER["REQUEST_URI"]."';
        }
    ");
    if (UserAuth::getACLValue("SMS_REGISTRATION_READ_RIGHT"))
    $OBJECT_FORM->addTBarItems("
        text: '".FIND."'
        ,formBind:true
        ,iconCls:'icon-magnifier'
        ,scope:this
        ,handler:this.onEmbeddedEvents
    ");
                        
    $OBJECT_FORM->setBodyStyle("padding:10px;background:".CamemisPage::userFormBgColor().";");
    $OBJECT_FORM->labelAlign = "left";
    $OBJECT_FORM->isObjectDefaultOnLoad = false;

    $OBJECT_FORM->setonEmbeddedEvents("
        
        Ext.getCmp('STUDENT_FORM').disable();
        
        var code = this.getForm().findField('CODE').getValue();
        var firstname = this.getForm().findField('FIRSTNAME').getValue();
        var lastname = this.getForm().findField('LASTNAME').getValue();
        var choosegrade = this.getForm().findField('CHOOSE_GRADE').getValue();
        var searchMobilphone = this.getForm().findField('MOBIL_PHONE_ID').getValue();
        var searchSMSServices = this.getForm().findField('SMS_SERVICES').getValue();
        
        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.baseParams = {
            start:0
            ,limit:100
            ,cmd: 'searchStudent'
            ,code: code
            ,firstname: firstname
            ,lastname: lastname
            ,choosegrade: choosegrade
            ,searchMobilphone: searchMobilphone
            ,searchSMSServices: searchSMSServices
        };

        searchString = 'code=' + code
        + '&firstname=' + firstname
        + '&lastname=' + lastname
        + '&searchSMSServices=' + searchSMSServices
        + '&choosegrade=' + choosegrade;
        
        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.load();
        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.commitChanges();
        
    ");

    $OBJECT_FORM->isKeys = true;
    $OBJECT_FORM->renderJS();
    
    /**
    * Form end...
    */

    $OBJECT_GRID->addReadField("name: 'CODE'");
    $OBJECT_GRID->addReadField("name: 'STUDENT'");
    $OBJECT_GRID->addReadField("name: 'FIRSTNAME'");
    $OBJECT_GRID->addReadField("name: 'LASTNAME'");
    $OBJECT_GRID->addReadField("name: 'CURRENT_CLASS'");
    $OBJECT_GRID->addReadField("name: 'FORM_MOBIL_PHONE'");
    $OBJECT_GRID->addReadField("name: 'PHONE_COUNTRY_CODE'");
    $OBJECT_GRID->addReadField("name: 'MOBIL_PHONE'");
    $OBJECT_GRID->addReadField("name: 'ICON_SMS_SERVICES'");
    $OBJECT_GRID->addReadField("name: 'SMS_SERVICES'");
    
    $OBJECT_GRID->addColumn("header: '<b>".CODE_ID."</b>', width: 80, renderer: renderTextSMS, sortable: true, dataIndex: 'CODE'");
    if(!SchoolDBAccess::displayPersonNameInGrid()){
        $OBJECT_GRID->addColumn("header: '<b>".LASTNAME."</b>', width: 120, renderer: renderTextSMS, sortable: true, dataIndex: 'LASTNAME'");
        $OBJECT_GRID->addColumn("header: '<b>".FIRSTNAME."</b>', width: 120, renderer: renderTextSMS, sortable: false, dataIndex: 'FIRSTNAME'");
    }else{
        $OBJECT_GRID->addColumn("header: '<b>".FIRSTNAME."</b>', width: 120, renderer: renderTextSMS, sortable: false, dataIndex: 'FIRSTNAME'");
        $OBJECT_GRID->addColumn("header: '<b>".LASTNAME."</b>', width: 120, renderer: renderTextSMS, sortable: true, dataIndex: 'LASTNAME'");
    }
    $OBJECT_GRID->addColumn("header: '<b>".MOBIL_PHONE."</b>', width: 200, renderer: renderTextSMS, sortable: true, dataIndex: 'MOBIL_PHONE'");
    $OBJECT_GRID->addColumn("header: '<b>".SMS_SERVICES."</b>', align:'center', width: 120, sortable: true, dataIndex: 'ICON_SMS_SERVICES'");
    
    $OBJECT_GRID->isObjectDefaultOnLoad = false;
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'searchStudent'
    ";
    
    $OBJECT_GRID->objectTitle = SEARCH_RESULT;
    $OBJECT_GRID->loadMask = true;
    $OBJECT_GRID->isQuickySearch = false;
    $OBJECT_GRID->removeNAME = "STUDENT";
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();
    
    $STUDENT_FORM_ITEMS = "[";
    $STUDENT_FORM_ITEMS .= "{".CamemisField::ComboYesNO("FORM_SMS_SERVICES", "SMS_SERVICES", SMS_SERVICES, true)."}";
    $STUDENT_FORM_ITEMS .= ",{".CamemisField::Textfield("FORM_MOBIL_PHONE", "FORM_MOBIL_PHONE", MOBIL_PHONE, true, false, false)."}";
    $STUDENT_FORM_ITEMS .= "]";
    ?>
    var gridForm = new Ext.FormPanel({
        id: 'STUDENT_FORM'
        ,disabled:false
        ,frame: false
        ,border: true
        ,labelAlign: 'top'
        ,items:[{
            border: false
            ,layout: 'form'
            ,bodyStyle: 'background:<?=CamemisPage::userFormBgColor();?>; padding:10px'
            ,items: <?=$STUDENT_FORM_ITEMS;?>
            ,tbar:[{
                text: '<?=CANCEL?>'
                ,iconCls:'icon-cancel'
                ,handler: function(){
                    var preview = Ext.getCmp('EAST_ID');
                    preview['hide']();
                    preview.ownerCt.doLayout();
                }
            },'-',{
                text: '<?=REMOVE?>'
                ,hidden:<?=$REMOVE_RIGHT;?>
                ,id: 'REMOVE_ID'
                ,iconCls:'icon-delete'
                ,handler: function(){
                    Ext.Msg.show({
                        title:'<b><?=WARNING?></b>'
                        ,msg:'<?=MSG_DELETE_ASSIGNMENT?>'
                        ,width:250
                        ,modal:true
                        ,icon:Ext.Msg.WARNING
                        ,buttons:Ext.Msg.YESNO
                        ,fn: function(btn, text){
                            if (btn == 'yes'){
                                Ext.Ajax.request({
                                    url: '/student/jsonsave/'
                                    ,method: 'POST'
                                    ,params: {cmd: 'actionRemoveSMSRegistration', objectId: studentId}
                                    ,success: function(response, options) {
                                        Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.reload();
                                        var preview = Ext.getCmp('EAST_ID');
                                        preview['hide']();
                                        preview.ownerCt.doLayout();
                                    }
                                });
                            }
                        }
                    });
                }
            },'-',{
                text: '<?=SAVE?>'
                ,iconCls:'icon-disk'
                ,hidden:<?=$EDIT_RIGHT;?>
                ,handler: function(){
                    Ext.getCmp('STUDENT_FORM').getForm().submit({
                        url: '/sms/jsonsave/'
                        ,scope:this
                        ,success: function(result){
                            Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.reload();
                            var preview = Ext.getCmp('EAST_ID');
                            preview['hide']();
                            preview.ownerCt.doLayout();
                        }
                        ,failure: function(result){}
                        ,params:{
                            cmd: 'actionStudentSMSRegistration'
                            ,studentId: studentId
                        }
                    });
                }
            }]
        }]
    });
    
    viewport = new Ext.Viewport({
        border: false
        ,layout: 'fit'
        ,items:[{
            border: false
            ,id: 'VIEWPORT_CONTENT'
            ,layout: 'fit'
            ,items:[{
                layout:'border'
                ,border: false
                ,defaults: {
                    collapsible: true
                    ,split: true
                }
                ,items: [{
                    region:'west'
                    ,title: 'SMS-<?=STUDENT?>'
                    ,id: 'WEST_ID'
                    ,margins: '3 0 3 3'
                    ,cmargins: '3 3 3 3'
                    ,width: 350
                    ,minSize: 350
                    ,maxSize: 350
                    ,layout: 'fit'
                    ,items: [{xtype: '<?= $OBJECT_FORM->getObjectXType(); ?>'}]
                },{
                    collapsible: false
                    ,id: 'CENTER_ID'
                    ,region:'center'
                    ,margins: '3 0 3 0'
                    ,layout: 'card'
                    ,activeItem: 0
                    ,items:[{xtype: '<?=$OBJECT_GRID->getObjectXtype();?>'}]
                },{
                    region:'east'
                    ,collapsible: false
                    ,id: 'EAST_ID'
                    ,margins: '3 3 3 0'
                    ,cmargins: '3 3 3 3'
                    ,width:350
                    ,minSize:350
                    ,maxSize:350
                    ,bodyStyle: 'background:<?=CamemisPage::userFormBgColor();?>;padding:10px'
                    ,layout :'form'
                    ,labelWidth: 20
                    ,items: [gridForm]
                }] 
            }]
        }]
    });
    
    var grid = Ext.getCmp('<?= $OBJECT_GRID->getObjectId() ?>');
    grid.on('rowclick', function(grid, rowIndex, e){
        var rec = grid.store.getAt(rowIndex);
        studentId = rec.data.ID;
        
        if (rec.data.SMS_SERVICES == 1){
            Ext.getCmp("REMOVE_ID").show();
        }else{
            Ext.getCmp("REMOVE_ID").hide();
        }
        
        Ext.getCmp("STUDENT_FORM").enable();
        Ext.getCmp("STUDENT_FORM").getForm().loadRecord(rec);
        
        var preview = Ext.getCmp('EAST_ID');
        preview['show']();
        preview.ownerCt.doLayout();
    });
    if(Ext.get('GENERAL_EDUCATION')){
        Ext.get('GENERAL_EDUCATION').on('click', function(e){
            if(Ext.getCmp('GENERAL_EDUCATION').getValue() == true){
                Ext.getCmp('CHOOSE_GRADE_NAME_ID').show();
                Ext.getCmp('CHOOSE_TRAINING').setValue('');
                Ext.getCmp('CHOOSE_TRAINING_NAME_ID').hide();
            }
        });
    }
    if(Ext.get('TRAINING')){
        Ext.get('TRAINING').on('click', function(e){
            if(Ext.getCmp('TRAINING').getValue() == true){
                Ext.getCmp('CHOOSE_GRADE_NAME_ID').hide();
                Ext.getCmp('CHOOSE_GRADE').setValue('');
                Ext.getCmp('CHOOSE_TRAINING_NAME_ID').show();
            }
        });
    }
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>