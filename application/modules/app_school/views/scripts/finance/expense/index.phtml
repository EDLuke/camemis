<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_FORM = new CamemisForm("FINANCE");

$CATEGORY_TREE = new CamemisTree("CATEGORY","LIST");
$CATEGORY_TREE->setURL('/dataset/jsontree/');

$DESCRIPTION_TREE = new CamemisTree("DESCRIPTION","LIST");
$DESCRIPTION_TREE->setURL('/dataset/jsontree/');

$OBJECT_GRID = new CamemisGrid("FINANCE", "LIST");
$OBJECT_GRID->setLoadUrl("/finance/jsonload/");
$columndata = Utiles::getGridColumnData("FINANCE_LIST_ID");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>

    function geFormat(data){
        return date.getFullYear() + '-' + (parseInt(date.getMonth()) + 1) + '-' + date.getDate();
    }
    Ext.apply(Ext.form.VTypes, {
        daterange : function(val, field) {
            var date = field.parseDate(val);
            if(!date){
                return false;
            }
            if (field.startDateField) {
                var start = Ext.getCmp(field.startDateField);
                if (!start.maxValue || (date.getTime() != start.maxValue.getTime())) {
                    start.setMaxValue(date);
                    start.validate();
                }
            }
            else if (field.endDateField) {
                var end = Ext.getCmp(field.endDateField);
                if (!end.minValue || (date.getTime() != end.minValue.getTime())) {
                    end.setMinValue(date);
                    end.validate();
                }
            }
            return true;
        }
    });
    
    Ext.onReady(function() {

        function cssText(value, metadata, record){
            return '<div style="font-weight:normal; color:#333; padding:3px;">' + value + '</div>';
        }
        
        function cssNumber(value, metadata, record){
            return '<div style="font-weight:bold; color:#3B5998; padding: 5px;">' + value + '</div>';
        }
        <?
        /**
        * Extjs: s.gif
        */
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
        
        $CATEGORY_TREE->isAsyncTreeNode = false;
        $CATEGORY_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
        $CATEGORY_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
        $CATEGORY_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());

        $CATEGORY_TREE->setBaseParams("
            cmd: 'jsonTreeAllExpenseCategories'
        ");
        
        $CATEGORY_TREE->backgroundColor = "#F9F9F9";
        $CATEGORY_TREE->isTreeExpand = true;
        $CATEGORY_TREE->renderJS();
        $triggerOnClickCategory = "
            openWinXType('CATEGORY','".INCOME_CATEGORY."', '".$CATEGORY_TREE->getObjectXType()."', 500, percentHeight(85));
            var myTree = Ext.getCmp('".$CATEGORY_TREE->getObjectId()."');
            myTree.on('click', function(node, e){
            Ext.getCmp('CHOOSE_CATEGORY_NAME_ID').setValue(node.attributes.text);
            Ext.getCmp('CHOOSE_CATEGORY').setValue(node.attributes.id);
            Ext.getCmp('CATEGORY').close();
        });
        ";
             
        ////////////////////////////////////////////////////////////////////////
        $DESCRIPTION_TREE->isAsyncTreeNode = false;
        $DESCRIPTION_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
        $DESCRIPTION_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
        $DESCRIPTION_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());

        $DESCRIPTION_TREE->setBaseParams("
            cmd: 'jsonTreeAllFinancialDescription'
            ,filter:2
        ");
        
        $DESCRIPTION_TREE->backgroundColor = "#F9F9F9";
        $DESCRIPTION_TREE->isTreeExpand = true;
        $DESCRIPTION_TREE->renderJS();
        $triggerOnClickDescription = "
            openWinXType('DESCRIPTION','".FINANCE_DESCRIPTION."', '".$DESCRIPTION_TREE->getObjectXType()."', 500, percentHeight(85));
            var myTree = Ext.getCmp('".$DESCRIPTION_TREE->getObjectId()."');
            myTree.on('click', function(node, e){
            Ext.getCmp('CHOOSE_DESCRIPTION_NAME_ID').setValue(node.attributes.text);
            Ext.getCmp('CHOOSE_DESCRIPTION').setValue(node.attributes.id);
            Ext.getCmp('DESCRIPTION').close();
        });
        ";
        ////////////////////////////////////////////////////////////////////////
        
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,title: '".DETAIL_INFORMATION."'
            ,bodyStyle: 'background:#EEEEEE; padding:10px'
            ,width: 250
            ,items:[{".CamemisField::Textfield("TRANSACTION_NUMBER", "TRANSACTION_NUMBER", TRANSACTION_NUMBER." (EXP,SAL,TEA, REF-)", false, false, false, 200)."
            },{
                ".CamemisField::Textfield("NAME", "NAME", TRANSACTION_NAME, false, false, false, 200)."
            },{
                name: 'START_DATE'
                ,hidden: false
                ,width: 200
                ,fieldLabel: '" . START_DATE . "'
                ,xtype: 'datefield'
                ,id: 'START_DATE'
                ,vtype: 'daterange'
                ,endDateField: 'END_DATE'
                ,format: '" . setExtDatafieldFormat() . "'
                ,allowBlank: true
            },{
                name: 'END_DATE'
                ,hidden: false
                ,width: 200
                ,fieldLabel: '" . END_DATE . "'
                ,xtype: 'datefield'
                ,id: 'END_DATE'
                ,vtype: 'daterange'
                ,format: '" . setExtDatafieldFormat() . "'
                ,startDateField: 'START_DATE'
                ,allowBlank: true
            },{
                ".CamemisField::Trigger("CHOOSE_CATEGORY_NAME",EXPENSE_CATEGORY,$triggerOnClickCategory,false, false, false, 200)."
            },{
                ".CamemisField::Trigger("CHOOSE_DESCRIPTION_NAME",FINANCE_DESCRIPTION,$triggerOnClickDescription,false, false, false, 200)."
            }]
        ");
        
        $OBJECT_FORM->addObjectItems(CamemisField::Hidden("CHOOSE_CATEGORY",false));    
        $OBJECT_FORM->addObjectItems(CamemisField::Hidden("CHOOSE_DESCRIPTION",false));
        
        $OBJECT_FORM->addTBarItems("
            text: '".RESET."'
            ,iconCls:'icon-arrow_undo'
            ,scope:this
            ,handler: function(){".CamemisPage::setRequestURI()."}
        ");
        
        $FINANCIAL_MANAGEMENT_READ_RIGHT = UserAuth::getACLValue("FINANCIAL_MANAGEMENT_READ_RIGHT")?"false":"true";
        $OBJECT_FORM->addTBarItems("
            text: '".FIND."'
            ,hidden: ".$FINANCIAL_MANAGEMENT_READ_RIGHT."
            ,formBind:true
            ,iconCls:'icon-magnifier'
            ,scope:this
            ,handler:function(){
                var _startDate = this.getForm().findField('START_DATE').getValue(); 
                if(_startDate){
                    
                    startDate = _startDate.getFullYear() + '-' + (parseInt(_startDate.getMonth()) + 1) + '-' + _startDate.getDate();
                }else{
                    startDate = '';
                }
                
                var _endDate = this.getForm().findField('END_DATE').getValue(); 
                if(_endDate){
                    endDate = _endDate.getFullYear() + '-' + (parseInt(_endDate.getMonth()) + 1) + '-' + _endDate.getDate();
                }else{
                    endDate = ''; 
                }
                categoryId = this.getForm().findField('CHOOSE_CATEGORY').getValue(); 
                name = this.getForm().findField('NAME').getValue(); 
                transactionNumber = this.getForm().findField('TRANSACTION_NUMBER').getValue(); 
                financeDescription = this.getForm().findField('CHOOSE_DESCRIPTION').getValue(); 
                
                Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.baseParams = {
                    start:0
                    ,limit:100
                    ,cmd: 'jsonSearchExpense'
                    ,categoryId: categoryId
                    ,startDate: startDate
                    ,endDate: endDate
                    ,name: name
                    ,transactionNumber: transactionNumber
                    ,financeDescription: financeDescription
                };
                Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.load();
            }
        ");
        if( UserAuth::getACLValue("FINANCIAL_MANAGEMENT_EDIT_RIGHT"))
        $OBJECT_FORM->addTBarItems("
            text: '".EXPENSE_TRANSACTION."'
            ,iconCls:'icon-application_form_add'
            ,scope:this
            ,handler: function(){
                clickOpenPage('center','', '/finance/showexpense/?objectId=new');
            }
        ");
        
        $OBJECT_FORM->labelAlign = "top";
        $OBJECT_FORM->isObjectDefaultOnLoad = false;
        $OBJECT_FORM->isKeys = true;
        $OBJECT_FORM->renderJS();
        ///////////////////////////////////////////////////
        
        $OBJECT_GRID->addReadField("name: 'TRANSACTION_NAME'");
        $OBJECT_GRID->addReadField("name: 'TAX_CATEGORY'");
        $OBJECT_GRID->addReadField("name: 'TRANSACTION_AMOUNT'");
        $OBJECT_GRID->addReadField("name: 'PAYMENT_PAID'");
        $OBJECT_GRID->addReadField("name: 'AMOUNT_TAX'");
        $OBJECT_GRID->addReadField("name: 'TRANSACTION_CATEGORY'");
        $OBJECT_GRID->addReadField("name: 'TRANSACTION_DATE'");    
        
        $OBJECT_GRID->addColumn("header: '<b>".TRANSACTION_NUMBER."</b>', align:'left', renderer: cssText, width: 200, hidden:".checkColHidden(1, $columndata).", sortable: true, dataIndex: 'TRANSACTION_NAME'");
        $OBJECT_GRID->addColumn("header: '<b>".TRANSACTION_AMOUNT."</b>', align:'right', renderer: cssNumber, width: 150, hidden:".checkColHidden(2, $columndata).", sortable: true, dataIndex: 'TRANSACTION_AMOUNT'");
        $OBJECT_GRID->addColumn("header: '<b>".PAYMENT_PAID."</b>', align:'right', renderer: cssNumber, width: 150, hidden:".checkColHidden(3, $columndata).", sortable: true, dataIndex: 'PAYMENT_PAID'");
        $OBJECT_GRID->addColumn("header: '<b>".AMOUNT_TAX."</b>', align:'right', renderer: cssNumber, width: 150, hidden:".checkColHidden(4, $columndata).",sortable: true, dataIndex: 'AMOUNT_TAX'");
        $OBJECT_GRID->addColumn("header: '<b>".TAX_CATEGORY."</b>', align:'right', renderer: cssText, width: 200, hidden:".checkColHidden(5, $columndata).", sortable: true, dataIndex: 'TAX_CATEGORY'");
        $OBJECT_GRID->addColumn("header: '<b>".TRANSACTION_CATEGORY."</b>', align:'right', renderer: cssText, width: 130, hidden:".checkColHidden(6, $columndata).", sortable: true, dataIndex: 'TRANSACTION_CATEGORY'");
        $OBJECT_GRID->addColumn("header: '<b>".TRANSACTION_DATE."</b>', align:'right', renderer: cssText, width: 150, hidden:".checkColHidden(7, $columndata).", sortable: true, dataIndex: 'TRANSACTION_DATE'");
    
        $OBJECT_GRID->addTBarItems("
            tbar.add([{
                id: 'REFRESH_ID'
                ,text: '".REFRESH."'
                ,iconCls:'icon-reload'
                ,scope:this
                ,disabled: false
                ,handler: function(){
                   Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
                }
            }]);
        ");
        
        $OBJECT_GRID->addTBarItems("
            tbar.add([{
                id: 'CHART'
                ,text: '".CHART."'
                ,iconCls:'icon-chart_bar'
                ,scope:this
                ,hidden: true
                ,handler: function(){
                   
                }
            }]);
        ");
        
        $OBJECT_GRID->baseParams = "
            start:0
            ,limit:100
            ,cmd: 'jsonSearchExpense'
        ";
        
        $OBJECT_GRID->forceFit = "false";
        $OBJECT_GRID->renderJS();
        
        ?>
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout: 'fit'
                ,border: false
                ,id: 'CONTENT'
                ,items:[{
                    layout:'border'
                    ,border: false
                    ,defaults: {
                        collapsible: true
                        ,split: true
                    }
                    ,items: [{
                        title: ''
                        ,region:'west'
                        ,id: 'WEST_ID'
                        ,margins: '3 0 3 3'
                        ,cmargins: '3 3 3 3'
                        ,width: 270
                        ,minSize: 270
                        ,maxSize: 270
                        ,items: [{xtype: '<?=$OBJECT_FORM->getObjectXType();?>'}]
                    },{
                        collapsible: false
                        ,id: 'center'
                        ,region:'center'
                        ,margins: '3 3 3 0'
                        ,layout: 'card'
                        ,activeItem: 0
                        ,items: [{
                            layout: 'fit'
                            ,border: false
                            ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
                        }]
                    }]
                }]
            }]
        });
        var myGrid = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>');
        if (myGrid) myGrid.on('cellclick', function(grid,rowIndex) {
            var record = grid.store.getAt(rowIndex);
            clickOpenPage('center',record.data.TRANSACTION_NUMBER,'/finance/showexpense/?objectId=' + record.data.ID);
        });
        Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>