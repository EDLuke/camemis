<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once 'clients/CamemisViewport.php';
require_once 'models/UserAuth.php';
require_once 'models/app_school/LocationDBAccess.php';
require_once 'models/app_school/student/StudentDBAccess.php';
require_once setUserLoacalization();
 
$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_FORM = new CamemisForm("STUDENT");
$OBJECT_FORM->setLoadUrl('/student/jsonload/');
$OBJECT_FORM->setSaveUrl('/student/jsonsave/');

$OBJECT_GRID = new CamemisGrid("FINANCE", "LIST");
$OBJECT_GRID->setLoadUrl("/finance/jsonload/");
$columndata = Utiles::getGridColumnData("FINANCE_LIST_ID");

//$veasna
$OBJECT_SCHOLARSHIP_TREE = new CamemisTree("DATASET", "LIST");
$OBJECT_SCHOLARSHIP_TREE->setURL("/dataset/jsontree/");
$OBJECT_SCHOLARSHIP_TREE->setSaveUrl("/dataset/jsonsave/");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$READ_RIGHT = UserAuth::getACLValue("CASH_MANAGEMENT_STUDENT_READ_RIGHT")?"false":"true";
$EDIT_RIGHT = UserAuth::getACLValue("CASH_MANAGEMENT_STUDENT_EDIT_RIGHT")?"false":"true";
$REMOVE_RIGHT = UserAuth::getACLValue("CASH_MANAGEMENT_STUDENT_REMOVE_RIGHT")?"false":"true";
$EXECUTE_RIGHT = UserAuth::getACLValue("CASH_MANAGEMENT_STUDENT_EXECUTE_RIGHT")?"false":"true";

?>
<script>
Ext.onReady(function() {
	
    function cssTextBold(value, metadata, record){
        
        if(record.data.STUDENT_SERVICES == 2){
            var name = '<?=STUDENT_SERVICES;?>';
                
        }else{
            var name = record.data.STUDENT;    
        }
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:normal; color:#333; padding:3px;">' + value + '</div>';
    }
    
    function cssTextBlue(value, metadata, record){
        if(record.data.STUDENT_SERVICES == 2){
            var name = '<?=STUDENT_SERVICES;?>';
                
        }else{
            var name = record.data.STUDENT;    
        }
        metadata.attr = 'ext:qtip="' + name + '"';
        if(record.data.FEE_PRE_PAY=='NORMAL'){
            return '<div style="font-weight:bold; color:#061f83; padding: 5px;">' + value + '</div>';
        }else{
            return '<div style="font-weight:bold; color:#0b7323; padding: 5px;">' + value + '</div>';
        }
    }
    
    function cssText(value, metadata, record){
        if(record.data.STUDENT_SERVICES == 2){
            var name = '<?=STUDENT_SERVICES;?>';
                
        }else{
            var name = record.data.STUDENT;    
        }
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:normal; color:#333; padding:3px;">' + value + '</div>';
    }
    
    function cssTextAmount(value, metadata, record){
        if(record.data.STUDENT_SERVICES == 2){
            var name = '<?=STUDENT_SERVICES;?>';
                
        }else{
            var name = record.data.STUDENT;    
        }
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:normal; color:#333; padding: 5px; background:#FFF;">' + value + '</div>';
    }
    
    function cssTextPaid(value, metadata, record){
        if(record.data.STUDENT_SERVICES == 2){
            var name = '<?=STUDENT_SERVICES;?>';
                
        }else{
            var name = record.data.STUDENT;    
        }
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:bold; color:#061f83; padding: 5px; background:#FFF;">' + value + '</div>';
    }
    
    function cssTextOwed(value, metadata, record){
        if(record.data.STUDENT_SERVICES == 2){
            var name = '<?=STUDENT_SERVICES;?>';
                
        }else{
            var name = record.data.STUDENT;    
        }
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:bold; color:#e24f43; padding: 5px; background:#FFF;">' + value + '</div>';
    }
    
    function cssTextScholarship(value, metadata, record){
        if(record.data.STUDENT_SERVICES == 2){
            var name = '<?=STUDENT_SERVICES;?>';
                
        }else{
            var name = record.data.STUDENT;    
        }
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:bold; color:#061f83; padding: 5px; background:#FFF;">' + value + '</div>';
    }
    
    function cssTextFeeType(value, metadata, record){
        if(record.data.STUDENT_SERVICES == 2){
            var name = '<?=STUDENT_SERVICES;?>';
                
        }else{
            var name = record.data.STUDENT;    
        }
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:normal; color:#333; padding: 5px; background:#FFF;">' + value + '</div>';
    }
    
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $CAMEMIS_PAGE_OBJECT->setAddTab();
	
    //$veasna
    //Scholarship
    $OBJECT_SCHOLARSHIP_TREE->setBaseParams("
        cmd: 'jsonTreeAllScholarship'
    ");
    
    $OBJECT_SCHOLARSHIP_TREE->isAsyncTreeNode = false;
    
    $OBJECT_SCHOLARSHIP_TREE->addTBarItems(CamemisBar::tbarTreeRefresh(false));
    $OBJECT_SCHOLARSHIP_TREE->backgroundColor = "#F9F9F9";
    $OBJECT_SCHOLARSHIP_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $OBJECT_SCHOLARSHIP_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());
    $OBJECT_SCHOLARSHIP_TREE->isTreeExpand=true; 
    $OBJECT_SCHOLARSHIP_TREE->renderJS();
    $triggerOnClickScholarship="
         openWinXType('SCHOLARSHIP','".SCHOLARSHIP."', '". $OBJECT_SCHOLARSHIP_TREE->getObjectXType()."', 500, percentHeight(85));
         var scholarshipTree = Ext.getCmp('".$OBJECT_SCHOLARSHIP_TREE->getObjectId()."');
         scholarshipTree.on('click', function(node, e){
             if(node.isLeaf()){
                Ext.getCmp('SCHOLARSHIP_NAME_ID').setValue(node.parentNode.text+' -- '+node.text);
                Ext.getCmp('CHOOSE_SCHOLARSHIP').setValue(node.id);
                Ext.getCmp('SCHOLARSHIP').close();
             }
             
         });
    ";
    
    //
    
    $OBJECT_FORM->addObjectItems("
        xtype:'fieldset'
        ,collapsible:true,collapsed:false
        ,collapsed: false
        ,title: '".STUDENT_FEES."'
        ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
        ,width: 310
        ,items:[
            {".CamemisField::Textfield("FEE_CODE", "FEE_CODE", SHORT." (FEE-)", false, false, false, 150)."}
            ,{".CamemisField::Textfield("FEE_NAME", "FEE_NAME", FEE_NAME, false, false, false, 150)."}    
            ,{".CamemisField::ComboPaymentStatus(150)."}  
            ,{".CamemisField::Trigger("SCHOLARSHIP_NAME",SCHOLARSHIP,$triggerOnClickScholarship,false,false, false, 150)."}
            ,{".CamemisField::Hidden("CHOOSE_SCHOLARSHIP",false)."}  
        ]
    ");     

    if(!SchoolDBAccess::displayPersonNameInGrid()){
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,collapsed: false
            ,title: '".PERSONAL_INFORMATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;padding:10px'
            ,width: 310
            ,items:[
                {".CamemisField::Textfield("STUDENT_CODE", "STUDENT_CODE", CODE_ID, false, false, false, 150)."}
                ,{".CamemisField::Textfield("LASTNAME_ID", "LASTNAME", LASTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("FIRSTNAME_ID", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
            ]
        ");
    }else{
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,collapsed: false
            ,title: '".PERSONAL_INFORMATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;padding:10px'
            ,width: 310
            ,items:[
                {".CamemisField::Textfield("STUDENT_CODE", "STUDENT_CODE", CODE_ID, false, false, false, 150)."}
                ,{".CamemisField::Textfield("FIRSTNAME_ID", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("LASTNAME_ID", "LASTNAME", LASTNAME, false, false, false, 150)."}
            ]
        ");
    }

    $OBJECT_FORM->addTBarItems("
        text: '".RESET."'
        ,iconCls:'icon-arrow_undo'
        ,handler: function(){
            ".CamemisPage::setRequestURI(false)."
        }
    ");
    $OBJECT_FORM->addTBarItems("
        text: '".FIND."'
        ,id: 'FIND_ID'
        ,hidden: ".$READ_RIGHT."
        ,formBind:true
        ,iconCls:'icon-magnifier'
        ,scope:this
        ,handler: function(){
        
            form = this.getForm();
            
            var studentCode = form.findField('STUDENT_CODE').getValue();
            var firstname = form.findField('FIRSTNAME').getValue();
            var lastname = form.findField('LASTNAME').getValue();
            var scholarship = form.findField('CHOOSE_SCHOLARSHIP').getValue();
            var feeCode = form.findField('FEE_CODE').getValue();
            var feeName = form.findField('FEE_NAME').getValue();
            var paymentStatus = form.findField('PAYMENT_STATUS').getValue();
            var paiStatus = form.findField('PAYMENT_STATUS').getValue();
            
            Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.baseParams = {
                start:0
                ,limit:100
                ,cmd: 'searchCashStudent'
                ,studentCode: studentCode
                ,firstname: firstname
                ,lastname: lastname
                ,scholarship: scholarship
                ,feeCode: feeCode
                ,feeName: feeName
                ,paymentStatus: paymentStatus
                ,paiStatus: paiStatus
            };
            Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.load();
        }
    ");
    
    $OBJECT_FORM->setBodyStyle("padding:10px;background:".CamemisPage::userFormBgColor().";");
    $OBJECT_FORM->labelAlign = "left";
    $OBJECT_FORM->isObjectDefaultOnLoad = false;
    $OBJECT_FORM->isKeys = false;
    $OBJECT_FORM->renderJS();
    
    ///////////////////////////////////////////////////////
    $OBJECT_GRID->addReadField("name: 'STUDENT'");
    $OBJECT_GRID->addReadField("name: 'FEE_ID'");
    $OBJECT_GRID->addReadField("name: 'FEE_NAME'");
    $OBJECT_GRID->addReadField("name: 'FEE_TYPE'");
    $OBJECT_GRID->addReadField("name: 'PRINT_URL'");
    $OBJECT_GRID->addReadField("name: 'DELETE_URL'");
    $OBJECT_GRID->addReadField("name: 'URL'");
    $OBJECT_GRID->addReadField("name: 'STUDENT_SERVICES'");
    $OBJECT_GRID->addReadField("name: 'TRANSACTION_AMOUNT'");
    $OBJECT_GRID->addReadField("name: 'AMOUNT_PAID'");
    $OBJECT_GRID->addReadField("name: 'AMOUNT_OWED'");
    $OBJECT_GRID->addReadField("name: 'SCHOLARSHIP'");
    $OBJECT_GRID->addReadField("name: 'FEE_PRE_PAY'");          
    
    $OBJECT_GRID->addColumn("header: '<b>".STUDENT."</b>', align:'left', renderer: cssTextBold, width: 200, hidden:".checkColHidden(1, $columndata).", sortable: true, dataIndex: 'STUDENT'");
    $OBJECT_GRID->addColumn("header: '<b>".FEE_NAME."</b>', align:'left', renderer: cssTextBlue, width: 250, hidden:".checkColHidden(2, $columndata).", sortable: true, dataIndex: 'FEE_NAME'");
    $OBJECT_GRID->addColumn("header: '<b>".FEES."</b>', align:'right', renderer: cssTextAmount, width: 140, hidden:".checkColHidden(3, $columndata).", sortable: true, dataIndex: 'TRANSACTION_AMOUNT'");
    $OBJECT_GRID->addColumn("header: '<b>".AMOUNT_PAID."</b>', align:'right', renderer: cssTextPaid, width: 140, hidden:".checkColHidden(4, $columndata).", sortable: true, dataIndex: 'AMOUNT_PAID'");
    $OBJECT_GRID->addColumn("header: '<b>".AMOUNT_OWED."</b>', align:'right', renderer: cssTextOwed, width: 140, hidden:".checkColHidden(5, $columndata).", sortable: true, dataIndex: 'AMOUNT_OWED'");
    $OBJECT_GRID->addColumn("header: '<b>".SCHOLARSHIP."</b>', align:'right', renderer: cssTextScholarship, width: 100, hidden:".checkColHidden(6, $columndata).", sortable: true, dataIndex: 'SCHOLARSHIP'");
    $OBJECT_GRID->addColumn("header: '<b>".TYPE."</b>', align:'right', renderer: cssTextFeeType, width: 140, hidden:".checkColHidden(7, $columndata).", sortable: true, dataIndex: 'FEE_TYPE'");
    
    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            id: 'REFRESH_ID'
            ,text: '".REFRESH."'
            ,iconCls:'icon-reload'
            ,scope:this
            ,disabled: false
            ,handler: function(){
               Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
            }
        }]);
    ");
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'searchCashStudent'
    ";
    
    $OBJECT_GRID->isGroupingView = true;
    $OBJECT_GRID->groupField = "STUDENT";
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();  
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            }
            ,items: [{
               	region:'west'
                ,id:'WEST_ID'
                ,margins: '3 0 3 3'
                ,cmargins: '3 3 3 3'
                ,width: 350
                ,minSize: 350
                ,maxSize: 350
                ,layout: 'fit'
                ,items:[{xtype: '<?=$OBJECT_FORM->getObjectXtype();?>'}]
            },{
               	collapsible: false
                ,id: 'center'
                ,region:'center'
                ,margins: '3 3 3 0'
                ,layout: 'card'
                ,activeItem: 0
                ,items: [{
                    layout: 'fit'
                    ,border: false
                    ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
                }]
            }]
        }]
    });
    var myGrid = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>');
    if (myGrid) myGrid.on('cellclick', function(grid, rowIndex, columnIndex, event) {
        var record = grid.store.getAt(rowIndex);
        setHidden = (record.data.STUDENT_SERVICES == 1)?false:true;
        hiddenDelete = (record.data.DELETE_URL != '')?false:true;
        hiddenPrint=(record.data.STUDENT_SERVICES == 1 || record.data.FEE_PRE_PAY==1)?true:false;;
        switch(record.data.URL){
            case 1:
                urlItem = '/finance/studentpaymentgeneral/';
            break;
            case 2:
                urlItem = '/finance/studentpaymenttraining/';
            break;
            case 3:
                urlItem = '/finance/studentpaymentservice/';
            break;
        }
        var contextMenu = new Ext.menu.Menu({
            items: [{
                text: '<?=SHOW_ALL;?> &raquo; ' + record.data.STUDENT
                ,hidden:true
                ,iconCls:'icon-application_side_list'
                ,handler:function(){
                    window.parent.parent.openWinIFrame('','/finance/studentaccounthistory/?objectId=' + record.data.ID, window.parent.parent.percentWidth(85), window.parent.parent.percentHeight(85));
                }
            },{
                text: '<?=SHOW_ITEM;?> &raquo; ' + record.data.STUDENT
                ,hidden:<?=$READ_RIGHT;?>
                ,iconCls:'icon-application_form_magnify'
                ,handler:function(){
                    clickOpenPage('center','<?=SHOW_ITEM?> &raquo; ' + record.data.STUDENT,urlItem +'?target=<?=generateGuid();?>&objectId=' + record.data.ID+'&fee='+record.data.FEE_ID);
                }
            },{
                text: '<?=STUDENT_SERVICES;?> &raquo; ' + record.data.STUDENT
                ,iconCls:'icon-money_add'
                ,hidden:<?=$READ_RIGHT;?>
                ,handler:function(){
                    clickOpenPage('center','<?=STUDENT_SERVICES?> &raquo; ' + record.data.STUDENT,'/finance/studentservices/?objectId=' + record.data.ID);
                }
            },{
                text: '<?=REFUND;?> &raquo; ' + record.data.STUDENT
                ,iconCls:'icon-delete'
                ,disabled:hiddenDelete
                ,hidden:<?=$READ_RIGHT;?>
                ,handler:function(){
                    clickOpenPage('center','<?=REFUND?> &raquo; ' + record.data.STUDENT,record.data.DELETE_URL+'&type=REFUND');
                }
            },{
                text: '<?=DELETE;?> &raquo; ' + record.data.STUDENT
                ,iconCls:'icon-delete'
                ,disabled:hiddenDelete
                ,hidden:<?=$READ_RIGHT;?>
                ,handler:function(){
                    clickOpenPage('center','<?=DELETE?> &raquo; ' + record.data.STUDENT,record.data.DELETE_URL+'&type=DELETE');
                }
            },{
                text: '<?=PRINTER;?> LAST_TRANSACTION &raquo; ' + record.data.STUDENT
                ,iconCls:'icon-printer'
                ,hidden:hiddenPrint
                ,handler:function(){
                    openWinIFrame(record.data.STUDENT, record.data.PRINT_URL+'&printlast=1',600,percentHeight(85));
                }
            },{
                text: '<?=PRINTER;?> &raquo; ' + record.data.STUDENT
                ,iconCls:'icon-printer'
                ,hidden:<?=$EXECUTE_RIGHT;?>
                ,handler:function(){
                    openWinIFrame(record.data.STUDENT, record.data.PRINT_URL,600,percentHeight(85));
                }
            }]
        });
        event.stopEvent();
        contextMenu.showAt(event.xy);
    });
    Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>