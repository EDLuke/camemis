<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_FORM = new CamemisForm("FINANCE_MANAGEMENT");
$OBJECT_FORM->setLoadUrl('/finance/jsonload/');

$OBJECT_GRID = new CamemisGrid("FINANCE_MANAGEMENT", "LIST");
$OBJECT_GRID->setLoadUrl("/finance/jsonload/");
$columndata = Utiles::getGridColumnData("FINANCE_MANAGEMENT_LIST_ID");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$READ_RIGHT = UserAuth::getACLValue("CASH_MANAGEMENT_STAFF_READ_RIGHT")?"false":"true";
$EDIT_RIGHT = UserAuth::getACLValue("CASH_MANAGEMENT_STAFF_EDIT_RIGHT")?"false":"true";
$EXECUTE_RIGHT = UserAuth::getACLValue("CASH_MANAGEMENT_STAFF_EXECUTE_RIGHT")?"false":"true";

?>
<style>
    span.spanText {
        font-weight:bold;
        color:#333; 
        white-space:normal;
    }
</style>
<script>

Ext.onReady(function() {
    
    function cssTextCellA(value, metadata, record){
        var name = record.data.STAFF;
        return '<div style="font-weight:bold; color:#061f83; padding: 5px; background:#FFFFFF;">' + value + '</div>';
    }
    
    function cssTextCellB(value, metadata, record){
        var name = record.data.STAFF;
        return '<div style="font-weight:normal; color:#333; padding: 5px; background:#FFFFFF;">' + value + '</div>';
    }
    
    Ext.apply(Ext.form.VTypes, {
        daterange : function(val, field) {
            var date = field.parseDate(val);
            if(!date){
                return false;
            }
            if (field.startDateField) {
                var start = Ext.getCmp(field.startDateField);
                if (!start.maxValue || (date.getTime() != start.maxValue.getTime())) {
                    start.setMaxValue(date);
                    start.validate();
                }
            }
            else if (field.endDateField) {
                var end = Ext.getCmp(field.endDateField);
                if (!end.minValue || (date.getTime() != end.minValue.getTime())) {
                    end.setMinValue(date);
                    end.validate();
                }
            }
            return true;
        }
    });
    
    var dateMenuStartDate = new Ext.menu.DateMenu({
        handler: function(dp, date){
            Ext.getCmp('START_DATE').setValue(date.format('<?=setExtDatafieldFormat();?>'));
        }
    });
    
    var dateMenuEndDate = new Ext.menu.DateMenu({
        handler: function(dp, date){
            Ext.getCmp('END_DATE').setValue(date.format('<?=setExtDatafieldFormat();?>'));
        }
    });
    <?
    /**
    * Extjs: s.gif
    */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
          
    $OBJECT_FORM->addObjectItems("
        xtype:'fieldset'
        ,collapsible:true,collapsed:false
        ,collapsed: false
        ,title: '".PAYMENT."'
        ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
        ,width: 310
        ,items:[
            {".CamemisField::Textfield("TRANSACTION_NUMBER", "TRANSACTION_NUMBER", "SAL, TEA-", false, false, false, 150)."}
        ,{
            ".CamemisField::ComboSalary(150)."
        },{
            name: 'START_DATE'
            ,hidden: false
            ,width: 150
            ,fieldLabel: '" . START_DATE . "'
            ,xtype: 'datefield'
            ,id: 'START_DATE'
            ,vtype: 'daterange'
            ,endDateField: 'END_DATE'
            ,format: '" . setExtDatafieldFormat() . "'
            ,allowBlank: true
        },{
            name: 'END_DATE'
            ,hidden: false
            ,width: 150
            ,fieldLabel: '" . END_DATE . "'
            ,xtype: 'datefield'
            ,id: 'END_DATE'
            ,vtype: 'daterange'
            ,format: '" . setExtDatafieldFormat() . "'
            ,startDateField: 'START_DATE'
            ,allowBlank: true
        }]
    ");     

    if(!SchoolDBAccess::displayPersonNameInGrid()){
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,collapsed: false
            ,title: '".PERSONAL_INFORMATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 310
            ,items:[
                {".CamemisField::Textfield("STAFF_CODE", "STAFF_CODE", CODE_ID, false, false, false, 150)."}
                ,{".CamemisField::Textfield("LASTNAME_ID", "LASTNAME", LASTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("FIRSTNAME_ID", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
            ]
        ");
    }else{
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,collapsed: false
            ,title: '".PERSONAL_INFORMATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 310
            ,items:[
                {".CamemisField::Textfield("STAFF_CODE", "STAFF_CODE", CODE_ID, false, false, false, 150)."}
                ,{".CamemisField::Textfield("FIRSTNAME_ID", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("LASTNAME_ID", "LASTNAME", LASTNAME, false, false, false, 150)."}
            ]
        ");
    }

    $OBJECT_FORM->addTBarItems("
        text: '".RESET."'
        ,iconCls:'icon-arrow_undo'
        ,handler: function(){
            ".CamemisPage::setRequestURI(false)."
        }
    ");
    
    $OBJECT_FORM->addTBarItems("
        text: '".FIND."'
        ,id: 'FIND_ID'
        ,hidden: ".$READ_RIGHT."
        ,formBind:true
        ,iconCls:'icon-magnifier'
        ,scope:this
        ,handler: function(){
            form = this.getForm();
            var staffCode = form.findField('STAFF_CODE').getValue();
            var firstname = form.findField('FIRSTNAME').getValue();
            var lastname = form.findField('LASTNAME').getValue();
            var startDate = form.findField('START_DATE').getValue();
            var endDate = form.findField('END_DATE').getValue();
            var endDate = form.findField('END_DATE').getValue();
            var number = form.findField('TRANSACTION_NUMBER').getValue();
            var paymentType = form.findField('PAYMENT_TYPE').getValue();
            Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.baseParams = {
                start:0
                ,limit:100
                ,cmd: 'searchStaffPayment'
                ,staffCode: staffCode
                ,firstname: firstname
                ,lastname: lastname
                ,startDate: startDate
                ,endDate: endDate
                ,number: number
                ,paymentType: paymentType
            };
            Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.load();
        }
    ");
    
    $OBJECT_FORM->setBodyStyle("padding:10px;background:".CamemisPage::userFormBgColor().";");
    $OBJECT_FORM->labelAlign = "left";
    $OBJECT_FORM->isObjectDefaultOnLoad = false;
    $OBJECT_FORM->isKeys = false;
    $OBJECT_FORM->renderJS();
    
    $OBJECT_GRID->addCellRenderer("
        function cssText(v, p, record, rowIndex){
            var str = '<div style=\"padding:5px;height:20px;\"><span class=spanText>' + v + '</span></div>';
            return str;
        }
    ");
        
    $OBJECT_GRID->addReadField("name: 'CODE'");
    $OBJECT_GRID->addReadField("name: 'STAFF'");
    $OBJECT_GRID->addReadField("name: 'TRANSACTION_NUMBER'");
    
    $OBJECT_GRID->addReadField("name: 'DATE'");
    $OBJECT_GRID->addReadField("name: 'TOTAL_SESSION'");
    $OBJECT_GRID->addReadField("name: 'STATUS_KEY'");
    $OBJECT_GRID->addReadField("name: 'TYPE'");
    $OBJECT_GRID->addReadField("name: 'SHOW'");
    $OBJECT_GRID->addReadField("name: 'SHOW_URL'");
    $OBJECT_GRID->addReadField("name: 'PRINT_URL'");
    $OBJECT_GRID->addReadField("name: 'CREATED_DATE'");
    $OBJECT_GRID->addReadField("name: 'TRANSACTION_AMOUNT'");
    $OBJECT_GRID->addReadField("name: 'CREATED_BY'");
    
    $OBJECT_GRID->addColumn("header: '<b>".STAFF."</b>', align:'left', renderer: cssText, width: 250, hidden:".checkColHidden(1, $columndata).", sortable: true, dataIndex: 'STAFF'");
    $OBJECT_GRID->addColumn("header: '<b>".TRANSACTION_NUMBER."</b>', align:'left', renderer: cssTextCellA, width: 100, hidden:".checkColHidden(2, $columndata).", sortable: true, dataIndex: 'TRANSACTION_NUMBER'");
    $OBJECT_GRID->addColumn("header: '<b>".TRANSACTION_AMOUNT."</b>', align:'right', renderer: cssTextCellB, width: 120, hidden:".checkColHidden(3, $columndata).", sortable: true, dataIndex: 'TRANSACTION_AMOUNT'");
    $OBJECT_GRID->addColumn("header: '<b>".TYPE."</b>', align:'right', renderer: cssTextCellA, width: 150, hidden:".checkColHidden(4, $columndata).", sortable: true, dataIndex: 'TYPE'");
    $OBJECT_GRID->addColumn("header: '<b>".DATE."</b>', align:'right', renderer: cssTextCellB, width: 120, hidden:".checkColHidden(5, $columndata).", sortable: true, dataIndex: 'DATE'");
    $OBJECT_GRID->addColumn("header: '<b>".TOTAL_SESSION."</b>', align:'right', renderer: cssTextCellA, width: 120, hidden:".checkColHidden(6, $columndata).", sortable: true, dataIndex: 'TOTAL_SESSION'");
    $OBJECT_GRID->addColumn("header: '<b>".CREATED_DATE."</b>', align:'right', renderer: cssTextCellB, width: 150, hidden:".checkColHidden(7, $columndata).", sortable: true, dataIndex: 'CREATED_DATE'");
    
    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            id: 'REFRESH_ID'
            ,text: '".REFRESH."'
            ,iconCls:'icon-reload'
            ,scope:this
            ,disabled: false
            ,handler: function(){
               Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
            }
        }]);
    ");
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'searchStaffPayment'
    ";
    $OBJECT_GRID->isQuickySearch = true;
    $OBJECT_GRID->isGroupingView = true;
    $OBJECT_GRID->groupField = "STAFF";
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();  
    
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            }
            ,items: [{
                region:'west'
                ,id:'WEST_ID'
                ,margins: '3 0 3 3'
                ,cmargins: '3 3 3 3'
                ,width: 350
                ,minSize: 350
                ,maxSize: 350
                ,layout: 'fit'
                ,items:[{xtype: '<?=$OBJECT_FORM->getObjectXtype();?>'}]
            },{
                collapsible: false
                ,id: 'center'
                ,region:'center'
                ,margins: '3 3 3 0'
                ,layout: 'card'
                ,activeItem: 0
                ,items: [{
                    layout: 'fit'
                    ,border: false
                    ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
                }]
            }]
        }]
    });
    var myGrid = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>');
    if (myGrid) myGrid.on('cellclick', function(grid, rowIndex, columnIndex, event) {
        
        var record = grid.store.getAt(rowIndex);
        
        if(record.data.SHOW){
            hasHidden = false;
        }else{
            hasHidden = true;
        }
        
        showUrl = record.data.URL;
        var contextMenu = new Ext.menu.Menu({
            items: [{
                text: '<?=SHOW_ALL;?>'
                ,hidden:true
                ,iconCls:'icon-application_side_list'
                ,handler:function(){
                    window.parent.openWinIFrame('','/finance/staffaccounthistory/?objectId=' + record.data.ID, window.parent.percentWidth(85), window.parent.percentHeight(85));
                }
            },{
                text: '<?=SHOW_DETAIL;?> &raquo; ' + record.data.STAFF
                ,disabled:hasHidden
                ,hidden:<?=$READ_RIGHT;?>
                ,iconCls:'icon-application_form_magnify'
                ,handler:function(){
                    clickOpenPage('center','',record.data.SHOW_URL);
                }
            },{
                text: '<?=PAYMENT_FOR_SALARY;?> &raquo; ' + record.data.STAFF
                ,hidden:<?=$EDIT_RIGHT;?>
                ,iconCls:'icon-application_form_add'
                ,handler:function(){
                    clickOpenPage('center','','/finance/staffpaymentsalary/?objectId=' + record.data.ID +'&paymentId=new');
                }
            },{
                text: '<?=PAYMENT_FOR_TEACHING_SESSION;?> &raquo; ' + record.data.STAFF
                ,iconCls:'icon-application_form_add'
                ,hidden:<?=$EDIT_RIGHT;?>
                ,handler:function(){
                    clickOpenPage('center','','/finance/staffpaymentsession/?objectId=' + record.data.ID +'&paymentId=new');
                }
            },{
                text: '<?=SHOW_ITEM;?> &raquo; ' + record.data.STAFF
                ,disabled:hasHidden
                ,hidden:<?=$EXECUTE_RIGHT;?>
                ,iconCls:'icon-printer'
                ,handler:function(){
                    openWinIFrame(record.data.STAFF, record.data.PRINT_URL,600,percentHeight(85));
                }
            }]
        });
        event.stopEvent();
        contextMenu.showAt(event.xy);
    });
    Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
    //Ext.getCmp('WEST_ID').toggleCollapse(true);
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>