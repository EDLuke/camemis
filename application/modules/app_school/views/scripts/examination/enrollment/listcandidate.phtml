<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisSchoolTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$OBJECT_GRID = new CamemisGrid("STUDENT", "LIST");
$OBJECT_GRID->setLoadUrl("/student/jsonload/");
$OBJECT_GRID->setSaveUrl("/student/jsonsave/");

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$emptyData='false';
if(empty($this->objectDataResult))
$emptyData='true';

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$columndata = Utiles::getGridColumnData("STUDENT_LIST_ID");
///@veasna

$facette=ExaminationDBAccess::findAcademicById($this->academicId);
$params["type"]=6;
$params["schoolyearId"]=$facette->SCHOOL_YEAR;
$params["gradeId"]=$facette->GRADE_ID;
$subjectExam=ExaminationDBAccess::getSQLExamination($params);

if($facette){

    $bigger=StudentExaminationDBAccess::findStudentEnrollBigerorEqualScore($facette->ENROLL_EXAM_EXPECTED_SCORE,$this->academicId);
    $PASS=$bigger?count($bigger):0;
    $studentpass= NUMBER_OF_STUDENTS ." ". $PASS . ' >= '. $facette->ENROLL_EXAM_EXPECTED_SCORE . " (" . PASS . ")";
    $femalePass=0;
    $malePass=0;
    if($bigger){
        foreach($bigger as $values){
            if($values->GENDER==1){
                $malePass=$malePass+1;                
            }elseif($values->GENDER==2){
                $femalePass=$femalePass+1;
            }        
        }

    }
    $femalePassStr=FEMALE_STUDENTS . ": ".$femalePass;
    $malePassStr=MALE_STUDENTS . ": ".$malePass;

    $smaller=StudentExaminationDBAccess::findStudentEnrollSmallerScore($facette->ENROLL_EXAM_EXPECTED_SCORE,$this->academicId);
    $FALL=$smaller?count($smaller):0;
    $studentfall= NUMBER_OF_STUDENTS ." ". $FALL . ' < '. $facette->ENROLL_EXAM_EXPECTED_SCORE . " (" . FALL . ")";
    $femaleFall=0;
    $maleFall=0;
    if($smaller){
        foreach($smaller as $values){
            if($values->GENDER==1){
                $maleFall=$maleFall+1;                
            }elseif($values->GENDER==2){
                $femaleFall=$femaleFall+1;
            }        
        }     
    }
    $femaleFallStr=FEMALE_STUDENTS . ": ".$femaleFall;
    $maleFallStr=MALE_STUDENTS . ": ".$maleFall; 

    $total= $PASS+$FALL;
    $female=$femalePass+$femaleFall;
    $male=$malePass+$maleFall;
    //$studentTotal=TOTAL_STUDENTS . ': '. $total ." (" . MALE_STUDENTS . " ". $male. ", ". FEMALE_STUDENTS . " " . $female . ")";
    //Vik 14.08.2013
    $studentTotal=TOTAL_STUDENTS . ': '. $total ."";

}
///
?>
<link href="/public/nvd3/src/nv.d3.css" rel="stylesheet" type="text/css">
<script src="/public/nvd3/nvd3-camemis.php"></script>
<script>
    
var objectType;
Ext.onReady(function() {
        
        function renderText(v, p, record, rowIndex){
            var str = "<div class=spanText style='padding:5px;height: 15px;'>" + v + "</div>";
            return str;
        }
        
        function renderResult(v, p, record, rowIndex){
            if (record.data.RESULT == 'PASS'){
                var str = "<div style='font-weight: bold;background-color:#1f77b4;color:#fff;padding:5px;height: 15px; text-align:right;'>" + v + "</div>";    
            }else{
                var str = "<div style='font-weight: bold;background-color:#fe0101;color:#fff;padding:5px;height: 15px;text-align:right;'>" + v + "</div>";
            }
            
            return str;
        } 
        
    <?
    /**
     * Extjs: s.gif
     */

    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

    $OBJECT_GRID->addCellRenderer("
    function renderQTip(val, cell, record){

        if (record.data.ACTION_STATUS == 1){
            return '<div qtip=\"' + '<span>" . CANNOT_IMPORT . "</span>' +'\">'+ val +'</div>';
        }else{
            return '<div qtip=\"' + '<span>" . CAN_IMPORT . "</span>' +'\">'+ val +'</div>';
        }
    }
    ");
                                                     
    $OBJECT_GRID->addReadField("name: 'CODE'");
    $OBJECT_GRID->addReadField("name: 'STUDENT_SCHOOL_ID'");
     $OBJECT_GRID->addReadField("name: 'CANDIDATE_CODE'");
    $OBJECT_GRID->addReadField("name: 'STUDENT'");
    $OBJECT_GRID->addReadField("name: 'LASTNAME'");
    $OBJECT_GRID->addReadField("name: 'FIRSTNAME'");
    $OBJECT_GRID->addReadField("name: 'GENDER'");
    $OBJECT_GRID->addReadField("name: 'ACADEMIC_TYPE'");
    $OBJECT_GRID->addReadField("name: 'CAMPUS_NAME'");
    $OBJECT_GRID->addReadField("name: 'DATE_BIRTH'");
    $OBJECT_GRID->addReadField("name: 'BIRTH_PLACE'");
    $OBJECT_GRID->addReadField("name: 'STATUS'");
    $OBJECT_GRID->addReadField("name: 'ACTION_STATUS'");
    $OBJECT_GRID->addReadField("name: 'ACTION_STATUS_ICON'");
    $OBJECT_GRID->addReadField("name: 'CONTRY'");
    $OBJECT_GRID->addReadField("name: 'STREET'");
    $OBJECT_GRID->addReadField("name: 'PHONE'");
    $OBJECT_GRID->addReadField("name: 'EMAIL'");
    $OBJECT_GRID->addReadField("name: 'TOWN_CITY'");
    $OBJECT_GRID->addReadField("name: 'POSTCODE_ZIPCODE'");
    $OBJECT_GRID->addReadField("name: 'ENROLLMENT_STATUS'");
    $OBJECT_GRID->addReadField("name: 'ENROLL_AVG'");               
    $OBJECT_GRID->addReadField("name: 'RESULT'");

    $OBJECT_GRID->addColumn("
        header: '<b>".CANDIDATE_CODE."</b>',
        dataIndex: 'CANDIDATE_CODE',
        width: 100,
        hidden:".checkColHidden(1, $columndata).",
        align: 'left',
        renderer: renderText,
        editor: new Ext.form.TextField({
            allowBlank: false
        })
    ");

    $OBJECT_GRID->addColumn("
        header: '<b>".NAME."</b>',
        dataIndex: 'STUDENT',
        width: 140,
        hidden:".checkColHidden(2, $columndata).",
        align: 'left',
        renderer: renderText,
        editor: new Ext.form.TextField({
            allowBlank: false
        })
    ");
    
    foreach($subjectExam as $values){
        $OBJECT_GRID->addReadField("name: '".$values->EXM_ID."'");
        $OBJECT_GRID->addColumn("
            header: '<b>".$values->SUBJECT_NAME."</b>',
            dataIndex: '".$values->EXM_ID."',
            width: 80,
            align: 'left',
            renderer: renderText,
            editor: new Ext.form.TextField({
                allowBlank: false
            })
        ");    
        
    }

    $OBJECT_GRID->addColumn("
        header: '<b>".AVERAGE."</b>',
        dataIndex: 'ENROLL_AVG',
        width: 80,
        hidden:".checkColHidden(3, $columndata).",
        align: 'left',
        renderer: renderResult,
        editor: new Ext.form.TextField({
            allowBlank: false
        })
    ");

    $OBJECT_GRID->addColumn("
        header: '<b>".GENDER."</b>',
        dataIndex: 'GENDER',
        width: 80,
        hidden:".checkColHidden(4, $columndata).",
        align: 'left',
        renderer: renderText,
        editor: new Ext.form.ComboBox({
            triggerAction:'all'
            ,mode:'local'
            ,store: new Ext.data.JsonStore({
                autoDestroy: true
                ,fields: ['chooseValue', 'chooseDisplay']
                ,data:[{chooseValue: '0', chooseDisplay: '---'},{chooseValue: '1', chooseDisplay: '".MALE."'},{chooseValue: '2', chooseDisplay: '".FEMALE."'}]
            })
            ,valueField: 'chooseValue'
            ,displayField: 'chooseDisplay'
            ,editable: false
            ,listeners: {
                select: function(combo, record, index) {
                    replaceValue = combo.getValue();
                    var newDisplay = record.get('chooseDisplay');
                    combo.setValue(newDisplay);
                }
            }
        })
    ");

    $OBJECT_GRID->addColumn("
        header: '<b>".DATE_BIRTH."</b>',
        dataIndex: 'DATE_BIRTH',
        width: 100,
        hidden:".checkColHidden(5, $columndata).",
        align: 'left',
        renderer: renderText,
        editor: new Ext.form.TextField({
            allowBlank: false
        })
    ");

    $OBJECT_GRID->addColumn("header: '<b>".ENROLLMENT_STATUS."</b>', align:'left', width: 130,hidden:".checkColHidden(6, $columndata).", renderer: renderText, sortable: false, dataIndex: 'ENROLLMENT_STATUS'");

    $store = "[[0, '[---]'],[1, '" . PASS . "'],[2, '" . FALL . "']]";

    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            id: 'ADD_STUDENT_ID'
            ,text: '" . APPLY . "'
            ,iconCls:'icon-disk'
            ,scope:this
            ,handler: this.onSelection
        }]);
    ");

    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            text: '" . EXPORT_TO_EXCEL . "'
            ,hidden:".$emptyData."
            ,id: 'EXPORT_TO_EXCEL'
            ,iconCls:'icon-page_excel'
            ,handler: function(){
               
                openWinIFrame('" . EXPORT_TO_EXCEL . "','/export/examshowcolumn/?objectType=GENERAL_EDUCATION&enrollExamType=ENROLL&campus=".$this->academicId."&gender=".$this->gender."&examResult=".$this->examResult."&type=6&bnt=5',550,percentHeight(85));
            }
        }]);
    ");  

    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'importStudents'
        ,objectType: 'GENERAL_EDUCATION'
        ,type:'ENROLL'
        ,campus:'".$this->academicId."'
        ,gender:'".$this->gender."'
        ,examResult:'".$this->examResult."'
    ";

    $OBJECT_GRID->setSelectionParams("
        cmd: 'jsonAddStudentToStudentDB'
        ,objectType: 'GENERAL_EDUCATION'
        ,type:'ENROLL'
        ,campus:'".$this->academicId."'
    ");

    $OBJECT_GRID->setSelectionEmbeddedEvents("
        Ext.getCmp('STUDENT_LIST_ID').store.reload();
    ");

    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->isCheckboxSelect = true;
    $OBJECT_GRID->renderJS();

    $COMBO_GENDER = "[{".CamemisField::ComboGender('GENGER',false,false,100)."}]";
    ?>
  
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout: 'fit'
            ,border: false
            ,tbar: [
                '<b><?=EXAM_RESULT;?><b>'
                ,{
                    xtype: 'buttongroup'
                    ,items:[{
                        xtype: 'combo'
                        ,id: 'EXAM_RESULT_ID'
                        ,fieldLabel: ''
                        ,mode: 'local'
                        ,editable:false
                        ,triggerAction: 'all'
                        ,emptyText: '<?=PLEASE_CHOOSE;?>'
                        ,store: <?=$store;?>
                        ,name: 'EXAM_RESULT'
                        ,width:120
                    }]
                },'<b><?=GENDER;?><b>',{
                    xtype: 'buttongroup'
                    ,items:<?=$COMBO_GENDER;?>
                },{     
                    text: '<?=SEARCH;?>'
                    ,hidden: false
                    ,id: 'SEARCH_ID'
                    ,name: 'SEARCH'
                    ,iconCls:'icon-magnifier'
                    ,handler: function(){ 
                        var exam_result_combo = Ext.getCmp('EXAM_RESULT_ID').getValue();
                        var gender_combo=Ext.getCmp('GENDER_ID').getValue();
                        Ext.getCmp('<?=$OBJECT_GRID->getObjectId();?>').store.baseParams = {
                            start:0
                            ,limit:100
                            ,cmd: 'importStudents'
                            ,objectType: 'GENERAL_EDUCATION'
                            ,type:'ENROLL'
                            ,campus:'<?=$this->academicId;?>'
                            ,gender:gender_combo
                            ,examResult:exam_result_combo
                        };
                        Ext.getCmp('<?=$OBJECT_GRID->getObjectId();?>').store.load();
                    }
                }]
                ,items:[{
                    layout:'border'
                    ,border: false
                    ,defaults: {
                        collapsible: true
                        ,split: true
                    }
                    ,items: [{
                        region:'west'
                        ,id:'WEST_ID'
                        ,margins: '3 0 3 3'
                        ,cmargins: '3 3 3 3'
                        ,width: 350
                        ,layout: 'form'
                        ,height: percentHeight(98)
                        ,autoScroll: true
                        ,bodyStyle: 'background:#FFF; color:#000;padding:10px' 
                        ,items: [{
                            xtype:'fieldset'
                            ,checkboxToggle:true
                            ,collapsed: false
                            ,title: '<?=STATISTIC_OF_STUDENTS;?>'
                            ,bodyStyle: 'background:#FFF; color:#000;padding:10px'
                            ,items:[{border: false
                                ,bodyStyle: 'padding:0;'
                                ,contentEl: 'myLayout'
                            }] 
                        },{
                            xtype:'fieldset'
                            ,checkboxToggle:true
                            ,collapsed: false
                            ,height:240
                            ,title: '<?=STUDENT;?>'
                            ,bodyStyle: 'background:#FFF; color:#000;padding:10px'
                            ,items:[{border: false
                                ,bodyStyle: 'background:#FFF;padding:10px;'
                                ,contentEl: 'myLayoutChartResults'
                            }] 
                        },{
                            xtype:'fieldset'
                            ,checkboxToggle:true
                            ,collapsed: false
                            ,height:240
                            ,title: '<?=PASS;?>'
                            ,bodyStyle: 'background:#FFF; color:#000;padding:10px'
                            ,items:[{border: false
                                ,bodyStyle: 'background:#FFF;padding:10px;'
                                ,contentEl: 'myLayoutChartGender'
                            }] 
                        }]
                    },{
                        collapsible: false
                        ,id: 'center'
                        ,region:'center'
                        ,margins: '3 3 3 0'
                        ,layout: 'card'
                        ,activeItem: 0
                        ,items: [{
                            layout: 'fit'
                            ,border: false
                            ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
                        }]
                    }]
                }]
            }]
        });
        Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
    });

    <?
    $TEST_DATA = "";
    
    if($PASS && $FALL){
        $TEST_DATA .= "{key: '".PASS."',y: ".$PASS."}";
        $TEST_DATA .= ",{key: '".FALL."',y: ".$FALL."}";
    }
    
    $GENDER_DATA = "";
    if($malePass && $FALL){
        $GENDER_DATA .= "{key: '".MALE."',y: ".$malePass."}";
        $GENDER_DATA .= ",{key: '".FEMALE."',y: ".$femalePass."}";
    }
    ?>
    
    var testdata = [<?=$TEST_DATA;?>];
    var gender = [<?=$GENDER_DATA;?>] 
  
    nv.addGraph(function() {
        var width = 300,
        height = 200;
        var chart = nv.models.pieChart()
        .x(function(d) { return d.key })
        .y(function(d) { return d.y })
        //.showLabels(false)
        .values(function(d) { return d })
        .color(d3.scale.category10().range())
        .width(width)
        .height(height);

        d3.select("#examResult")
        .datum([testdata])
        .transition().duration(1200)
        .attr('width', width)
        .attr('height', height)
        .call(chart);

        d3.select("#examGender")
        .datum([gender])
        .transition().duration(1200)
        .attr('width', width)
        .attr('height', height)
        .call(chart);

        chart.dispatch.on('stateChange', function(e) { nv.log('New State:', JSON.stringify(e)); });

        return chart;
        
    });

</script>
<style type="text/css">

.stu_pass{
    background: url('/public/images/group_add.png') no-repeat left top;
    padding-left: 30px;
    padding-top:2px; 
    margin-bottom:5px;
    color:#1f77b4;
    font-weight: bold;
}
.stu_fall{
    background:url('/public/images/group_delete.png') no-repeat left top;
    padding-left: 30px;
    padding-top:2px;
    margin-bottom:5px;
    color:#f61237;
    font-weight: bold;
}
.stu_total{
    background:url('/public/images/group.png') no-repeat left top;
    padding-left: 30px;
    padding-top:2px;
    margin-bottom:5px;
    color:#000;
    font-weight: bold;
}
.stu_male_pass{
    background:url('/public/images/male.png') no-repeat left top;
    padding-left: 30px;
    padding-top:2px;
    margin-bottom:5px;
    color:#1f77b4;
    margin-left:10px;   
    font-weight: bold;
}

.stu_female_pass{
    background:url('/public/images/female.png') no-repeat left top;
    padding-left: 30px;
    padding-top:2px;
    margin-bottom:5px;
    color:#ff7f0e;
    margin-left:10px;  
    font-weight: bold;
}
.stu_male_fall{
    background:url('/public/images/male.png') no-repeat left top;
    padding-left: 30px;
    padding-top:2px;
    margin-bottom:5px;
    color:#2ca02c;
    margin-left:10px;    
}
.stu_female_fall{
    background:url('/public/images/female.png') no-repeat left top;
    padding-left: 30px;
    padding-top:2px;
    margin-bottom:5px;
    color:#d62728;
    margin-left:10px; 
    font-weight: bold;
}

</style>

<div id="myLayout" class="x-hidden" style="padding:0;">

<div class="stu_pass"><?=$studentpass;?></div>
<div class="stu_male_pass"><?=$malePassStr;?></div> 
<div class="stu_female_pass"><?=$femalePassStr;?></div> 
<div class="stu_fall"><?=$studentfall;?></div>
<div class="stu_male_pass"><?=$maleFallStr;?></div> 
<div class="stu_female_pass"><?=$femaleFallStr;?></div>
<div class="stu_total"><?=$studentTotal;?></div>

</div>
<div id="myLayoutChartResults" class="x-hidden" style="padding:0;">
<svg id="examResult" style='width: 270px; height:210px;display: block; position: relative; left: -50px; float: left;top:-10px;'></svg>      
</div>

<div id="myLayoutChartGender" class="x-hidden" style="padding:0;">
<svg id="examGender" style='width: 270px; height:210px;display: block; position: relative; left: -50px; float: left;top:-10px;'></svg>      
</div>

<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>