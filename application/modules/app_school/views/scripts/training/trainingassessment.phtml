<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 16.03.2012
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'models/training/TrainingSubjectDBAccess.php';
require_once 'utiles/Utiles.php';
require_once 'clients/CamemisViewport.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_GRID = new CamemisGrid("TRAINING", "LIST");
$OBJECT_GRID->setLoadUrl('/training/jsonload/');
$OBJECT_GRID->setSaveUrl('/training/jsonsave/');
 
$VIEWPORT = new CamemisViewport();

$trainingId = isset($_GET["objectId"])?addText($_GET["objectId"]):"";

$STUDENT_ASSIGNMENT = StudentTrainingDBAccess::getInstance();
$STUDENT_ASSIGNMENT->trainingId = $this->objectId; 
$entries = $STUDENT_ASSIGNMENT->listSubjectsTraining();

$ENTRIES_SUBJECT = TrainingSubjectDBAccess::getTrainingClassSubject($trainingId);

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
$columndata = Utiles::getGridColumnData($OBJECT_GRID->getObjectId());
?>
<style>
    span.spanText {
        font-weight:bold;
        color:#333; 
        white-space:normal;
    }
</style>
<script>
Ext.onReady(function() {
    
    function cssStatus(v, p, record){
        return String.format('<div style=\"font-weight:bold;padding:4px;background:{1};color:{2};\">{0}</div>'
            ,v
            ,record.data['BG_COLOR']
            ,record.data['BG_COLOR_FONT']
        );
    }
    
    function cssNumber(value, metadata, record){
        var name = record.data.STUDENT;
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:bold; color: #141414; padding: 5px; height:10px; background:#D1DDEF;">' + value + '</div>';
    }
    
    function cssDefault(value, metadata, record){
        var name = record.data.STUDENT;
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:normal; color:#333; padding: 5px; height: 15px; background:#FFF;">' + value + '</div>';
    }
    
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $EDITOR = "new Ext.form.TextField({allowBlank: false})";
    $OBJECT_GRID->addCellRenderer("
        function renderText(v, p, record, rowIndex){
            var str = '<span class=spanText>' + v + '</span>';
            return str;
        }
    ");
    
    $OBJECT_GRID->addReadField("name: 'STUDENT_ID'");
    $OBJECT_GRID->addReadField("name: 'CODE'");
    $OBJECT_GRID->addReadField("name: 'STUDENT'");
    $OBJECT_GRID->addReadField("name: 'AVERAGE'");
    $OBJECT_GRID->addReadField("name: 'RANK'"); 
    $OBJECT_GRID->addReadField("name: 'BG_COLOR'");
    $OBJECT_GRID->addReadField("name: 'BG_COLOR_FONT'");
    $OBJECT_GRID->addReadField("name: 'STATUS_KEY'");
    
    if($entries){
        foreach($entries as $value){
            $OBJECT_GRID->addReadField("name: '".$value->SUBJECT_ID."'");   
        }
    } 
    
    switch(Zend_Registry::get('SYSTEM_LANGUAGE')){
        case "VIETNAMESE": $width = 100;break;
        default: $width = 85;break;
    }
    
    $OBJECT_GRID->addColumn("header: '<b>".STATUS."</b>', align:'center', width: ".$width.", hidden:".checkColHidden(1, $columndata).", renderer:cssStatus, sortable: true, dataIndex: 'STATUS_KEY'");
    $OBJECT_GRID->addColumn("header: '<b>".CODE_ID."</b>', width: 80, hidden:".checkColHidden(2, $columndata).", renderer: cssDefault, dataIndex: 'CODE'");   
    $OBJECT_GRID->addColumn("header: '<b>" . STUDENT . "</b>', align:'left', renderer: cssDefault, width: 210, hidden:".checkColHidden(3, $columndata).", dataIndex: 'STUDENT'");
    $OBJECT_GRID->addColumn("header: '<b>".RANK."</b>', align: 'center', width: 100, hidden:".checkColHidden(4, $columndata).", sortable: true, renderer: cssNumber, dataIndex: 'RANK'");
    $OBJECT_GRID->addColumn("header: '<b>" . AVERAGE . "</b>', align:'center', renderer: cssNumber, width: 110, hidden:".checkColHidden(5, $columndata).", dataIndex: 'AVERAGE'");
    $i=6;    
    if($entries){
        foreach($entries as $value){
            $OBJECT_GRID->addColumn("header: '<b>".$value->NAME."</b>', align: 'center', width: 100, hidden:".checkColHidden($i, $columndata).", renderer: cssNumber, dataIndex: '".$value->SUBJECT_ID."'");
            $i++;
        }
    } 
    $OBJECT_GRID->isObjectDefaultOnLoad = true;
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,trainingId:'".$trainingId."'                  
        ,cmd: 'jsonListStudentsClassPerformanceTraining'
    ";
    $OBJECT_GRID->addTBarItems("
        tbar.add('-',[{
            text: '" . EXPORT_TO_EXCEL . "'
            ,id: 'EXPORT_TO_EXCEL'
            ,iconCls:'icon-page_excel'
            ,handler: function(){
                Ext.MessageBox.show({
                    msg: '".SAVING_YOUR_DATA_PLEASE_WAIT."',
                    progressText: 'Saving...',
                    width:300,
                    wait:true,
                    waitConfig: {interval:200},
                    icon:'ext-mb-download'
                });
                Ext.Ajax.request({
                    url: '/export/jsonexcel/'
                    ,method: 'POST'
                    ,timeout: 600000
                    ,params:{cmd: 'jsonListStudentsClassPerformanceTraining',trainingId:'".$trainingId."',objectId:'".$OBJECT_GRID->getObjectId()."'}
                    ,success: function(response, options) {
                        Ext.MessageBox.hide();
                        window.location='/export/openstudentrainingassessmentlist/'
                    }
                });
            }
        }]);
    ");
    
    
    $OBJECT_GRID->isGridEditing = false;
    $OBJECT_GRID->isQuickySearch = true;
    $OBJECT_GRID->setUserColumn = true;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();
    
    $VIEWPORT->viewportLayout = "Normal";
    $ITEMS = "xtype:'".$OBJECT_GRID->getObjectXtype()."'";
    $VIEWPORT->addItem($ITEMS);
    $VIEWPORT->renderJS();
    ?>
    Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>