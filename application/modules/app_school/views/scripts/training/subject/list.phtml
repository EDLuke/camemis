<?
////////////////////////////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 07.03.2012
// Am Stollheen 18, 55120 Mainz, Germany
////////////////////////////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_TREE = new CamemisTree("TRAINING", "LIST");
$OBJECT_TREE->setURL('/training/jsontree/');
$OBJECT_TREE->setSaveUrl('/training/jsonsave/');

$ADD_SUBJECT_GRID = new CamemisGrid("TRAINING", "LIST_OF_SUBJECTS");
$ADD_SUBJECT_GRID->setLoadUrl('/training/jsonload/');
$ADD_SUBJECT_GRID->setSaveUrl('/training/jsonsave/');

$ASSIGNMENT_TEMP_TREE = new CamemisTree("ASSIGNMENT", "ASSIGNMENT");
$ASSIGNMENT_TEMP_TREE->setURL("/assignment/jsontree/");

$EXECUTE_RIGHT=UserAuth::getACLValue("ACADEMIC_TRAINING_PROGRAMS_EXECUTE_RIGHT")?"false":"true";
$EDIT_RIGHT=UserAuth::getACLValue("ACADEMIC_TRAINING_PROGRAMS_EDIT_RIGHT")?"false":"true";
$REMOVE_RIGHT=UserAuth::getACLValue("ACADEMIC_TRAINING_PROGRAMS_REMOVE_RIGHT")?"false":"true";

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
var subjectId;
var parentId;

Ext.onReady(function() {
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $ADD_SUBJECT_GRID->addCellRenderer("
        function renderText(v, p, record, rowIndex){
        var str = '<span class=spanText>' + v + '</span>';
        return str;
    }
    ");
    $ADD_SUBJECT_GRID->addReadField("name: 'SUBJECT_NAME'");
    $ADD_SUBJECT_GRID->addReadField("name: 'SUBJECT_COEFF'");
    
    $ADD_SUBJECT_GRID->addColumn("header: '".NAME."', width: 200, renderer: renderText, sortable: true, dataIndex: 'SUBJECT_NAME'");
    $ADD_SUBJECT_GRID->addColumn("header: '".WEIGHTING."', align: 'center', width: 80, renderer: renderText, sortable: true, dataIndex: 'SUBJECT_COEFF'");
    
    $ADD_SUBJECT_GRID->isGroupingView = false;
    $ADD_SUBJECT_GRID->isQuickySearch = true;
    $ADD_SUBJECT_GRID->isCheckboxSelect = true;
    $ADD_SUBJECT_GRID->forceFit = "false";
    $ADD_SUBJECT_GRID->addTBarItems(CamemisBar::tbarGridSelection());

    $ADD_SUBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,trainingId: '".$this->objectId."'
        ,cmd: 'jsonUnassignedSubjectsByTraining' 
    ";
    $ADD_SUBJECT_GRID->setSelectionParams("
        cmd: 'jsonAddSubjectToTraining'
        ,trainingId: '".$this->objectId."'
    ");
    $ADD_SUBJECT_GRID->setSelectionEmbeddedEvents("
        Ext.getCmp('TREE.TRAINING_LIST_ID').root.reload();
    ");
    
    $ADD_SUBJECT_GRID->renderJS();
    
    $ASSIGNMENT_TEMP_TREE->isAsyncTreeNode = false;
    $ASSIGNMENT_TEMP_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
    $ASSIGNMENT_TEMP_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $ASSIGNMENT_TEMP_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());
    $ASSIGNMENT_TEMP_TREE->isTreeExpand = false;
    $ASSIGNMENT_TEMP_TREE->backgroundColor = "#F9F9F9";
    $ASSIGNMENT_TEMP_TREE->setBaseParams("
    	cmd: 'jsonTreeAllAssignmentTemp'
        ,target:'TRAINING'
    ");
    $ASSIGNMENT_TEMP_TREE->renderJS();
    
    $OBJECT_TREE->backgroundColor = "#F9F9F9";
    $OBJECT_TREE->isTreeExpand = true;
    $OBJECT_TREE->isAsyncTreeNode = false;
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeRefresh(false));
    
    $OBJECT_TREE->addTBarItems("
        text:''
        ,tooltip:'".CAMEMIS_HELP."'
        ,iconCls: 'icon-help'
        ,handler:function(){
            ".CamemisPage::setEmbeddedHelp("8F1D-D169")."
        }
    ");
       
    if($this->facette->OBJECT_TYPE == "TERM"){
        $OBJECT_TREE->addTBarItems("
            id: 'ADD_SUBJECT_ID'
            ,text: '".SUBJECT."'
            ,hidden:".$EXECUTE_RIGHT." 
            ,tooltip:'".ADD_SUBJECTS."'
            ,scope:this
            ,iconCls:'icon-application_form_add'
            ,handler: function(){
                openWinXType('WinXType','".ADD_SUBJECTS."', '".$ADD_SUBJECT_GRID->getObjectXType()."', 500, percentHeight(85));
            }
        ");
    }
    
    if (UserAuth::getACLValue("ACADEMIC_TRAINING_PROGRAMS")){
        if($this->facette->OBJECT_TYPE == "TERM"){
            $DISABLED_ADD_ASSIGNMENT = "false";
            $DISABLED_DELETE_ASSIGNMENT = "false";
        }else{
            $DISABLED_ADD_ASSIGNMENT = "true";
            $DISABLED_DELETE_ASSIGNMENT = "true";
        }
    }else{
        $DISABLED_ADD_ASSIGNMENT = "true";
        $DISABLED_DELETE_ASSIGNMENT = "true";
    }
    
    if($this->facette->OBJECT_TYPE == "TERM"){
        $OBJECT_TREE->setBaseParams("
            cmd: 'jsonTreeAssignedSubjectsByTraining'
            ,trainingId: '".$this->objectId."'
        ");
    }else{
        $OBJECT_TREE->setBaseParams("
            cmd: 'jsonTreeAssignedSubjectsByTraining'
            ,trainingId: '".$this->facette->TERM."'
        ");
    }
    
    $OBJECT_TREE->renderJS();
    
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            }
            ,items: [{
               	region:'west'
                ,margins: '3 0 3 3'
                ,cmargins: '3 3 3 3'
                ,width: 250
                ,minSize: 250
                ,maxSize: 250
                ,layout: 'fit'
                ,items:[{xtype: '<?=$OBJECT_TREE->getObjectXtype();?>'}]
            },{
               	collapsible: false
                ,id: 'center'
                ,region:'center'
                ,margins: '3 3 3 0'
                ,layout: 'card'
                ,activeItem: 0
                ,items: [{
                    border: false
                    ,layout: 'anchor'
                    ,bodyStyle: 'background:#FFFFFF; padding:25px;'
                    ,items: [{
                        title: ''
                        ,height:60
                        ,width:500
                        ,bodyStyle: 'background:#F9F9F9; padding:10px; border:1px dotted #999;text-align:center;'
                        ,html:'<h1 class="header"><?=PLEASE_MAKE_YOUR_SELECTIONS;?></h1>'
                    }]
                }]
            }]
        }]
    });
    
    <?
    
    $js = "";
    $js .= "var myTree = ".$OBJECT_TREE->ExtgetCmp().";";
    $js .= "var check ='".$this->facette->OBJECT_TYPE."';";
        $js .= "myTree.on('click', function(node, e){";
            $js .= "if(!node.isLeaf()){";
                $js .= "subjectId = node.attributes.subjectId;";
                $js .= "parentId = node.id;";
                $js .= "if(check=='TERM'){";
                    $js .= "var contextMenu = new Ext.menu.Menu({";
                        $js .= "items: [{";
                            $js .= "text: '".ADD_ASSIGNMENT."'";
                            $js .= ",hidden: ".$EXECUTE_RIGHT."";
                            $js .= ",iconCls:'icon-application_form_add'";
                            $js .= ",handler:function(){";
                                $js .= "Ext.getCmp('center').getLayout().setActiveItem(0);";
                                $js .= "openWinXType('WinXType','".ADD_ASSIGNMENT."', '".$ASSIGNMENT_TEMP_TREE->getObjectXType()."', 500,600);";
                                $js .= "var tempTree = ".$ASSIGNMENT_TEMP_TREE->ExtgetCmp().";";
                                $js .= "if (tempTree) tempTree.on('click', function(node, event){";
                                    $js .= "if(node.isLeaf()){";
                                        $js .= "Ext.Ajax.request({";
                                            $js .= "url: '/training/jsonsave/'";
                                            $js .= ",method: 'POST'";
                                            $js .= ",params: {cmd: 'jsonAddAssignmentToTraining',subjectId:subjectId,trainingId:'".$this->objectId."',assignmentId:node.attributes.assignmentId}";
                                            $js .= ",success: function(response, options) {";
                                                $js .= "XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."');";
                                                $js .= "myTree = window.Ext.getCmp('".$OBJECT_TREE->getObjectId()."');";
                                                $js .= "myTree.root.reload();";
                                                $js .= "myTree.expand(true, false);";
                                                $js .= "node.remove(node.id);";
                                            $js .= "}";
                                            $js .= ",failure: function(response, options) {}";
                                        $js .= "});";
                                    $js .= "}";
                                $js .= "});";
                            $js .= "}";
                        $js .= "},{";
                            $js .= "text: '".SUBJECT."'";
                            $js .= ",hidden: ".$EDIT_RIGHT."";
                            $js .= ",iconCls:'icon-application_form_magnify'";
                            $js .= ",handler:function(){";
                                $js .= "Ext.getCmp('center').getLayout().setActiveItem(0);";
                                $js .= "clickOpenPage('center','', '/training/showallsubject/?objectId=' + node.id + '&subjectId=' +  node.attributes.subjectId);";
                            $js .= "}";
                        $js .= "},{";
                            $js .= "text: '".REMOVE."'";
                            $js .= ",iconCls:'icon-delete'";
                            $js .= ",hidden: ".$REMOVE_RIGHT."";
                            $js .= ",handler: function(){";
                                $js .= "var id = node.id;";
                                $js .= "Ext.MessageBox.show({";
                                    $js .= "title:'".CONFIRMATION."'";
                                    $js .= ",width: 350";
                                    $js .= ",msg: '".DELETE_THIS_ITEM."'";
                                    $js .= ",buttons: Ext.MessageBox.YESNO";
                                    $js .= ",icon: Ext.MessageBox.WARNING";
                                    $js .= ",fn: function(btn){";
                                        $js .= "if(btn == 'yes'){";
                                            $js .= "Ext.Ajax.request({";
                                                $js .= "url: '/training/jsonsave/'";
                                                $js .= ",method: 'POST'";
                                                $js .= ",params: {cmd: 'jsonRemoveSubjectFromTraining', objectId: id}";
                                                $js .= ",success: function(response, options) {";
                                                    $js .= "Ext.getCmp('TREE.TRAINING_LIST_ID').root.reload();";
                                                    $js .= "".camemisPage::setRequestURI()."";
                                                $js .= "}";
                                                $js .= ",failure: function(response, options) {}";
                                            $js .= "});";
                                        $js .= "}";
                                    $js .= "}";
                                $js .= "});";
                            $js .= "}";
                        $js .= "}]";
                    $js .= "});";
                    $js .= "e.stopEvent();";
                    $js .= "contextMenu.showAt(e.xy);";
                $js .= "}else{";
                    $js .= "Ext.getCmp('center').getLayout().setActiveItem(0);";
                    $js .= "clickOpenPage('center','".SUBJECT."', '/training/showallsubject/?objectId=' + node.id + '&subjectId=' +  node.attributes.subjectId);";
                $js .= "}";
            $js .= "}else{";
                if($this->facette->OBJECT_TYPE == "TERM"){
                    $js .= "Ext.getCmp('center').getLayout().setActiveItem(0);";
                    $js .= "clickOpenPage('center','".ASSIGNMENT.": '+node.text, '/training/showsubject/?objectId=' + node.id);";
                }
            $js .= "}";
        $js .= "});";
        
        echo $js;
    ?>
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>