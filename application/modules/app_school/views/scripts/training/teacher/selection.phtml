<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 10.03.2012
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_TREE = new CamemisTree("TRAINING", "LIST");
$OBJECT_TREE->setURL('/training/jsontree/');
$OBJECT_TREE->setSaveUrl('/training/jsonsave/');

$OBJECT_GRID = new CamemisGrid("TRAINING", "SUBJECT_TEACHER_CLASS");
$OBJECT_GRID->setLoadUrl('/training/jsonload/');
$OBJECT_GRID->setSaveUrl('/training/jsonsave/');

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
var subjectId;

Ext.onReady(function() {
	
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $OBJECT_TREE->isAsyncTreeNode = false;
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeRefresh(false));
    $OBJECT_TREE->setBaseParams("
    	cmd: 'jsonTreeAssignedSubjectsByTraining'
        ,trainingId: '".$this->objectId."'
    ");
    $OBJECT_TREE->backgroundColor = "#F9F9F9";
    $OBJECT_TREE->renderJS();
    
    $OBJECT_GRID->addCellRenderer("
        function renderText(value, p, record, rowIndex){
            return String.format(
                '<div style=\"padding: 5px;white-space:normal;\">{0}</div>',
                value
            );
        }
    ");
    
    $OBJECT_GRID->addReadField("name: 'ASSIGNED'");
    $OBJECT_GRID->addReadField("name: 'CODE'");
    $OBJECT_GRID->addReadField("name: 'FULL_NAME'");

    $OBJECT_GRID->addColumn("header: '<B>".CODE_ID."</B>', align:'left', renderer: renderText, width: 80, sortable: false, dataIndex: 'CODE'");
    $OBJECT_GRID->addColumn("header: '<B>".FULL_NAME."</B>', align:'left', renderer: renderText, width: 160, sortable: false, dataIndex: 'FULL_NAME'");

    $OBJECT_GRID->addColumn("
        xtype: 'checkboxcolumn'
        ,header: '<B>".ASSIGNED."</B>'
        ,renderer: renderText
        ,align:'center'
        ,dataIndex: 'ASSIGNED'
        ,width: 100
        ,on: 1
        ,off: 0
    ");
    
    $OBJECT_GRID->setSaveParams("
        cmd: 'actionSubjectTrainingTeacherClass'
        ,subjectId: subjectId
        ,trainingId: '".$this->objectId."'
    ");
        
    $OBJECT_GRID->baseParams = "
        cmd: 'jsonLoadTeachersBySubject'
        ,subjectId: subjectId
        ,trainingId: '".$this->objectId."'
    ";
        
    $OBJECT_GRID->setEditEmbeddedEvents("
        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
    ");

    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->isObjectDefaultOnLoad = false;
    $OBJECT_GRID->isCheckboxSelect = false;
    $OBJECT_GRID->isGridEditing = true;
    $OBJECT_GRID->loadMask = false;
    $OBJECT_GRID->renderJS();
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            }
            ,items: [{
               	region:'west'
                ,margins: '3 0 3 3'
                ,cmargins: '3 3 3 3'
                ,width: 250
                ,minSize: 250
                ,maxSize: 250
                ,layout: 'fit'
                ,items:[{xtype: '<?=$OBJECT_TREE->getObjectXtype();?>'}]
            },{
               	collapsible: false
                ,id: 'center'
                ,region:'center'
                ,margins: '3 3 3 0'
                ,layout: 'card'
                ,activeItem: 0
                ,items: [{
                    border: false
                    ,layout: 'anchor'
                    ,bodyStyle: 'background:#FFFFFF; padding:25px;'
                    ,items: [{
                        title: ''
                        ,height:60
                        ,width:500
                        ,bodyStyle: 'background:#F9F9F9; padding:10px; border:1px dotted #999;text-align:center;'
                        ,html:'<h1 class="header"><?=PLEASE_MAKE_YOUR_SELECTIONS;?></h1>'
                    }]
                },{
                    id: 'CONTENT'
                    ,border: false
                    ,layout: 'fit'
                    ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
                }]
            }]
        }]
    });
    
    var myTree = <?=$OBJECT_TREE->ExtgetCmp();?>;
    myTree.on('click', function(node, e){
        if(!node.isLeaf()){
            subjectId = node.attributes.subjectId;
            Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.baseParams = {
                start:0
                ,limit:100
                ,cmd: 'jsonLoadTeachersBySubjectTraining'
                ,trainingId: '<?=$this->objectId?>'
                ,subjectId: subjectId
            };
            Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.load();
            Ext.getCmp('center').getLayout().setActiveItem(1);
            Ext.getCmp('center').ownerCt.doLayout();
        }
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>