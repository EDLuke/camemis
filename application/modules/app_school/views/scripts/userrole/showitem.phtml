<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_FORM = new CamemisForm("USERROLE");
$OBJECT_FORM->setLoadUrl('/userrole/jsonload/');
$OBJECT_FORM->setSaveUrl('/userrole/jsonsave/');

$OBJECT_TREE = new CamemisTree("USERROLE", "LIST");
$OBJECT_TREE->setURL("/userrole/jsontree/");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

switch($this->objectId){
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
        $defaultRole = $this->objectId;
        break;
    default:
        $defaultRole = 1;
    break;
}

function setRequestAction($object){
    $js ="function setRequestAction(){";
        $js .="Ext.Ajax.request({";
            $js .="url: '/userrole/jsonsave/'";
            $js .=",method: 'POST'";
            $js .=",params: {";
                $js .="cmd:'updateObject'";
                $js .=",objectId: '".$object->ID."'";
                $js .=",name: name,short: short";
            $js .="}";
            $js .=",success: function(response, options) {";
                $js .= "XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."');";
                if($object->PARENT){
                    $js .= "myTree = window.parent.Ext.getCmp('TREE.USERROLE_LIST_ID');";
                    $js .= "myNode = myTree.getNodeById('".$object->PARENT."');";
                    $js .= "myNode.reload();";
                    $js .= "myNode.expand(true, false);";
                    $js .= "window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);";
                    //$js .= "window.parent.Ext.getCmp('WEST_ID').expand();";
                }else{
                    $js .= "window.parent.Ext.getCmp('TREE.USERROLE_LIST_ID').root.reload();";
                    $js .= "window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);";
                }
                $js .= "window.parent.Ext.getCmp('WEST_ID').expand();";
            $js .="}";
        $js .="});";
    $js .="}";
    
    return $js;
}
?>

<script>
    var objectId = '<?=$this->objectId;?>';
    
    Ext.onReady(function() {
        
        <?
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
        $CAMEMIS_PAGE_OBJECT->setAddTab();

        echo setRequestAction($this->facette);
        
        ///////////////////////////////////////////////////
        
        $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
        $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
        $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());
        
        $OBJECT_TREE->isAsyncTreeNode = false;
        
        switch($this->objectId){
            case 1:
                $OBJECT_TREE->setBaseParams("
                    cmd: 'jsonTreeAllRights'
                    ,key: '".$defaultRole."'
                    ,treeSearch:'treefolder'
                    ,objectId: '".$this->objectId."'
                ");
                $OBJECT_TREE->isTreeExpand = false;
                break;
            case 2:
            case 3:
            case 4:
            case 5:
                $OBJECT_TREE->setBaseParams("
                    cmd: 'jsonTreeAllRights'
                    ,key: '".$defaultRole."'
                    ,treeSearch:'treeall'
                    ,objectId: '".$this->objectId."'
                ");
                $OBJECT_TREE->isTreeExpand = true;
                break;
            default:
                $OBJECT_TREE->setBaseParams("
                    cmd: 'jsonTreeAllRights'
                    ,key: '".$defaultRole."'
                    ,treeSearch:'treefolder'
                    ,objectId: '".$this->objectId."'
                ");
                $OBJECT_TREE->isTreeExpand = false;
                break;
        }
        
        $OBJECT_TREE->backgroundColor = "#F9F9F9";
        
        $OBJECT_TREE->renderJS();
        
        ///////////////////////////////////////////////////
        $DETAIL_INFORMATION = "
        {
            id: 'DETAIL_INFORMATION_ID'
            ,autoHeight: true
            ,border: false
            ,width: 550
            ,items:[{
                layout: 'form'
                ,border: false
                ,autoHeight:true
                ,bodyStyle: 'padding:10px'
                ,items: [
                    {".CamemisField::Textfield("NAME","NAME",NAME, true)."}
                    ,{".CamemisField::Textfield("SHORT","SHORT",SHORT, true)."}
                ]
            }]
        }
        ";

        $FORM_ITEMS  = "[";
            $FORM_ITEMS  .= "".$DETAIL_INFORMATION;
        $FORM_ITEMS  .= "]";

        $ITEMS = "
            border: false
            ,autoScroll: true
            ,id: 'FORM_ITEMS'
            ,bodyStyle: 'padding:0px'
            ,items: ".$FORM_ITEMS."
        ";

        $OBJECT_FORM->addObjectItems($ITEMS);

        $OBJECT_FORM->addTBarItems("
            text: '".CANCEL."'
            ,id: 'CANCEL_ID'
            ,iconCls:'icon-cancel'
            ,handler: function(){
                window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);
                window.parent.Ext.getCmp('WEST_ID').expand();
            }
        ");
        
        $OBJECT_FORM->addTBarItems("
            text: 'CAMEMIS-".REFRESH."'
            ,id: 'ALL_REFRESH_ID'
            ,iconCls:'icon-world_go'
            ,handler: function(){window.parent.parent.parent.location='/main?welcome';}
        ");
        
        $OBJECT_FORM->addTBarItems("
            text: '".SAVE."'
            ,id: 'ADD_APPLY_ID'
            ,formBind:true
            ,iconCls:'icon-disk'
            ,scope:this
            ,handler: function(){
                var myform = Ext.getCmp('USERROLE_ID').getForm();
                name = myform.findField('NAME').getValue();
                short = myform.findField('SHORT').getValue();
                selecteds = '';
                setRequestAction();
            }
        ");
        
        switch($this->objectId){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                if (!$this->countUser){
                    $OBJECT_FORM->addTBarItems(CamemisBar::tbarFormEasyRemoveObject());
                }
                break;
        }
        
        $OBJECT_FORM->setLoadParams("
            cmd: 'loadObject'
            ,objectId: '".$this->objectId."'
        ");

        $OBJECT_FORM->setRemoveParams("
            cmd: 'removeObject'
            ,objectId: '".$this->objectId."'
        ");
        
        $OBJECT_FORM->setOnEmbeddedRemoveEvents("
            window.parent.Ext.getCmp('TREE.USERROLE_LIST_ID').root.reload();
            window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);
        ");
        
        $OBJECT_FORM->msgError = MSG_ERROR_RELEASE_USER;
        $OBJECT_FORM->releaseError = true;
        $OBJECT_FORM->labelAlign = "left";
        $OBJECT_FORM->labelWidth = 130;
        $OBJECT_FORM->isObjectDefaultOnLoad = true;
        $OBJECT_FORM->renderJS();
        /**
         * Form end...
         */
        
        $ADMINISTRATION_ITEMS = "
        [{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: false
                ,split: true
            }
            ,items: [{
                region:'west'
                ,id: 'subwest'
                ,title: ''
                ,autoScroll: true
                ,margins: '3 0 3 3'
                ,cmargins: '3 3 3 3'
                ,width:350
                ,minSize:350
                ,maxSize:350
                ,layout: 'fit'
                ,items:[{xtype: '".$OBJECT_TREE->getObjectXtype()."'}]
            },{
                collapsible: false
                ,id: 'subcenter'
                ,region:'center'
                ,margins: '3 3 3 0'
                ,layout: 'card'
                ,activeItem: 0
                ,bodyStyle: 'padding:1px'
                ,items: [{
                    border: false
                    ,layout: 'anchor'
                    ,bodyStyle: 'background:#FFFFFF; padding:25px;'
                    ,items: [{
                        title: ''
                        ,height:60
                        ,width:500
                        ,bodyStyle: 'background:#F9F9F9; padding:10px; border:1px dotted #999;text-align:center;'
                        ,html:'<h1 class=\"header\">".PLEASE_MAKE_YOUR_SELECTIONS."</h1>'
                    }]
                }]
            }]
        }]
        ";
        switch($this->objectId){
            case 1:
                $VIEWPORT_ITEMS = $ADMINISTRATION_ITEMS;
                break;
            case 2:
            case 3:
            case 4:
            case 5:
                $VIEWPORT_ITEMS = "[{xtype: '".$OBJECT_TREE->getObjectXtype()."'}]";
                break;
            default:
                $VIEWPORT_ITEMS = $ADMINISTRATION_ITEMS;
                break;
        }
        
        ?>
        
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout:'border'
                ,border: false
                ,defaults: {
                    collapsible: false
                    ,split: true
                }
                ,items: [{
                    region:'north'
                    ,margins: '3 3 0 3'
                    ,cmargins: '3 3 3 3'
                    ,height: 120
                    ,minSize: 120
                    ,maxSize: 120
                    ,layout: 'fit'
                    ,items:[{xtype: '<?=$OBJECT_FORM->getObjectXtype();?>'}]
                },{
                    collapsible: false
                    ,id: 'center'
                    ,region:'center'
                    ,margins: '0 3 0 3'
                    ,layout: 'card'
                    ,activeItem: 0
                    ,bodyStyle: 'padding:1px'
                    ,items:<?=$VIEWPORT_ITEMS;?>
                }]
            }]
        });
        
        var myTree = <?=$OBJECT_TREE->ExtgetCmp();?>;
        myTree.on('checkchange', function(node, checked){
            <?
            $SUCCESS_EVENT = "result = Ext.util.JSON.decode(response.responseText);XMsg('".STATUS."',result.msg);";
            ?>
            Ext.Ajax.request({
                url: '/userrole/jsonsave/'
                ,method: 'POST'
                ,params: {
                    cmd: 'jsonActionUserRight'
                    ,checked:checked
                    ,rightId: node.id
                    ,roleId: '<?=$this->objectId;?>'
                }
                ,success: function(response, options) {<?=$SUCCESS_EVENT?>}
            });
            if(Ext.getCmp('subcenter')){
                if(!checked){
                    Ext.getCmp('subcenter').getLayout().setActiveItem(0);
                }else{
                    clickOpenPage('subcenter',node.text,'/userrole/rights/?objectId=<?=$this->objectId;?>&searchParent=' + node.id);
                }
            }
        });
        myTree.on('click', function(node, event){
            if (node.attributes.checked) 
            clickOpenPage('subcenter',node.text,'/userrole/rights/?objectId=<?=$this->objectId;?>&searchParent=' + node.id);
        });
     });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>