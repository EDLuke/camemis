<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once 'models/app_school/academic/AcademicDBAccess.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_GRID = new CamemisGrid("SCHOOLEVENT", "LIST");
$OBJECT_GRID->setLoadUrl("/schoolevent/jsonload/");
$OBJECT_GRID->setSaveUrl("/schoolevent/jsonsave/");
$columndata = Utiles::getGridColumnData("SCHOOLEVENT_LIST_ID");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

?>
<script>

Ext.apply(Ext.form.VTypes, {
    daterange : function(val, field) {
        var date = field.parseDate(val);

        if(!date){
            return false;
        }
        if (field.startDateField && (!this.dateRangeMax || (date.getTime() !== this.dateRangeMax.getTime()))) {
            var start = Ext.getCmp(field.startDateField);
            start.setMaxValue(date);
            start.validate();
            this.dateRangeMax = date;
        }
        else if (field.endDateField && (!this.dateRangeMin || (date.getTime() !== this.dateRangeMin.getTime()))) {
            var end = Ext.getCmp(field.endDateField);
            end.setMinValue(date);
            end.validate();
            this.dateRangeMin = date;
        }
        return true;
    }
});

var objectId = "new";
var eventType;

Ext.onReady(function() {
	
    function cssText(v){
        return String.format('<div style=\"font-weight:normal; white-space:normal; color:#333; padding: 5px;\">{0}</div>'
            ,v
        );
    }
    function cssEvent(value, metadata, record){
        if(record.data.STATUS==0){
            var text='<span style="font-weight:bold; white-space:normal; color:#ff0000;">' + value + '</span><br/><br/>';     
        }
        else{
            var text='<span style="font-weight:bold; white-space:normal; color:#061f83;">' + value + '</span><br/><br/>';
        }
        return '<div style="padding: 5px;">'
        +text
        +'<span style="font-weight:normal; white-space:normal; color:#000;">' + record.data.REMARK + ' &nbsp;&nbsp;</span><br/><br/>'
        +'<span style="font-weight:normal; white-space:normal; color:#000;">Time: ' + record.data.START_HOUR + ' - '+record.data.END_HOUR+' &nbsp;&nbsp;</span><br/><br/>'
        ;
    }
    <?
    /**
    * Extjs: s.gif
    */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

    //sea peng 27.05.2013
    $OBJECT_GRID->addReadField("name: 'EVENT_NAME', type: 'string'");
    $OBJECT_GRID->addReadField("name: 'DATE'");
    $OBJECT_GRID->addReadField("name: 'LOCATION'");
    $OBJECT_GRID->addReadField("name: 'START_DATE'");
    $OBJECT_GRID->addReadField("name: 'END_DATE'");
    $OBJECT_GRID->addReadField("name: 'START_HOUR'");
    $OBJECT_GRID->addReadField("name: 'END_HOUR'");
    $OBJECT_GRID->addReadField("name: 'REMARK'");
    $OBJECT_GRID->addReadField("name: 'EVENT_TYPE'");
    $OBJECT_GRID->addReadField("name: 'CLASS'");
    
    $OBJECT_GRID->addColumn("header: '<b>".NAME."</b>', width: 200, hidden:".checkColHidden(1, $columndata).", sortable: false, renderer:cssText, dataIndex: 'EVENT_NAME'");
    $OBJECT_GRID->addColumn("header: '<b>".START_DATE."</b>', width: 110, hidden:".checkColHidden(2, $columndata).", sortable: false, renderer:cssText, dataIndex: 'START_DATE'");
    $OBJECT_GRID->addColumn("header: '<b>".END_DATE."</b>', width: 110, hidden:".checkColHidden(3, $columndata).", sortable: false, renderer:cssText, dataIndex: 'END_DATE'");
    $OBJECT_GRID->addColumn("header: '<b>".LOCATION."</b>', width: 300, hidden:".checkColHidden(4, $columndata).", renderer:cssText, dataIndex: 'LOCATION'");
    $OBJECT_GRID->addColumn("header: '<b>".DESCRIPTION."</b>', width: 300, hidden:".checkColHidden(5, $columndata).", renderer:cssText, dataIndex: 'REMARK'");
    $OBJECT_GRID->addColumn("header: '<b>".EVENT_TYPE."</b>', width: 300, hidden:".checkColHidden(6, $columndata).", renderer:cssText, dataIndex: 'EVENT_TYPE'");
    //
    
    $HIDDEN_SHOW_DETAIL = "true";
    $HIDDEN_ADD_ENTRY = "true";
    
    switch(UserAuth::getUserType()){
        case "INSTRUCTOR":
            $HIDDEN_SHOW_DETAIL = "false";
            $HIDDEN_ADD_ENTRY = "false";
        break;
    }
    
    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            id: 'REFRESH_ID'
            ,text: '".REFRESH."'
            ,iconCls:'icon-reload'
            ,scope:this
            ,disabled: false
            ,handler: function(){
               Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
            }
        }]);
    ");
    
    //if(UserAuth::getACLValue("CLASS_EVENTS_EDIT_RIGHT"))
    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            id: 'CREATE_ITEM_ID'
            ,text: '".ADD_ENTRY."'
            ,hidden: ".$HIDDEN_ADD_ENTRY."
            ,iconCls:'icon-application_form_add'
            ,scope:this
            ,handler: function(){
                clickOpenPage('content','".ADD_ENTRY."','".$this->URL_SHOWITEM."target=".$this->target."&schoolyearId=".$this->schoolyearId."&classId=".$this->classId."&academicId=".$this->classId."&objectId=new&subjectId=".$this->subjectId."');
            }
        }]);
    ");
    
    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            id: 'DETAIL_INFORMATION_ID'
            ,text: '".SHOW_DETAIL."'
            ,hidden: ".$HIDDEN_SHOW_DETAIL."
            ,iconCls:'icon-magnifier'
            ,scope:this
            ,handler: function(){
                var sm = this.getSelectionModel();
                var record = sm.getSelected();
                if(record){
                    var objectId = record.data.ID;
                    var classId = record.data.CLASS;
                    clickOpenPage('content',record.data.EVENT_NAME,'".$this->URL_SHOWITEM."classId='+classId+'&academicId=".$this->classId."&objectId=' + objectId);
                }else{
                    ".camemisPage::alertPleaseSelect()."
                }
            }
        }]);
    ");
    
    $OBJECT_GRID->setSaveParams("
        cmd: 'jsonActionClassEvent'
        ,target: '".$this->target."'
        ,classId: '".$this->classId."'
        ,objectId: objectId
    ");
    
    $OBJECT_GRID->setEditEmbeddedEvents("
        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
    ");
    
    $OBJECT_GRID->loadMask = false;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();
    
    /////////Visal THORN
  
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            border: false
            ,xtype: 'panel'
            ,layout: 'card'
            ,id: 'content'
            ,activeItem: 0
            ,items:[{
                border: false
                ,title: ''
                ,layout: 'fit'
                ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
            }]
        }]
    });
    Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.baseParams = {
        start:0
        ,limit:100
        ,cmd: 'allSchoolevents'
        ,teacherId: '<?=Zend_Registry::get('USER')->ID?>'
        ,subjectId: '<?=$this->subjectId?>'
        ,target: '<?=$this->target;?>'
        ,schoolyearId: '<?=$this->schoolyearId;?>'
    };
    Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));   
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>