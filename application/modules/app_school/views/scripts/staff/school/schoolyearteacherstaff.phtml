<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$OBJECT_GRID = new CamemisGrid("STAFF", "LIST");
$OBJECT_GRID->setLoadUrl('/staff/jsonload/');
$OBJECT_GRID->setSaveUrl('/staff/jsonsave/');

$schoolyearId = isset($_GET["schoolyearId"])?addText($_GET["schoolyearId"]):"";
$tutor = isset($_GET["tutor"]) ? addText($_GET["tutor"]):"";
$entries = StaffDBAccess::getClassesByTutor($tutor, $schoolyearId);

$data = array();
if($entries){
    foreach($entries as $value){
        $data[$value->ID] = $value->ID;
    }
}
$Ids = implode(",",$data);
?>

<script>
var clickId; 
Ext.onReady(function() {
    
    function renderTextRed(v){
        return '<div style="font-weight:normal;color:#CC0000;">' + v + '</div>';
    }
    function loaGrid(term){
        Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.baseParams = {
            start:0
            ,limit:100
            ,cmd: 'jsonAssignedTeachersByClass'
            ,classIds: '<?=$Ids?>'
            ,schoolyearId: '<?=$schoolyearId?>'
            ,gradingterm: term
        };
        Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.load();
    }
    <?
    /**
     * Extjs: s.gif
     */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $OBJECT_GRID->addCellRenderer("
        function renderText(v, p, record, rowIndex){
            var str = '<span class=spanText>' + v + '</span>';
            return str;
        }
    ");
    
    $OBJECT_GRID->addReadField("name: 'TEACHER_NAME'");
    $OBJECT_GRID->addReadField("name: 'PHONE'");
    $OBJECT_GRID->addReadField("name: 'EMAIL'");
    $OBJECT_GRID->addReadField("name: 'SUBJECT'");
    $OBJECT_GRID->addReadField("name: 'SUBJECT_ID'");
    $OBJECT_GRID->addReadField("name: 'CLASS'");
    $OBJECT_GRID->addReadField("name: 'TERM'");
    
    $OBJECT_GRID->addColumn("header: '<b>".TEACHER."</b>', hidden: false, align:'left', menuDisabled : true, sortable: true, width:150, dataIndex: 'TEACHER_NAME'");
    $OBJECT_GRID->addColumn("header: '<b>".SUBJECT."</b>', align:'left', menuDisabled : true, sortable: true, width:120, dataIndex: 'SUBJECT'");
    $OBJECT_GRID->addColumn("header: '<b>".GRADE_CLASS."</b>', hidden: false, align:'left', menuDisabled : true, sortable: true, width:150, dataIndex: 'CLASS'");
    $OBJECT_GRID->addColumn("header: '<b>".TERM."</b>', hidden: false, align:'left', menuDisabled : true, sortable: true, width:120, dataIndex: 'TERM'");
    $OBJECT_GRID->addColumn("header: '<b>".PHONE."</b>', align:'left', menuDisabled : true, sortable: true, width:120, dataIndex: 'PHONE'");
    $OBJECT_GRID->addColumn("header: '<b>".EMAIL."</b>', align:'left', menuDisabled : true, sortable: true, width:120, dataIndex: 'EMAIL'");
    
    $OBJECT_GRID->loadMask = false;
    $OBJECT_GRID->isGroupingView = true;
    $OBJECT_GRID->groupField = "TEACHER_NAME";
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();

    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,gradingterm: 'ALL'
        ,classIds: '".$Ids."'
        ,scholyearId: '".$schoolyearId."'
        ,cmd: 'jsonAssignedTeachersByClass'
    ";
    $OBJECT_GRID->renderJS();
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            border: false
            ,layout: 'card'
            ,activeItem: 0
            ,id: 'center'
	    ,tbar:[{
            text:'<b><?=LIST_OF_TEACHERS?></b>'
            /*,iconCls: 'icon-tabs'*/
            ,handler:function(){loaGrid("ALL");}
	    },'-',{
            text:'<b><?=FIRST_SEMESTER?></b>'
            /*,iconCls: 'icon-tabs'*/
            ,handler:function(){loaGrid("FIRST_SEMESTER");}
	    },'-',{
            text:'<b><?=SECOND_SEMESTER?></b>'
            /*,iconCls: 'icon-tabs'*/
            ,handler:function(){loaGrid("SECOND_SEMESTER");}
	    }]
            ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
        }]
    });
    <?
    $CONTEXTMENU_ITEMS = array();
    $QUALIFICATION = "{
        text: '".QUALIFICATION."'
        ,iconCls: 'icon-application_form_magnify'
        ,handler: function(){
                openWinIFrame('".QUALIFICATION."', '/staff/qualification/?objectId=' + clickId, percentWidth(85), percentHeight(85));
        }
    }";
    
    if (UserAuth::getACLValue("STAFF_QUALIFICATION_READ_RIGHT"))
    $CONTEXTMENU_ITEMS[] = $QUALIFICATION;
    $WORK_EXPERIENCE = "{
        text: '".WORK_EXPERIENCE."'
        ,iconCls: 'icon-application_form_magnify'
        ,handler: function(){
                openWinIFrame('".WORK_EXPERIENCE."', '/staff/workexperience/?objectId=' + clickId, percentWidth(85), percentHeight(85));
        }
    }";
    
    if (UserAuth::getACLValue("STAFF_WORK_EXPERIENCE_READ_RIGHT"))
    $CONTEXTMENU_ITEMS[] = $WORK_EXPERIENCE;
    $SKILL = "{
        text: '".SKILL."'
        ,iconCls: 'icon-application_form_magnify'
        ,handler: function(){
                openWinIFrame('".SKILL."', '/staff/profession/?objectId=' + clickId, percentWidth(85), percentHeight(85));
        }
    }";
    
    if (UserAuth::getACLValue("STAFF_SKILL_READ_RIGHT"))
    $CONTEXTMENU_ITEMS[] = $SKILL;  
    $CHOOSE_CONTEXTMENU_ITEMS = implode(',', $CONTEXTMENU_ITEMS);
    
    if($CONTEXTMENU_ITEMS){
        $js = "";
        $js .="var grid = Ext.getCmp('".$OBJECT_GRID->getObjectId()."');";
        $js .="if (grid) grid.on('cellclick', function(grid, rowIndex, columnIndex, event) {";
            $js .="var record = grid.store.getAt(rowIndex);clickId=record.data.ID;";
            $js .="var contextMenu = new Ext.menu.Menu({";
            $js .="items: [".$CHOOSE_CONTEXTMENU_ITEMS."]";
            $js .="});";
            $js .="event.stopEvent();";
            $js .="contextMenu.showAt(event.xy);"; 
        $js .="});";
        echo $js;
    }
    ?>
});
</script>
<?
Zend_Registry::getInstance();
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>