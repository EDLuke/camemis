<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.02.2012
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once 'models/app_school/staff/StaffDBAccess.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$GENERAL_GRID = new CamemisGrid("SUBJECT", "GENERAL");
$GENERAL_GRID->setLoadUrl('/subject/jsonload/');
$GENERAL_GRID->setSaveUrl('/subject/jsonsave/');

$TRAINING_GRID = new CamemisGrid("SUBJECT", "TRAINING");
$TRAINING_GRID->setLoadUrl('/subject/jsonload/');
$TRAINING_GRID->setSaveUrl('/subject/jsonsave/');

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
    
    <?
    $GENERAL_GRID->addCellRenderer("
        function renderText(v, p, record, rowIndex){
            var str = '<span class=spanText>' + v + '</span>';
            return str;
        }
    ");

    $GENERAL_GRID->addReadField("name: 'SUBJECT'");
    $GENERAL_GRID->addReadField("name: 'SUBJECT_TYPE'");
    $GENERAL_GRID->addReadField("name: 'ASSIGNED'");
    $GENERAL_GRID->addReadField("name: 'EDUCATION_TYPE'");

    $GENERAL_GRID->addColumn("
        xtype: 'checkboxcolumn'
        ,header: ''
        ,dataIndex: 'ASSIGNED'
        ,width: 50
        ,on: 1
        ,off: 0
    ");

    $GENERAL_GRID->addColumn("header: '".NAME."', align:'left', renderer: renderText, width: 250, sortable: false, dataIndex: 'SUBJECT'");
    $GENERAL_GRID->addColumn("header: '".SUBJECT_TYPE."', align:'center', renderer: renderText, width: 150, sortable: false, dataIndex: 'SUBJECT_TYPE'");
    $GENERAL_GRID->addColumn("header: '".EDUCATION_TYPE."', align:'left', renderer: renderText, width: 150, sortable: false, dataIndex: 'EDUCATION_TYPE'");

    $GENERAL_GRID->baseParams = "
        start:0
        ,limit:100
        ,teacherId: '".$this->objectId."'
        ,cmd: 'loadSubjectByTeacher'
    ";
    $GENERAL_GRID->setSaveParams("
        cmd: 'actionTeacherSubject'
        ,teacherId: '".$this->objectId."'
    ");
    $GENERAL_GRID->setAftereditCallback("
        XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
    ");
    $GENERAL_GRID->forceFit = "false";
    $GENERAL_GRID->isGridEditing = true;
    $GENERAL_GRID->isCheckboxSelect = false;
    $GENERAL_GRID->isGroupingView = true;
    $GENERAL_GRID->groupField = "EDUCATION_TYPE";

    $GENERAL_GRID->renderJS();
    //
    $TRAINING_GRID->addCellRenderer("
        function renderText(v, p, record, rowIndex){
            var str = '<span class=spanText>' + v + '</span>';
            return str;
        }
    ");

    $TRAINING_GRID->addReadField("name: 'SUBJECT'");
    $TRAINING_GRID->addReadField("name: 'SUBJECT_TYPE'");
    $TRAINING_GRID->addReadField("name: 'ASSIGNED'");
    $TRAINING_GRID->addReadField("name: 'EDUCATION_TYPE'");

    $TRAINING_GRID->addColumn("
        xtype: 'checkboxcolumn'
        ,header: ''
        ,dataIndex: 'ASSIGNED'
        ,width: 50
        ,on: 1
        ,off: 0
    ");

    $TRAINING_GRID->addColumn("header: '".NAME."', align:'left', renderer: renderText, width: 250, sortable: false, dataIndex: 'SUBJECT'");
    $TRAINING_GRID->addColumn("header: '".SUBJECT_TYPE."', align:'center', renderer: renderText, width: 150, sortable: false, dataIndex: 'SUBJECT_TYPE'");

    $TRAINING_GRID->baseParams = "                                                                                                       
        start:0
        ,limit:100
        ,teacherId: '".$this->objectId."'
        ,target:'TRAINING'
        ,cmd: 'loadSubjectByTeacher'
    ";
    $TRAINING_GRID->setSaveParams("
        cmd: 'actionTeacherSubject'
        ,target:'TRAINING'
        ,teacherId: '".$this->objectId."'
    ");

    $TRAINING_GRID->setAftereditCallback("
        XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
    ");
    $TRAINING_GRID->forceFit = "false";
    $TRAINING_GRID->isGridEditing = true;
    $TRAINING_GRID->isCheckboxSelect = false;
    $TRAINING_GRID->renderJS();
    ?>

    Ext.onReady(function() {

        Ext.QuickTips.init();
        
        <?
        camemisPage::setNoLogoutMessage();
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
        $CAMEMIS_PAGE_OBJECT->setAddTab();
        
        $PENEL_ITEMS = Array();        
        $GENERAL_EDUCATION = "{
            title: '".GENERAL_EDUCATION."'
            ,layout: 'fit'
            ,items:[{xtype: '".$GENERAL_GRID->getObjectXtype()."'}]
        }";
        if(UserAuth::displayRoleGeneralEducation())
        $PENEL_ITEMS[] = $GENERAL_EDUCATION;
        
        $TRAINING_PROGRAMS = "{
            title: '".TRAINING_PROGRAMS."'
            ,layout: 'fit'
            ,items:[{xtype: '".$TRAINING_GRID->getObjectXtype()."'}]
        }";
        if(UserAuth::displayRoleTrainingEducation())
        $PENEL_ITEMS[] = $TRAINING_PROGRAMS;
        
        $CHOOSE_ITEMS = "[".implode(',',$PENEL_ITEMS)."]";
        ?>
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                xtype: 'tabpanel'
                ,border:false
                ,tabPosition: 'top'
                ,activeTab: 0
                ,items:[<?=$CHOOSE_ITEMS?>]
            }]
        });
        Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>