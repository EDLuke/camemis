<?
require_once 'clients/app_admin/AdminPage.php';
require_once 'clients/app_admin/AdminForm.php';
require_once 'clients/app_admin/AdminTree.php';
require_once 'clients/app_admin/AdminGrid.php';
require_once 'clients/app_admin/AdminField.php';
require_once 'clients/app_admin/AdminBar.php';
require_once 'clients/app_admin/AdminPage.php';
require_once 'models/app_admin/AdminHelpDBAccess.php';

$CAMEMIS_PAGE = AdminPage::getInstance();

$choose_language = isset($_GET["language"])?addText($_GET["language"]):"EN";
$type = isset($_GET["type"])? addText($_GET["type"]):"0";

print $CAMEMIS_PAGE->showCamemisHeader();

$HELP_ACCESS = new AdminHelpDBAccess();

$HELP_OBJECT = $HELP_ACCESS->findHelp($this->objectId);

if($HELP_OBJECT){
    $parentId = $HELP_OBJECT->PARENT;
}else{
    $parentId = isset($_GET["parentId"])? addText($_GET["parentId"]):"0";
}

$parentObject = $HELP_ACCESS->findHelp($parentId);
$reloadId = $parentObject?$parentObject->PARENT:0;

switch($type){
    case 1:
        $FIELD_NAME = "NAME_ENGLISH";
        $FIELD_YOUTUBE_KEY = "YOUTUBE_KEY_ENGLISH";
        $FIELD_CONTENT = "CONTENT_ENGLISH";
        $ID_YOUTUBE_KEY = isset($HELP_OBJECT->YOUTUBE_KEY_ENGLISH)?$HELP_OBJECT->YOUTUBE_KEY_ENGLISH:"";
        break;
    case 2:
        $FIELD_NAME = "NAME_KHMER";
        $FIELD_YOUTUBE_KEY = "YOUTUBE_KEY_KHMER";
        $FIELD_CONTENT = "CONTENT_KHMER";
        $ID_YOUTUBE_KEY = isset($HELP_OBJECT->YOUTUBE_KEY_KHMER)?$HELP_OBJECT->YOUTUBE_KEY_KHMER:$HELP_OBJECT->YOUTUBE_KEY_ENGLISH;
        break;
    case 3:
        $FIELD_NAME = "NAME_VIETNAMESE";
        $FIELD_YOUTUBE_KEY = "YOUTUBE_KEY_VIETNAMESE";
        $FIELD_CONTENT = "CONTENT_VIETNAMESE";
        $ID_YOUTUBE_KEY = isset($HELP_OBJECT->YOUTUBE_KEY_VIETNAMESE)?$HELP_OBJECT->YOUTUBE_KEY_VIETNAMESE:$HELP_OBJECT->YOUTUBE_KEY_ENGLISH;
        break;
}
?>
<script>
    //Load player api asynchronously.
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    var done = false;
    var player;
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
            height: '390'
            ,width: '640'
            ,videoId:'<?=$ID_YOUTUBE_KEY?>'
        });
    }
    
    function onPlayerReady(evt) {
        evt.target.playVideo();
    }
    
    function onPlayerStateChange(evt) {
        if (evt.data == YT.PlayerState.PLAYING && !done) {
            setTimeout(stopVideo, 6000);
            done = true;
        }
    }
    function stopVideo() {
        player.stopVideo();
    }
</script>
<script>
    
    function getWinVideo(){
        winVideo = new Ext.Window({
            title: 'Play Video'
            ,maximizable: false
            ,id: 'winVideoId'
            ,autoHeight: true
            ,width:670
            ,resizable: false
            ,closable: false
            ,modal: true
            ,contentEl: 'divWindowId'
            ,tbar: ['->',{
                text: 'Close'
                ,iconCls: 'icon-cancel'
                ,handler: function (){
                    Ext.getCmp('winVideoId').close();
                    if (player) player.stopVideo();
                }
            },'-',{
                text: 'Play'
                ,iconCls: 'icon-control_play'
                ,handler: function (){
                    if (player) player.playVideo();
                }
            },'-',{
                text: 'Stop'
                ,iconCls: 'icon-control_stop'
                ,handler: function (){
                    if (player) player.stopVideo();
                }
            }]
        });
        winVideo.show();
    }
    ////////////////////////////////////////////////////////////////////////////
    Ext.onReady(function() {
        var myTree;
        Ext.form.Field.prototype.msgTarget = 'side';
        
        <?
        $CAMEMIS_PAGE->setExtDefaultGif();
        $OBJECT_FORM = new AdminForm("HELP");
        $OBJECT_FORM->setURL("/help/");
        
        $ITEMS = "[]";
        
        switch($type){
            case 1:
                if($this->objectId !="new"){
                    $ITEMS = "[
                        {".AdminField::Textfield($FIELD_NAME,$FIELD_NAME, 'Name', true, false)."}
                        ,{" . AdminField::Numberfield("SORTKEY", "SORTKEY", "Sortkey", false, false, false) . "}
                        ,{".AdminField::Textfield("TEXT_KEY", "TEXT_KEY", 'Text Key', true, false)."}
                        ,{".AdminField::Textfield($FIELD_YOUTUBE_KEY,$FIELD_YOUTUBE_KEY, 'Youtube-Key', false, false)."}
                    ]";
                }else{
                    $ITEMS = "[
                        {".AdminField::Textfield($FIELD_NAME,$FIELD_NAME, 'Name', true, false)."}
                        ,{" . AdminField::Numberfield("SORTKEY", "SORTKEY", "Sortkey", false, false, false) . "}
                    ]";
                }
                
            break;
            default:
                $ITEMS = "[
                    {".AdminField::Textfield($FIELD_NAME,$FIELD_NAME, 'Name', true, false)."}
                    ,{" . AdminField::Numberfield("SORTKEY", "SORTKEY", "Sortkey", false, false, false) . "}
                    ,{".AdminField::Textfield($FIELD_YOUTUBE_KEY,$FIELD_YOUTUBE_KEY, 'Youtube-Key', false, false)."}
                ]";
            break;
        }
        
        if($HELP_OBJECT){
            $FORM_ITEMS = "
            {
                title: 'Detail'
                ,autoHeight: true
                ,style: 'padding-bottom:5px'
                ,width: percentWidth(96)
                ,items:[{
                    layout: 'form'
                    ,border: false
                    ,autoHeight: true
                    ,collapsible: true
                    ,collapsed: true
                    ,style: 'padding-bottom: 5px'
                    ,bodyStyle: 'background:#FFFFFF;padding:10px; color:#000000;font-weight: bold;'
                    ,items:".$ITEMS."
                }]
            },{
                title: ''
                ,tbar:['->',{
                    text: 'Play Video'
                    ,iconCls: 'icon-control_play'
                    ,handler: function() {getWinVideo();}
                }]
                ,width: percentWidth(96)
                ,height:percentHeight(95)
                ,collapsible: true
                ,collapsed: false
                ,style: 'padding-bottom: 5px'
                ,layout:'fit'
                ,items: [new Ext.ux.IFrameComponent({ id: 'IFRAME_CONTENT', url:'/help/editcontent/?objectId=".$this->objectId."&field=".$FIELD_CONTENT."'})]
            }";
            
        }else{
            $FORM_ITEMS = "
            {
                title: 'Detail'
                ,autoHeight: true
                ,collapsible: true
                ,collapsed: false
                ,style: 'padding-bottom:5px'
                ,width: percentWidth(96)
                ,items:[{
                    layout: 'form'
                    ,border: false
                    ,autoHeight:true
                    ,bodyStyle: 'background:#FFFFFF;padding:10px; color:#000000;font-weight: bold;'
                    ,items:".$ITEMS."
                }]
            }";
        }
        
        $items = "
            border: false
            ,id: 'FORM_ITEMS'
            ,bodyStyle: 'padding:0px'
            ,items:[".$FORM_ITEMS."]
        ";
        $OBJECT_FORM->setLoadParams("cmd: 'jsonLoadHelp',objectId: '".$this->objectId."'");
        
        $OBJECT_FORM->setSaveParams("
            cmd: 'jsonSaveHelp'
            ,objectId: '".$this->objectId."'
            ,parentId: '".$parentId."'
        ");
        
        $OBJECT_FORM->setRemoveParams("
            cmd: 'jsonRemoveHelp'
            ,objectId: '".$this->objectId."'
        ");
        
        if($reloadId == 0){
            $OBJECT_FORM->setonEmbeddedEvents("
                myTree = window.parent.parent.Ext.getCmp('TREE.HELP_LIST_ID');
                myTree.root.reload();
                myNode.expand(true, false); 
                ".$CAMEMIS_PAGE::setRequestURI()."
            ");
            
            $OBJECT_FORM->setOnEmbeddedRemoveEvents("
                myTree = window.parent.parent.Ext.getCmp('TREE.HELP_LIST_ID');
                myTree.root.reload();
                myTree.expand(true, false); 
                window.parent.parent.Ext.getCmp('VIEWPORT_CENTER').getLayout().setActiveItem(0);
            ");
        }else{
            
            $OBJECT_FORM->setonEmbeddedEvents("
                myTree = window.parent.parent.Ext.getCmp('TREE.HELP_LIST_ID');
                if(myTree){
                    myNode = myTree.getNodeById('".$reloadId."');
                    if(myNode){
                        myNode.reload();
                        myNode.expand(true, false); 
                        var result = Ext.util.JSON.decode(action.response.responseText);
                        window.parent.location='/help/showmain/?objectId='+result.objectId;
                    }
                }
            ");
            
            if (!AdminHelpDBAccess::checkChild($this->objectId)){
                $OBJECT_FORM->setOnEmbeddedRemoveEvents("
                    myTree = window.parent.parent.Ext.getCmp('TREE.HELP_LIST_ID');
                    if(myTree){
                        myNode = myTree.getNodeById('".$reloadId."');
                        if(myNode){
                            myNode.reload();
                            myNode.expand(true, false); 
                            window.parent.parent.Ext.getCmp('VIEWPORT_CENTER').getLayout().setActiveItem(0);
                        }
                    }
                ");
            }
        }
        
        $OBJECT_FORM->addObjectItems($items);
        
        switch($type){
            case 1:
                $OBJECT_FORM->addTBarItems("
                    text: 'Cancel'
                    ,id: 'CANCEL_ID'
                    ,formBind:true
                    ,iconCls:'icon-cancel'
                    ,scope:this
                    ,handler: function(){window.parent.parent.Ext.getCmp('VIEWPORT_CENTER').getLayout().setActiveItem(0);}
                ");
            break;
        }
        
        if (!AdminHelpDBAccess::checkChild($this->objectId)){
            $OBJECT_FORM->addTBarItems(AdminBar::tbarSingleRemove());
        }
        
        $OBJECT_FORM->addTBarItems(AdminBar::tbarSingleSave());
        
        $OBJECT_FORM->labelAlign = "left";
        $OBJECT_FORM->labelWidth = 120;
        $OBJECT_FORM->isObjectDefaultOnLoad = true;
        $OBJECT_FORM->renderJS();
        ?>
        viewport = new Ext.Viewport({
            layout:'fit'
            ,border: false
            ,items: [{
                border: false
                ,xtype: 'panel'
                ,layout: 'fit'
                ,items:[{xtype: '<?= $OBJECT_FORM->getObjectXtype(); ?>'}]
            }]
        });
    });
</script>
<div id="divWindowId" class="x-hidden" style="border:0px silver solid;padding:8px;height:400px; width:600px;">
    <div id="player"></div>
</div>
<?
print $CAMEMIS_PAGE->showCamemisFooter();
?>