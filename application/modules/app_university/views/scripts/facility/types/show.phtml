<?
///////////////////////////////////////////////////////////
// @Sor Veasna
// Date: 09.05.2013
// 
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_FORM = new CamemisForm("FACILITY");
$OBJECT_FORM->setSaveUrl("/facility/jsonsave/");
$OBJECT_FORM->setLoadUrl("/facility/jsonload/");

$OBJECT_TREE = new CamemisTree("FACILITY", "LIST");
$OBJECT_TREE->setURL("/facility/jsontree/");

$setFormload=false;
$parent = $this->parentId?$this->parentId:0;
print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

if($this->objectId!="new"){
    FacilityDBAccess::mappingFieldSetting4Child($this->objectId);
}

?>
<script>
Ext.onReady(function() {
	
<?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $DETAIL_ITEMS ="";
    
    $DETAIL_ITEMS .= "{".CamemisField::Textfield("NAME", "NAME", NAME, true)."}";
    $DETAIL_ITEMS .= ",{".CamemisField::Textfield("SHORT", "SHORT", SHORT, false)."}";
    $DETAIL_ITEMS .= ",{".CamemisField::Colorfield("COLOR", COLOR, false)."}";
    $DETAIL_ITEMS .= ",{".CamemisField::Numberfield("SORTKEY", "SORTKEY", SORTKEY, false, false, false)."}";
    
    $DETAIL_INFORMATION = "{
        title: '".DETAIL_INFORMATION."'
        ,collapsible: true
        ,collapsed: false
        ,width: 550
        ,bodyStyle: 'padding:10px'
        ,style: 'padding-bottom: 5px'
        ,items:[{
            layout: 'form'
            ,border: false
            ,bodyStyle: 'padding:5px'
            ,items:[".$DETAIL_ITEMS."]
        }]}
    ";
   
    $DESCRIPTION = "{
        title: '".DESCRIPTION."'
        ,collapsible: true
        ,collapsed: false
        ,width:550
        ,style: 'padding-bottom: 5px'
        ,items:[{
            layout: 'fit'
            ,border: false
            ,bodyStyle: 'padding:5px'
            ,items:[{".CamemisField::Textarea("DESCRIPTION", DESCRIPTION, 150)."}]
        }]}
    ";
    
    ////////////////////////////////////////////////////////////////////////////
    //Field setting...
    $OBJECT_TREE->setBaseParams("
        cmd:'jsonAllTreeFieldSetting'
        ,aliasId:'".$this->objectId."'
    ");
    
    $OBJECT_TREE->isAsyncTreeNode = false;
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeRefresh(false));
    $OBJECT_TREE->backgroundColor = "#F9F9F9";
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());
    $OBJECT_TREE->isTreeExpand=true; 
    $OBJECT_TREE->renderJS();
    
    $FIELD_SETTING = "{
        title: '".FACILITY_FIELD_SETTINGS."'
        ,collapsible: true
        ,collapsed: false
        ,width:550
        ,style: 'padding-bottom: 5px'
        ,items:[{
            layout: 'fit'
            ,height:280
            ,border: false
            ,items: [{xtype: '".$OBJECT_TREE->getObjectXType()."'}]
        }]}
    ";
    ////////////////////////////////////////////////////////////////////////////
    
    $items = "[";
    $items .= $DETAIL_INFORMATION;
    if ($this->facette) $items .= ",".$FIELD_SETTING;
    $items .= ",".$DESCRIPTION;  
    $items .= "]";
    
    $formItems = "
        border: false
        ,id: 'FORM_ITEMS'
        ,bodyStyle: 'padding:0px'
        ,items:".$items."
    ";
    
    $OBJECT_FORM->addObjectItems($formItems);

    $OBJECT_FORM->addTBarItems("
        text: '".CANCEL."'
        ,id: 'CANCEL_ID'
        ,formBind:true
        ,iconCls:'icon-cancel'
        ,scope:this
        ,handler: function(){window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);}
    ");
   
    $OBJECT_FORM->setLoadParams("
        cmd: 'jsonLoadFacilityType'
        ,objectId: '".$this->objectId."'
    ");
    
    $OBJECT_FORM->setSaveParams("
        cmd: 'jsonSaveFacilityType'
        ,objectId: '".$this->objectId."'
        ,parentId: '".$this->parentId."'
    ");

    if($this->objectId=="new"){
        $setFormload=false;
            
        $OBJECT_FORM->setonEmbeddedEvents("
            XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
            myTree = window.parent.Ext.getCmp('TREE.FACILITY_LIST_ID');
            myNode = myTree.getNodeById('".$parent."');
            if(myNode.parentNode==null){
                myTree.root.reload();
            }else{
                var parentId = myNode.parentNode.id
                myPerentNode = myTree.getNodeById(parentId);
                if(myNode.isLeaf()){
                    if(myPerentNode){
                        myPerentNode.reload();
                        myPerentNode.expand(true, false);
                    }else{
                        myTree.root.reload();
                    }
                }else{
                    if (myNode.hasChildNodes()) {
                        myNode.reload();
                        myNode.expand(true, false);
                    }
                }
            }
            var result = Ext.util.JSON.decode(action.response.responseText);
            window.location='".$_SERVER["REQUEST_URI"]."&objectId='+result.objectId;
           
        ");
        
    }else{
        $setFormload=true;
        
        $OBJECT_FORM->addTBarItems(CamemisBar::tbarSingleRemove());
        $OBJECT_FORM->setRemoveParams("
            cmd: 'deleteFacilityType'
            ,objectId: '".$this->objectId."'
        ");
        
        $OBJECT_FORM->setonEmbeddedEvents("
            XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
            myTree = window.parent.Ext.getCmp('TREE.FACILITY_LIST_ID');
            myNode = myTree.getNodeById('".$this->objectId."');
            if(myNode.parentNode==null){
                myTree.root.reload();
            }else{
                var parentId = myNode.parentNode.id
                myPerentNode = myTree.getNodeById(parentId);
                if(myNode.isLeaf()){
                    if(myPerentNode){
                        myPerentNode.reload();
                        myPerentNode.expand(true, false);
                    }else{
                        myTree.root.reload();
                    }
                }else{
                    if (myNode.hasChildNodes()) {
                        myNode.reload();
                        myNode.expand(true, false);
                    }
                }
            }
            ".camemisPage::setRequestURI()."
        ");
        
        $OBJECT_FORM->setOnEmbeddedRemoveEvents("
            XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
            myTree = window.parent.Ext.getCmp('TREE.FACILITY_LIST_ID');
            myNode = myTree.getNodeById('".$this->objectId."');
            myNode.remove('".$this->objectId."');
            window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);
        ");
    }
 
    $OBJECT_FORM->addTBarItems(CamemisBar::tbarSingleSave());
    if($this->objectId!="new"){
        $OBJECT_FORM->isObjectDefaultOnLoad=true;
    }else{
        $OBJECT_FORM->isObjectDefaultOnLoad=false;
    }
    $OBJECT_FORM->labelAlign = "left";
    $OBJECT_FORM->labelWidth = 120;
    $OBJECT_FORM->renderJS();
    
    $VIEWPORT ="";
        $VIEWPORT .="viewport = new Ext.Viewport({";
            $VIEWPORT .="layout: 'fit'";
            $VIEWPORT .=",border: false";
            $VIEWPORT .=",items: [{";
                $VIEWPORT .="xtype: 'panel'";
                $VIEWPORT .=",id: 'panel'";
                $VIEWPORT .=",border: false";
                $VIEWPORT .=",layout: 'card'";
                $VIEWPORT .=",activeItem: 0";
                $VIEWPORT .=",items: [{";
                    $VIEWPORT .="layout: 'fit'";
                    $VIEWPORT .=",border: false";
                    $VIEWPORT .=",items: [{xtype: '".$OBJECT_FORM->getObjectXType()."'}]";
                $VIEWPORT .="}]";
            $VIEWPORT .="}]";
        $VIEWPORT .="});";
    echo $VIEWPORT; 
    
    $js = "";
    $js .= "var tree = Ext.getCmp('".$OBJECT_TREE->getObjectId()."');";
    $js .= "tree.on('checkchange', function(node, checked){";
        $js .= "var selecteds = '', selNodes = tree.getChecked();";
        $js .= "Ext.each(selNodes, function(node){";
            $js .= "if(selecteds.length > 0){";
                $js .= "selecteds += ',';";
            $js .= "}";
            $js .= "selecteds += node.id;";
        $js .= "});";
        $js .= "Ext.Ajax.request({";
            $js .= "url: '/facility/jsonsave/'";
            $js .= ",method: 'POST'";
            $js .= ",scope:this";
            $js .= ",params: {";
                $js .= "cmd: 'actionFieldSetting2Category'";
                $js .= ",selecteds: selecteds";
                $js .= ",objectId: '".$this->objectId."'";
            $js .= "}";
            $js .= ",success: function(response, options) {";
                $js .= "XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."');"; 
            $js .= "}";
        $js .= "});";
    $js .= "});";
    echo $js;
?>
  });   
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>