<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 22.04.2011
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_FORM = new CamemisForm("FACILITY");
$OBJECT_FORM->setLoadUrl('/facility/jsonload/');
$OBJECT_FORM->setSaveUrl('/facility/jsonsave/');

$OBJECT_GRID = new CamemisGrid("FACILITY", "LIST");
$OBJECT_GRID->setLoadUrl('/facility/jsonload/');
$OBJECT_GRID->setSaveUrl('facility/jsonsave/');

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
Ext.onReady(function() {
    
    function geFormat(data){
        return date.getFullYear() + '-' + (parseInt(date.getMonth()) + 1) + '-' + date.getDate();
    }
    Ext.apply(Ext.form.VTypes, {
        daterange : function(val, field) {
            var date = field.parseDate(val);
            if(!date){
                return false;
            }
            if (field.startDateField) {
                var start = Ext.getCmp(field.startDateField);
                if (!start.maxValue || (date.getTime() != start.maxValue.getTime())) {
                    start.setMaxValue(date);
                    start.validate();
                }
            }
            else if (field.endDateField) {
                var end = Ext.getCmp(field.endDateField);
                if (!end.minValue || (date.getTime() != end.minValue.getTime())) {
                    end.setMinValue(date);
                    end.validate();
                }
            }
            return true;
        }
    });
    
    function cssTextBlue(value, metadata, record){
        return '<div style="font-weight:normal; color:#0000FF; padding: 5px;">' + value + '</div>';
    }
    
    function cssText(value, metadata, record){
        if(record.data.RETURN=='true'){
            return '<div style="font-weight:normal; color:#061f83;background:#FFFFC2;height:55px; padding: 5px;">' + value + '</div>';  
        }else{
            return '<div style="font-weight:bold; color:#061f83; padding: 5px; height:55px;background:#E0FFFF;">' + value + '</div>';
        } 
    }
    
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $OBJECT_FORM->addObjectItems("
        xtype:'fieldset'
        ,checkboxToggle:true
        ,title: '".DATE."'
        ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
        ,width: 310
        ,items:[{
            name: 'START_DATE'
            ,hidden: false
            ,width: 150
            ,fieldLabel: '" . START_DATE . "'
            ,xtype: 'datefield'
            ,id: 'START_DATE'
            ,vtype: 'daterange'
            ,endDateField: 'END_DATE'
            ,format: '" . setExtDatafieldFormat() . "'
            ,allowBlank: true
        },{
            name: 'END_DATE'
            ,hidden: false
            ,width: 150
            ,fieldLabel: '" . END_DATE . "'
            ,xtype: 'datefield'
            ,id: 'END_DATE'
            ,vtype: 'daterange'
            ,format: '" . setExtDatafieldFormat() . "'
            ,startDateField: 'START_DATE'
            ,allowBlank: true
        }]
    ");
    
    $OBJECT_FORM->addObjectItems("
        xtype:'fieldset'
        ,checkboxToggle:true
        ,title: '".DETAIL_INFORMATION."'
        ,bodyStyle: 'background:".CamemisPage::userFormBgColor().";padding:10px'
        ,width: 310
        ,items:[
            {".CamemisField::Textfield("NAME", "NAME", NAME, false, false, false, 150)."}
            ,{".CamemisField::Textfield("ITEM_NAME", "ITEM_NAME", ITEM_NAME, false, false, false, 150)."}
            ,{".CamemisField::Textfield("BARCODE", "BARCODE", BARCODE, false, false, false, 150)."}
            ,{".CamemisField::Datefield("DEADLINE_START",RETURNED_START_DATE,false,false,150)."}
            ,{".CamemisField::Datefield("DEADLINE_END",RETURNED_END_DATE,false,false,150)."}
        ]
    ");
    
    
    $OBJECT_FORM->addObjectItems("
        xtype:'fieldset'
        ,checkboxToggle:true
        ,collapsed: false
        ,title: '".PERSONAL_INFORMATION."'
        ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
        ,width: 310
        ,hight:860
        ,items:[
            {".CamemisField::Textfield("CODE_ID", "CODE", CODE_ID, false, false, false, 150)."}
            ,{".CamemisField::Textfield("FIRSTNAME_ID", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
            ,{".CamemisField::Textfield("LASTNAME_ID", "LASTNAME", LASTNAME, false, false, false, 150)."}    
                        
        ]
    ");
    
    $OBJECT_FORM->addTBarItems("
        text: '" . RESET . "'
        ,iconCls:'icon-arrow_undo'
        ,scope:this
        ,handler: this.onReset
    ");
    
    $OBJECT_FORM->addTBarItems("
        text: '" . FIND . "'
        ,formBind:true
        ,disabled: false
        ,iconCls:'icon-magnifier'
        ,scope:this
        ,handler:function(){
            var loadMask = new Ext.LoadMask(Ext.getBody(), {msg:'<b>CAMEMIS " . LOADING . "</b>', msgCls:'x-mask-loading-camemis'});
            loadMask.show(); 
            Ext.Ajax.request({
                url: '/facility/jsonload'
                ,method: 'POST'
                ,params:{cmd: 'jsonAllCheckOutItems',ACTION_TYPE: '1',start:0,limit:100}
                ,form: ".$OBJECT_FORM->ExtgetCmp().".getForm().getEl().dom
                ,success: function(response, options) {
                    jsonData = Ext.util.JSON.decode(response.responseText);
                    Ext.getCmp('".$OBJECT_GRID->getObjectId()."').getStore().loadData(jsonData);
                    loadMask.hide();
                }
            });
        }
    ");
    
    $OBJECT_FORM->addTBarItems("
        id: 'ADD_A_NEW_ITEM_ID'
        ,text: '".ADD_ENTRY."'
        ,iconCls:'icon-application_form_add'
        ,scope:this
        ,handler: function(){
            clickOpenPage('center','', '/facility/showcheckout/?objectId=new&type=2');
            Ext.getCmp('center').setTitle('".ADD_ENTRY."');
            //Ext.getCmp('WEST_ID').collapse();
        }
    ");
    
    $OBJECT_FORM->setBodyStyle("padding:10px;background:".CamemisPage::userFormBgColor().";");
    $OBJECT_FORM->labelAlign = "left";
    $OBJECT_FORM->isObjectDefaultOnLoad = false;
    $OBJECT_FORM->isKeys = true;
    $OBJECT_FORM->renderJS();
    
    $OBJECT_GRID->addReadField("name: 'REFERENCE_NUMBER'");
    $OBJECT_GRID->addReadField("name: 'ID'");
    $OBJECT_GRID->addReadField("name: 'LOCATION'");
    $OBJECT_GRID->addReadField("name: 'QUANTITY'");
    $OBJECT_GRID->addReadField("name: 'ITEM_NAME'");
    $OBJECT_GRID->addReadField("name: 'BARCODE'");
    $OBJECT_GRID->addReadField("name: 'ISSUED_DATE'"); 
    $OBJECT_GRID->addReadField("name: 'ISSUED_BY'");
    $OBJECT_GRID->addReadField("name: 'USER_INVOICE_ID'");    
    $OBJECT_GRID->addReadField("name: 'ITEM_ACTION_TYPE'"); 
    $OBJECT_GRID->addReadField("name: 'PERMANENT'");
    $OBJECT_GRID->addReadField("name: 'STATUS'");
    $OBJECT_GRID->addReadField("name: 'RETURN'");
    
    $OBJECT_GRID->addColumn("header: '<b>".REFERENCE_NUMBER."</b>', align:'left', renderer: cssTextBlue, width:150, sortable: true, dataIndex: 'REFERENCE_NUMBER'");
    $OBJECT_GRID->addColumn("header: '<b>".NAME."</b>', align:'center', renderer: cssText, width:200, sortable: true, dataIndex: 'ITEM_NAME'");
    $OBJECT_GRID->addColumn("header: '<b>".BARCODE."</b>', align:'center', renderer: cssText, width:200, sortable: true, dataIndex: 'BARCODE'");
    $OBJECT_GRID->addColumn("header: '<b>".QUANTITY."</b>', align:'left', renderer: cssText, width:80, sortable: true, dataIndex: 'QUANTITY'");
    $OBJECT_GRID->addColumn("header: '<b>".STATUS."</b>', align:'center', renderer: cssText, width:350, sortable: true, dataIndex: 'STATUS'");
    $OBJECT_GRID->addColumn("header: '<b>".ISSUED_BY."</b>', align:'left', renderer: cssText, width: 150, sortable: true, dataIndex: 'ISSUED_BY'");
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'jsonAllCheckOutItems'
        ,ACTION_TYPE: '1'
    ";
    
    $OBJECT_GRID->isObjectDefaultOnLoad = true;
   // $OBJECT_GRID->isGridEditing = true;                                            
    $OBJECT_GRID->isGroupingView = true;
    $OBJECT_GRID->groupField='REFERENCE_NUMBER';
    //$OBJECT_GRID->isQuickySearch = true;
    $OBJECT_GRID->objectTitle = false;
    $OBJECT_GRID->loadMask = true;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS(); 
    
    ?>
    
    viewport = new Ext.Viewport({
        border: false
        ,layout: 'fit'
        ,items:[{
            border: false
            ,id: 'VIEWPORT_CONTENT'
            ,layout: 'fit'
            ,items:[{
                layout:'border'
                ,border: false
                ,defaults: {
                    collapsible: true
                    ,split: true
                }
                ,items: [{
                    region:'west'
                    ,title: 'Check Out Item'
                    ,id: 'WEST_ID'
                    ,margins: '3 0 3 3'
                    ,cmargins: '3 3 3 3'
                    ,width: 350
                    ,minSize: 350
                    ,maxSize: 350
                    ,layout: 'fit'
                    ,items: [{xtype: '<?= $OBJECT_FORM->getObjectXType(); ?>'}]
                },{
                    collapsible: false
                    ,title:'<?=SEARCH_RESULT;?>'
                    ,id: 'center'
                    ,region:'center'
                    ,margins: '3 3 3 0'
                    ,layout: 'card'
                    ,activeItem: 0
                    ,items:[{xtype: '<?=$OBJECT_GRID->getObjectXtype();?>'}]
                }] 
            }]
        }]
    });
    
    Ext.getCmp('FACILITY_LIST_ID').on('cellclick', function(grid, rowIndex, columnIndex, event) {
        var record = grid.store.getAt(rowIndex);
        var check=false;
        if(record.data.RETURN=="true" || record.data.PERMANENT==1)
        check=true;
        
        var contextMenu = new Ext.menu.Menu({
            items: [{
                text: '<?=SHOW_DETAIL;?>'
                ,iconCls: 'icon-application_form_magnify'
                ,handler: function(){
                    clickOpenPage('center','<?=ADD_ENTRY;?>', '/facility/showcheckout/?objectId='+record.data.USER_INVOICE_ID);    
                }  
            },{
                text: 'Check In Item'
                ,disabled:check
                ,iconCls: 'icon-arrow_down'
                ,handler: function(){       
                    clickOpenPage('center','Check In', '/facility/showcheckin/?objectId=new&parentId='+record.data.USER_INVOICE_ID);    
                }   
            },{
                text: '<?=PRINTER;?>'
                ,iconCls: 'icon-printer'
                ,handler: function(){
                        
                }  
            }]
        });
        event.stopEvent();
        contextMenu.showAt(event.xy); 
        //Ext.getCmp('WEST_ID').collapse();
    });
    //Ext.getCmp('WEST_ID').toggleCollapse();
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>