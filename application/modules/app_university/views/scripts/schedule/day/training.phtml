<?
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisTree.php';
require_once 'models/app_university/AcademicDateDBAccess.php';
require_once 'models/app_university/schedule/CampusScheduleDBAccess.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_GRID = new CamemisGrid("SCHEDULE", "LIST");
$OBJECT_GRID->setLoadUrl("/schedule/jsonload/");
$OBJECT_GRID->setSaveUrl("/schedule/jsonsave/");

$trainingId = isset($_GET["objectId"])?addText($_GET["objectId"]):"";

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
var clickDB = '<?=getCurrentDBDate();?>';
var chooseRoom;
var chooseTeacher;
Ext.onReady(function() {

    function showText(v, p, record, rowIndex){
        return String.format('<div style=\"white-space:normal;font-weight:bold; padding: 20px; height: 35px; background:{1};color:{2};\">{0}</div>'
            ,v
            ,record.data['COLOR']
            ,record.data['COLOR_FONT']
        );
    }
    
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
   
    $OBJECT_TIME_COMBO = new CamemisDynCombo("SCHEDULE","COMBO");
    $OBJECT_TIME_COMBO->setLoadUrl('/schedule/jsonload/');
    $OBJECT_TIME_COMBO->objectTitle = false;
    $OBJECT_TIME_COMBO->allowBlank = "true";
    $OBJECT_TIME_COMBO->varName = "TIME";
    $OBJECT_TIME_COMBO->setLoadParams("cmd: 'campusTimeList' ,academicId: '".$this->academicId."', eventDay: clickDB");
    $OBJECT_TIME_COMBO->renderJS();  
    
    $OBJECT_GRID->addReadField("name: 'ID'");
    $OBJECT_GRID->addReadField("name: 'CLASS'");
    $OBJECT_GRID->addReadField("name: 'SCHEDULE_TYPE'");
    $OBJECT_GRID->addReadField("name: 'EVENT'");
    $OBJECT_GRID->addReadField("name: 'TEACHER'");
    $OBJECT_GRID->addReadField("name: 'ROOM'");
    $OBJECT_GRID->addReadField("name: 'TEACHER_ID'");
    $OBJECT_GRID->addReadField("name: 'ROOM_ID'");
    $OBJECT_GRID->addReadField("name: 'COLOR'");
    $OBJECT_GRID->addReadField("name: 'COLOR_FONT'");
    $OBJECT_GRID->addReadField("name: 'CODE'");
    $OBJECT_GRID->addReadField("name: 'STATUS'");
        
    $OBJECT_GRID->addColumn("
        header: '<b>" . GRADE_CLASS . "</b>'
        , align:'center'
        ,renderer: showText
        , sortable: false
        , dataIndex: 'CLASS'
        , width: 150
    ");
        
    $OBJECT_GRID->addColumn("
        header: '<b>" . EVENT . "</b>'
        ,renderer: showText
        , align:'center'
        , sortable: false
        , dataIndex: 'EVENT'
        , width: 200
    ");
        
    $OBJECT_GRID->addColumn("
        header: '<b>" . TEACHER . "</b>'
        , renderer: showText
        , align:'center'
        , sortable: false
        , dataIndex: 'TEACHER'
        , width: 200
    ");
        
     $OBJECT_GRID->addColumn("
        header: '<b>" . ROOM . "</b>'
        , renderer: showText
        , align:'center'
        , sortable: false
        , dataIndex: 'ROOM'
        , width: 150
    ");
     
    $OBJECT_GRID->addTBarItems("
        tbar.add(['<b>".TIME."</b>',{
            xtype: 'buttongroup'
            ,items:[{
                width: 120
                ,xtype: '".$OBJECT_TIME_COMBO->getObjectXType()."'
            }]
        }]);
    ");
    
    $OBJECT_GRID->addTBarItems("
        tbar.add(['<b>".TEACHER."</b>',{
            xtype: 'buttongroup'
            ,items:[{".CamemisField::comboTutors(false,170)."}]
        }]);
    ");
    
    $OBJECT_GRID->addTBarItems("
        tbar.add(['<b>".ROOM."</b>',{
            xtype: 'buttongroup'
            ,items:[{".CamemisField::ComboRoom("ROOM_ID", false, false, false,120)."}]
        }]);
    ");
    
    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            id: 'MORE_INFORMATION'
            ,text: '" . MORE_INFORMATION . "'
            ,iconCls:'icon-list-items'
            ,menu:[{  
                id: 'TEACHER_SCHEDULE_DETAIL'
                ,disabled: true
                ,text: '" . TEACHER_SCHEDULE_DETAIL . "'
                ,iconCls:'icon-application_form_magnify'
                ,handler: function(){
                    var win = new Ext.Window({
                        title: '".TEACHER_SCHEDULE_DETAIL."'
                        ,id: 'OPEN_WINDOW'
                        ,closable:true
                        ,width: percentWidth(90)
                        ,height: percentHeight(75)
                        ,modal: true
                        ,layout:'fit'
                        ,border: false
                        ,items:[new Ext.ux.IFrameComponent({ id: 'OPEN_WINDOW', url:'/schedule/assignedtoteacher/?chooseId=' + chooseTeacher})]
                    });
                    win.show();
                }
            },{
                id: 'ROOM_SCHEDULE_DETAIL'
                ,disabled: true
                ,text: '" . ROOM_SCHEDULE_DETAIL . "'
                ,iconCls:'icon-application_form_magnify'
                ,handler: function(){
                    var win = new Ext.Window({
                        title: '".ROOM_SCHEDULE_DETAIL."'
                        ,id: 'OPEN_WINDOW'
                        ,closable:true
                        ,width: percentWidth(90)
                        ,height: percentHeight(75)
                        ,modal: true
                        ,layout:'fit'
                        ,border: false
                        ,items:[new Ext.ux.IFrameComponent({ id: 'OPEN_WINDOW', url:'/schedule/assignedtoroom/?chooseId=' + chooseRoom})]
                    });
                    win.show();
                }
            }]
        }]);
    ");
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,trainingId: '".$trainingId."'
        ,eventDay: clickDB
        ,target:'TRAINING'
        ,cmd: 'campusEventList'
    ";
    
    $OBJECT_GRID->isPagingToolbar = false;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();
    ?>

    var dp = new Ext.DatePicker({        
        listeners: {
            'select': function(date_picker, date){
                var clickTitle = date.getDate() + '.' + (parseInt(date.getMonth()) + 1) + '.' + date.getFullYear();
                clickDB = date.getFullYear() + '-' + (parseInt(date.getMonth()) + 1) + '-' + date.getDate();
                Ext.getCmp('center').setTitle(clickTitle);
                //Ext.getCmp('center').update("<font size = '8'>"+clickDB+"</font>");
                Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.baseParams = {
                    start:0
                    ,limit:100
                    ,trainingId: '<?=$trainingId;?>'                                
                    ,eventDay: clickDB
                    ,target:'TRAINING'
                    ,cmd: 'campusEventList'  
                    ,forTime: Ext.getCmp('<?=$OBJECT_TIME_COMBO->getObjectId()?>').getValue()
                };
                if (Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>')) Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.reload();
                Ext.get(document.body).unmask();             
            }
        }
    });

    var teacherId;
    var roomId;
    var forTime;
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            }
            ,items: [{
                region:'west'
                ,title:'&nbsp;'
                ,margins: '3 0 3 3'
                ,cmargins: '3 3 3 3'
                ,width: 220
                ,minSize: 220
                ,maxSize: 220
                ,autoScroll: true
                ,defaults: {
                    style: {margin: '10px'}
                }
                ,items:[{
                    xtype: 'panel'
                    ,title: '&nbsp;'
                    ,bodyStyle: 'padding:10px'
                    ,autoHeight: true
                    ,items: [dp]  
                }]
            },{
               	collapsible: false
               	,title: '<?=showCurrentDBDate();?>'
                ,id: 'center'
                ,region:'center'
                ,margins: '3 3 3 0'
                ,layout: 'fit'
                ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
            }]
        }]
    });
    
    var time = Ext.getCmp('<?=$OBJECT_TIME_COMBO->getObjectId()?>');
    var teacher = Ext.getCmp('TEACHER_ID');
    var room = Ext.getCmp('ROOM_ID');
    
    if (time){
        time.on('select', function() {
            forTime = time.getValue();
            Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.baseParams = {
                start:0
                ,limit:100
                ,trainingId: '<?=$trainingId;?>'                                  
                ,eventDay: clickDB
                ,roomId: roomId
                ,target:'TRAINING'
                ,teacherId: teacherId
                ,cmd: 'campusEventList'
                ,forTime: forTime
            };
            Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.reload();
        });
     }

     if (teacher){
        teacher.on('select', function() {
            teacherId = teacher.getValue();
            Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.baseParams = {
                start:0
                ,limit:100
                ,trainingId: '<?=$trainingId;?>'                            
                ,eventDay: clickDB
                ,target:'TRAINING'
                ,cmd: 'campusEventList'
                ,roomId: roomId
                ,teacherId: teacherId
                ,forTime: forTime
            };
            Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.reload();
        });
    }
    
    if (room){
        room.on('select', function() {
            roomId = room.getValue();
            Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.baseParams = {
                start:0
                ,limit:100
                ,trainingId: '<?=$trainingId;?>'                                 
                ,eventDay: clickDB
                ,target:'TRAINING'
                ,cmd: 'campusEventList'
                ,roomId: roomId
                ,teacherId: teacherId
                ,forTime: forTime
            };
            Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.reload();
        });
    }
    Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').on('cellclick', function(grid, rowIndex, columnIndex, event) {
        var record = grid.store.getAt(rowIndex);
        switch(columnIndex){
            case 1:
            case 2:
                Ext.getCmp('TEACHER_SCHEDULE_DETAIL').disable();
                Ext.getCmp('ROOM_SCHEDULE_DETAIL').disable();
                break;
            case 3:
                chooseTeacher = record.data.TEACHER_ID;
                Ext.fly(Ext.getCmp('MORE_INFORMATION').getEl()).frame('ff0000');   
                Ext.getCmp('TEACHER_SCHEDULE_DETAIL').enable();
                Ext.getCmp('ROOM_SCHEDULE_DETAIL').disable();
                break;
            case 4:
                chooseRoom = record.data.ROOM_ID;
                Ext.fly(Ext.getCmp('MORE_INFORMATION').getEl()).frame('ff0000');   
                Ext.getCmp('ROOM_SCHEDULE_DETAIL').enable();
                Ext.getCmp('TEACHER_SCHEDULE_DETAIL').disable();
                break;
        }
    });
});

</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>