<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'models/app_university/PersonStatusDBAccess.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_FORM = new CamemisForm("STUDENT");
$OBJECT_FORM->setLoadUrl('/student/jsonload/');
$OBJECT_FORM->setSaveUrl('/student/jsonsave/');

$OBJECT_GRID = new CamemisGrid("STUDENT", "LIST");
$OBJECT_GRID->setLoadUrl("/student/jsonload/");
$OBJECT_GRID->setSaveUrl("/student/jsonsave/");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<style>
    span.spanText {
        font-weight:normal;
        color:#000; 
        white-space:normal;
    }
    span.spanStatus {
        font-weight:normal;
        color:#FFF; 
        white-space:normal;
    }
    
   
</style>
<script>
    Ext.apply(Ext.form.VTypes, {
        daterange : function(val, field) {
            var date = field.parseDate(val);
            if(!date){
                return false;
            }
            if (field.startDateField) {
                var start = Ext.getCmp(field.startDateField);
                if (!start.maxValue || (date.getTime() !== start.maxValue.getTime())) {
                    start.setMaxValue(date);
                    start.validate();
                }
            }
            else if (field.endDateField) {
                var end = Ext.getCmp(field.endDateField);
                if (!end.minValue || (date.getTime() !== end.minValue.getTime())) {
                    end.setMinValue(date);
                    end.validate();
                }
            }
            return true;
        }
    });
    
    Ext.onReady(function() {
         
        function filertByStatus(type){
            Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.baseParams = {
                start:0
                ,limit:100
                ,studentstatusType:type
                ,cmd: 'jsonSearchStudentStatus'
            };
            Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.load();
        }
        function cssStatus(v, p, record){
            return String.format('<div style=\"font-weight:bold;padding:4px;background:{1};color:{2};\">{0}</div>'
                ,v
                ,record.data['BG_COLOR']
                ,record.data['BG_COLOR_FONT']
            );
        }
        
        <?
        /**
        * Extjs: s.gif
        */
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
        
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,checkboxToggle:true
            ,title: '".DATE."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 310
            ,items:[{
                name: 'START_DATE'
                ,hidden: false
                ,width: 150
                ,fieldLabel: '" . START_DATE . "'
                ,xtype: 'datefield'
                ,id: 'START_DATE'
                ,vtype: 'daterange'
                ,endDateField: 'END_DATE'
                ,format: '" . setExtDatafieldFormat() . "'
                ,allowBlank: true
            },{
                name: 'END_DATE'
                ,hidden: false
                ,width: 150
                ,fieldLabel: '" . END_DATE . "'
                ,xtype: 'datefield'
                ,id: 'END_DATE'
                ,vtype: 'daterange'
                ,format: '" . setExtDatafieldFormat() . "'
                ,startDateField: 'START_DATE'
                ,allowBlank: true
            }]
        ");
        
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,checkboxToggle:true
            ,title: '".PERSONAL_INFORMATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 310
            ,items:[
                {".CamemisField::Textfield("STUDENT_SCHOOL_ID", "STUDENT_SCHOOL_ID", STUDENT_SCHOOL_ID, false, false, false, 150)."}
                ,{".CamemisField::Textfield("CODE", "CODE", CODE_ID, false, false, false, 150)."}
                ,{".CamemisField::Textfield("LASTNAME", "LASTNAME", LASTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("FIRSTNAME", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
                ,{".CamemisField::ComboGender(GENDER, false, false, 150)."}
                ,{".CamemisField::Combo("STUDENT_STATUS", STUDENT_STATUS, PersonStatusDBAccess::allPersonStatusComboData('STUDENT',true),false, false, 150)."}
            ]
        ");
        
        $OBJECT_FORM->addTBarItems("
            text: '".RESET."'
            ,iconCls:'icon-arrow_undo'
            ,scope:this
            ,handler: function(){".CamemisPage::setRequestURI()."}
        ");
        
        $STUDENT_STATUS_READ_RIGHT = UserAuth::getACLValue("STUDENT_STATUS_READ_RIGHT")?"false":"true";
        $OBJECT_FORM->addTBarItems("
             text: '".FIND."'
            ,formBind:true
            ,iconCls:'icon-magnifier'
            ,scope:this
            ,handler: function(){
                var loadMask = new Ext.LoadMask(Ext.getBody(), {msg:'<b>CAMEMIS " . LOADING . "</b>', msgCls:'x-mask-loading-camemis'});
                loadMask.show(); 
                Ext.Ajax.request({
                    url: '/student/jsonload'
                    ,method: 'POST'
                    ,params:{cmd: 'jsonSearchStudentStatus',start:0,limit:100}
                    ,form: ".$OBJECT_FORM->ExtgetCmp().".getForm().getEl().dom
                    ,success: function(response, options) {
                        jsonData = Ext.util.JSON.decode(response.responseText);
                        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').getStore().loadData(jsonData);
                        loadMask.hide();
                    }
                });   
            }
        ");
        
        $OBJECT_FORM->setBodyStyle("padding:10px;background:".CamemisPage::userFormBgColor().";");
        $OBJECT_FORM->labelAlign = "left";
        $OBJECT_FORM->isObjectDefaultOnLoad = false;
        $OBJECT_FORM->isKeys = true;
        $OBJECT_FORM->renderJS();
        ////////////////////////////////////////////////////////////////////////
        $OBJECT_GRID->addCellRenderer("
            function renderTextBold(v, p, record, rowIndex){
                var str = '<span style=\"font-weight:bold;color:#061f83;white-space:normal;\">' + v + '</span>';
                return str;
            }
        ");
        
        $OBJECT_GRID->addCellRenderer("
            function renderText(v, p, record, rowIndex){
                var str = '<span style=\"font-weight:normal;color:#555;white-space:normal;\">' + v + '</span>';
                return str;
            }
        ");
        
        $OBJECT_GRID->addReadField("name: 'STUDENT', type: 'string'");
        $OBJECT_GRID->addReadField("name: 'CODE'");
        $OBJECT_GRID->addReadField("name: 'STUDENT_ID'");
        $OBJECT_GRID->addReadField("name: 'STUDENT_STATUS'");
        $OBJECT_GRID->addReadField("name: 'START_DATE'");
        $OBJECT_GRID->addReadField("name: 'END_DATE'");
        $OBJECT_GRID->addReadField("name: 'BG_COLOR'");
        $OBJECT_GRID->addReadField("name: 'BG_COLOR_FONT'");
        $OBJECT_GRID->addReadField("name: 'STATUS_KEY'");
        $OBJECT_GRID->addReadField("name: 'STATUS'");
        $OBJECT_GRID->addReadField("name: 'CURRENT_ACADEMIC'");
        $OBJECT_GRID->addReadField("name: 'CURRENT_SCHOOLYEAR'");
        $OBJECT_GRID->addReadField("name: 'CURRENT_TRAINING_NAME'");
        $OBJECT_GRID->addReadField("name: 'DESCRIPTION'");
        $OBJECT_GRID->addReadField("name: 'ID'");
        $OBJECT_GRID->addReadField("name: 'PHONE'");
        $OBJECT_GRID->addReadField("name: 'EMAIL'");
        
        $OBJECT_GRID->addColumn("header: '<b>".STUDENT_STATUS."</b>', align:'center',width:150, renderer:renderText, sortable: true, dataIndex: 'STATUS_KEY'");
        $OBJECT_GRID->addColumn("header: '<b>".FULL_NAME."</b>', width: 160, renderer: renderTextBold, sortable: true, dataIndex: 'STUDENT'");
        $OBJECT_GRID->addColumn("header: '<b>".FROM_DATE."</b>', align:'center', width: 120, renderer: renderText, sortable: true, dataIndex: 'START_DATE'");
        $OBJECT_GRID->addColumn("header: '<b>".TO_DATE."</b>', align:'center', width: 120, renderer: renderText, sortable: true, dataIndex: 'END_DATE'");
        $OBJECT_GRID->addColumn("header: '<b>".CURRENT_SCHOOL_YEAR."</b>', width: 150,renderer: renderText, sortable: true, dataIndex: 'CURRENT_SCHOOLYEAR'");
        $OBJECT_GRID->addColumn("header: '<b>".CURRENT_CLASS."</b>', width: 150,renderer: renderText, sortable: true, dataIndex: 'CURRENT_ACADEMIC'");
        $OBJECT_GRID->addColumn("header: '<b>".CURRENT_COURSE."</b>', width: 150,sortable: true, dataIndex: 'CURRENT_TRAINING_NAME'");
        $OBJECT_GRID->addColumn("header: '<b>".PHONE."</b>', width: 150, renderer: renderText, sortable: false, dataIndex: 'PHONE'");
        $OBJECT_GRID->addColumn("header: '<b>".EMAIL."</b>', width: 150, renderer: renderText, sortable: false, dataIndex: 'EMAIL'");
        
        $OBJECT_GRID->isObjectDefaultOnLoad = true;
        $OBJECT_GRID->baseParams = "
            start:0
            ,limit:100
            ,cmd: 'jsonSearchStudentStatus'
        ";
        
        $OBJECT_GRID->addTBarItems("
            tbar.add('->');
        ");
        //
        $OBJECT_GRID->isGroupingView = true;
        $OBJECT_GRID->groupField = "STUDENT";
        $OBJECT_GRID->isQuickySearch = true;
        $OBJECT_GRID->forceFit = "false";
        $OBJECT_GRID->renderJS();
        ?>
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout: 'fit'
                ,border: false
                ,id: 'CONTENT'
                ,items:[{
                    layout:'border'
                    ,border: false
                    ,defaults: {
                        collapsible: true
                        ,split: true
                    }
                    ,items: [{
                        title: '<?=ATTENDANCE_SEARCH;?>'
                        ,region:'west'
                        ,id: 'WEST_ID'
                        ,margins: '3 0 3 3'
                        ,cmargins: '3 3 3 3'
                        ,width: 350
                        ,minSize: 350
                        ,maxSize: 350
                        ,items: [{xtype: '<?=$OBJECT_FORM->getObjectXType();?>'}]
                    },{
                        title: ''
                        ,collapsible: false
                        ,id: 'center'
                        ,region:'center'
                        ,layout: 'card'
                        ,activeItem: 0
                        ,margins: '3 3 3 0'
                        ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
                    }]
                }]
            }]
        });
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>