<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 20.20.2012
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once 'clients/CamemisViewport.php';
require_once setUserLoacalization();

////////////////////////////////////////////////////////////////////////////////
StudentDBAccess::setCurrentStudentAcademic($this->objectId, false);
////////////////////////////////////////////////////////////////////////////////

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_TREE = new CamemisTree("STUDENT_MONITOR", "LIST");
$OBJECT_TREE->setURL("/student/jsontree/");
$OBJECT_TREE->setSaveUrl("/student/jsonsave/");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$STUDENT_STATUS_DATA = StudentStatusDBAccess::getCurrentStudentStatus($this->objectId);
$STATUS_SHORT = isset($STUDENT_STATUS_DATA["SHORT"])?$STUDENT_STATUS_DATA["SHORT"]:"";
$BG_COLOR = isset($STUDENT_STATUS_DATA["COLOR"])?$STUDENT_STATUS_DATA["COLOR"]:"";
$BG_COLOR_FONT = isset($STUDENT_STATUS_DATA["COLOR_FONT"])?$STUDENT_STATUS_DATA["COLOR_FONT"]:"";

$target = isset($_GET["target"])?addText($_GET["target"]):"";

?>
<script>
var roleId;
Ext.onReady(function() {
    studentComboStore = new Ext.data.Store({
        proxy: new Ext.data.HttpProxy({url: '/student/jsonload/'}),
        methode:'POST',
        baseParams:{cmd: 'searchStudent'}
        ,reader:new Ext.data.JsonReader({
            id:'NAME'
            ,totalProperty:'totalCount'
            ,root:'rows'
            ,fields:[
                {name: 'ID'}
                ,{name: 'CODE'}
                ,{name: 'STUDENT'}
            ]
        })
    });
    var studentListCombo = Ext.extend(Ext.form.ComboBox, {
        initComponent: function(){
            Ext.apply(this, {
                store: studentComboStore
                ,minChars:0
                ,fieldLabel: ''
                ,triggerAction:'all'
                ,valueField:'ID'
                ,targetField:'STUDENT'
                ,width:250
                ,minListWidth:250
                ,emptyText:'[---]'
                ,loadingText: 'Searching...'
                ,pageSize:100
                ,resizable:true
                ,forceSelection:true
                ,enableKeyEvents:true
                ,tpl:'<tpl for="."><div class="search-item">({CODE}) {STUDENT}</div></tpl>'
                ,name: 'STUDENT'
                ,hiddenName:'STUDENT'
                ,itemSelector: 'div.search-item'
                ,listeners: {
                    select: function(combo) {
                        if (combo.getValue()) window.location='<?=$_SERVER["REQUEST_URI"]?>&objectId=' + combo.getValue();
                    }
                }
            });
            studentListCombo.superclass.initComponent.apply(this, arguments);
        }
        ,onRender:function() {
            studentListCombo.superclass.onRender.apply(this, arguments);
            this.store.load();
        }
    });
    Ext.reg('STUDENT_LIST_COMBO', studentListCombo);
    <?
    /**
    * Extjs: s.gif
    */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

    ////////////////////////////////////////////////////////////////////////////
    $TREE_ITEMS = "";
    $TREE_ITEMS .= "{";
        $TREE_ITEMS .= "text:'".ADDITIONAL_INFORMATION."'";
        $TREE_ITEMS .= ",iconCls: 'icon-component'";
        $TREE_ITEMS .= ",leaf: true";
        $TREE_ITEMS .= ",cls:'nodeTextBlue'";
        $TREE_ITEMS .= ",url:'/student/description/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&isCancel=true")."'";
        $TREE_ITEMS .= ",isClick:true";
    $TREE_ITEMS .= "}";
    
    //EDUCATION BACKGROUND
    ////////////////////////////////////////////////////////////////////////////
    $TREE_ITEMS .= ",{";
        $TREE_ITEMS .= "text: '".EDUCATION_BACKGROUND."'";
        $TREE_ITEMS .= ",cls:'nodeTextBold'";
        $TREE_ITEMS .= ",iconCls: 'icon-folder_magnify'";
        $TREE_ITEMS .= ",leaf: false";
        $TREE_ITEMS .= ",expanded: true";
        $TREE_ITEMS .= ",url:'/student/personinfos/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&target=EDUBACK&userType=STUDENT&isCancel=true")."'";
        $TREE_ITEMS .= ",isClick:true";
        $TREE_ITEMS .= ",children: [";
            $TREE_ITEMS .= "{";
                $TREE_ITEMS .= "text: '".DETAIL_INFORMATION."'";
                $TREE_ITEMS .= ",iconCls: 'icon-component_yellow'";
                $TREE_ITEMS .= ",leaf: true";
                $TREE_ITEMS .= ",cls:'nodeTextBlue'";
                $TREE_ITEMS .= ",url:'/dataset/ckeditor/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&field=BACKGROUND_INFO&object=student&isCancel=true")."'";
                $TREE_ITEMS .= ",isClick:true";
            $TREE_ITEMS .= "}";
            $TREE_ITEMS .= ",{";
                $TREE_ITEMS .= "text: '".ATTACHMENT."'";
                $TREE_ITEMS .= ",iconCls: 'icon-component_yellow'";
                $TREE_ITEMS .= ",leaf: true";
                $TREE_ITEMS .= ",cls:'nodeTextBlue'";
                $TREE_ITEMS .= ",url:'/dataset/attachment/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&template=EDUBACK&isCancel=true")."'";
                $TREE_ITEMS .= ",isClick:true";
            $TREE_ITEMS .= "}";
        $TREE_ITEMS .= "]";
    $TREE_ITEMS .= "}";
    
    //PARENT_INFORMATION
    ////////////////////////////////////////////////////////////////////////////
    $TREE_ITEMS .= ",{";
        $TREE_ITEMS .= "text: '".PARENT_INFORMATION."'";
        $TREE_ITEMS .= ",cls:'nodeTextBold'";
        $TREE_ITEMS .= ",iconCls: 'icon-folder_magnify'";
        $TREE_ITEMS .= ",leaf: false";
        $TREE_ITEMS .= ",expanded: true";
        $TREE_ITEMS .= ",url:'/student/personinfos/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&target=PARINFO&userType=STUDENT&isCancel=true")."'";
        $TREE_ITEMS .= ",isClick:true";
        $TREE_ITEMS .= ",children: [";
            $TREE_ITEMS .= "{";
                $TREE_ITEMS .= "text: '".DETAIL_INFORMATION."'";
                $TREE_ITEMS .= ",iconCls: 'icon-component_yellow'";
                $TREE_ITEMS .= ",leaf: true";
                $TREE_ITEMS .= ",cls:'nodeTextBlue'";
                $TREE_ITEMS .= ",url:'/dataset/ckeditor/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&field=PARENT_INFO&object=student&isCancel=true")."'";
                $TREE_ITEMS .= ",isClick:true";
            $TREE_ITEMS .= "}";
            $TREE_ITEMS .= ",{";
                $TREE_ITEMS .= "text: '".ATTACHMENT."'";
                $TREE_ITEMS .= ",iconCls: 'icon-component_yellow'";
                $TREE_ITEMS .= ",leaf: true";
                $TREE_ITEMS .= ",cls:'nodeTextBlue'";
                $TREE_ITEMS .= ",url:'/dataset/attachment/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&template=PARINFO&isCancel=true")."'";
                $TREE_ITEMS .= ",isClick:true";
            $TREE_ITEMS .= "}";
        $TREE_ITEMS .= "]";
    $TREE_ITEMS .= "}";

    //PRE_REQUIREMENTS
    ////////////////////////////////////////////////////////////////////////////
    $TREE_ITEMS .= ",{";
        $TREE_ITEMS .= "text: '".PRE_REQUIREMENTS."'";
        $TREE_ITEMS .= ",cls:'nodeTextBold'";
        $TREE_ITEMS .= ",iconCls: 'icon-folder_magnify'";
        $TREE_ITEMS .= ",leaf: false";
        $TREE_ITEMS .= ",expanded: true";
        $TREE_ITEMS .= ",url:'/student/prerequirements/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&isCancel=true")."'";
        $TREE_ITEMS .= ",isClick:true";
        $TREE_ITEMS .= ",children: [";
            $TREE_ITEMS .= "{";
                $TREE_ITEMS .= "text: '".DETAIL_INFORMATION."'";
                $TREE_ITEMS .= ",iconCls: 'icon-component_yellow'";
                $TREE_ITEMS .= ",leaf: true";
                $TREE_ITEMS .= ",cls:'nodeTextBlue'";
                $TREE_ITEMS .= ",url:'/dataset/ckeditor/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&field=PRE_REQUIREMENTS&object=student&isCancel=true")."'";
                $TREE_ITEMS .= ",isClick:true";
            $TREE_ITEMS .= "}";
            $TREE_ITEMS .= ",{";
                $TREE_ITEMS .= "text: '".ATTACHMENT."'";
                $TREE_ITEMS .= ",iconCls: 'icon-component_yellow'";
                $TREE_ITEMS .= ",leaf: true";
                $TREE_ITEMS .= ",cls:'nodeTextBlue'";
                $TREE_ITEMS .= ",url:'/dataset/attachment/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&template=PRE_REQUIREMENTS&isCancel=true")."'";
                $TREE_ITEMS .= ",isClick:true";
            $TREE_ITEMS .= "}";
        $TREE_ITEMS .= "]";
    $TREE_ITEMS .= "}";
    
    //ACADEMIC HISTORY...
    ////////////////////////////////////////////////////////////////////////////
    $ACADEMIC_HISTORY_ITEM = array();

    $GENERAL_EDUCATION = "{
       text: '".ACADEMIC_HISTORY."'
        ,id: 'HISTORY_GENERAL_EDUCATION'
        ,iconCls: 'icon-component_red'
        ,clickHistory:'1'
        ,isClick:true
        ,cls:'nodeTextBlue'
        ,leaf:true
    }";

    $ACADEMIC_HISTORY_ITEM[]=$GENERAL_EDUCATION;
    $CHOOSE_ACADEMIC_HISTORY_ITEM = implode(",", $ACADEMIC_HISTORY_ITEM);

    ////////////////////////////////////////////////////////////////////////////
    //DISPLAY TREE...
    ////////////////////////////////////////////////////////////////////////////
    $PERSON_ITEMS = "";
    $PERSON_ITEMS .= "[";
        $PERSON_ITEMS .= "{";
            $PERSON_ITEMS .= "text: '".PERSONAL_INFORMATION."'";
            $PERSON_ITEMS .= ",iconCls: 'icon-folder_magnify'";
            $PERSON_ITEMS .= ",cls:'nodeTextBold'";
            $PERSON_ITEMS .= ",expanded: true";
            $PERSON_ITEMS .= ",isClick:true";
            $PERSON_ITEMS .= ",url:'/student/student/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&target=DETAIL")."'";
            $PERSON_ITEMS .= ",children: [".$TREE_ITEMS."]";
        $PERSON_ITEMS .= "}";

        if(UserAuth::getUserType() == "ADMIN" || UserAuth::getUserType() == "SUPERADMIN"){
            $PERSON_ITEMS .= ",{";
                $PERSON_ITEMS .= "text:'".ACADEMIC_HISTORY."'";
                $PERSON_ITEMS .= ",iconCls:'icon-folder_magnify'";
                $PERSON_ITEMS .= ",cls:'nodeTextBold'";
                $PERSON_ITEMS .= ",expanded:true";
                $PERSON_ITEMS .= ",children:[".$CHOOSE_ACADEMIC_HISTORY_ITEM."]";
            $PERSON_ITEMS .= "}";
        }

        if(UserAuth::getUserType() == "ADMIN" || UserAuth::getUserType() == "SUPERADMIN"){
            $PERSON_ITEMS .= ",{";
                $PERSON_ITEMS .= "text:'".STUDENT_STATUS."'";
                $PERSON_ITEMS .= ",iconCls:'icon-component_red'";
                $PERSON_ITEMS .= ",cls:'nodeTextBold'";
                $PERSON_ITEMS .= ",leaf: true";
                $PERSON_ITEMS .= ",url:'/student/statusbystudent/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&target=general")."'";
                $PERSON_ITEMS .= ",isClick:true";
            $PERSON_ITEMS .= "}";
        }
    $PERSON_ITEMS .= "]";

    if($target)
    $OBJECT_TREE->addTBarItems("
        text: '".CANCEL."'
        ,id: 'CANCEL_ID'
        ,formBind:true
        ,iconCls:'icon-cancel'
        ,scope:this
        ,handler: function(){
            Ext.Ajax.request({
                url:'/student/jsonload/'
                ,method: 'POST'
                ,params: {cmd: 'jsonLoadLastStudentStatus',objectId:'".$this->objectId."'}
                ,success: function(response, options) {
                    var jsonData = Ext.util.JSON.decode(response.responseText);
                    if(window.parent.Ext.getCmp('STUDENT_STUDENT_GRID_ID')){
                        var sm = window.parent.Ext.getCmp('STUDENT_STUDENT_GRID_ID').getSelectionModel();
                        if (typeof sm.getSelected() == 'function') {
                            var record = sm.getSelected();
                            record.set('STATUS_KEY',jsonData.data.SHORT);
                            record.set('BG_COLOR',jsonData.data.COLOR);
                            record.set('BG_COLOR_FONT',jsonData.data.COLOR_FONT);
                            record.commit();
                        }
                    }
                    window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);
                }
                ,failure: function(response, options) {}
            });
        }
    ");

    $OBJECT_TREE->backgroundColor = "#F9F9F9";
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());
    
    //@CHHE Vathana
    $OBJECT_TREE->addTBarItems("
                    text: '" . EXPORT_TO_EXCEL . "'
                    ,id: 'EXPORT_TO_EXCEL'
                    ,iconCls:'icon-page_excel'
                    ,handler: function(){
                        Ext.MessageBox.show({
                            msg: '".SAVING_YOUR_DATA_PLEASE_WAIT."',
                            progressText: 'Saving...',
                            width:300,
                            wait:true,
                            waitConfig: {interval:200},
                            icon:'ext-mb-download'
                        });
                        Ext.Ajax.request({
                            url: '/export/jsonexcel/'
                            ,method: 'POST'
                            ,params:{
                                cmd: 'studentpersonalinfo' 
                                ,objectId:'".$this->objectId."'
                                                                                    
                            }
                            ,success: function(response, options) {
                                Ext.MessageBox.hide();
                                window.location='/export/openstudentpersonalinfolist/'
                            }
                        });
                    }

            ");
            
    $OBJECT_TREE->isAsyncTreeNode = true;
    $OBJECT_TREE->setAsyncTreeNode($PERSON_ITEMS);
    $OBJECT_TREE->renderJS();

    $viewport = "";
    $viewport .= "viewport = new Ext.Viewport({";
        $viewport .= "layout: 'fit'";
        $viewport .= ",border: false";
        $viewport .= ",items:[{";
            $viewport .= "layout:'border'";
            $viewport .= ",border: false";
            $viewport .= ",defaults: {";
                $viewport .= "collapsible: true";
                $viewport .= ",split: true";
            $viewport .= "}";
            
//            switch(UserAuth::getUserType()){
//                case "SUPERADMIN":
//                case "ADMIN":
//                if($this->noSudentComboLsit){
//                    $viewport .= ",tbar:['->',{";
//                        $viewport .= "xtype: 'buttongroup',items:[{xtype:'STUDENT_LIST_COMBO'}]";
//                    $viewport .= "}]";
//                    break;
//                }
//            }
            
            $viewport .= ",items: [{";
                $viewport .= "region:'west'";
                $viewport .= ",bodyStyle: 'background:#EEE'";
                $viewport .= ",title:'".STUDENT."'";
                $viewport .= ",id: 'MONITOR_ID'";
                $viewport .= ",margins: '3 0 3 3'";
                $viewport .= ",cmargins: '3 3 3 3'";
                $viewport .= ",width:260";
                $viewport .= ",minSize:260";
                $viewport .= ",maxSize:260";
                $viewport .= ",layout: 'fit'";
                $viewport .= ",items:[{xtype: '".$OBJECT_TREE->getObjectXtype()."'}]";
            $viewport .= "},{";
               $viewport .= "collapsible: false";
               $viewport .= ",id: 'content'";
               $viewport .= ",region:'center'";
               $viewport .= ",margins: '3 3 3 0'";
               $viewport .= ",layout: 'card'";
               $viewport .= ",activeItem: 0";
               $viewport .= ",items: [new Ext.ux.IFrameComponent({ id: 'OPEN_IFRAME', url: '/student/student/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."&target=DETAIL")."'})]";
            $viewport .= "}]";
        $viewport .= "}]";
    $viewport .= "});";
    $viewport .= "var myTree =".$OBJECT_TREE->ExtgetCmp().";";
    $viewport .= "myTree.on('click', function(node, e){";
        $viewport .= "if(node.attributes.isClick){";
            $viewport .= "switch(node.attributes.clickHistory){";
                $viewport .= "case '1':";
                    $viewport .= "window.parent.parent.openWinMax('".STUDENT_ENROLLMENT."','/main/showstudentmain/?camIds=".$this->urlEncryp->encryptedGet("objectId=".$this->objectId."")."');";
                    $viewport .= "break;";
                $viewport .= "default:";
                    $viewport .= "clickOpenPage('content',node.text, node.attributes.url);";
                $viewport .= "break;";
            $viewport .= "}";
        $viewport .= "}";
    $viewport .= "});";
    
    echo $viewport;
    ?>
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>