<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once 'models/app_university/subject/GradeSubjectDBAccess.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_GRID = new CamemisGrid("EVALUATION", "LIST");
$OBJECT_GRID->setLoadUrl("/evaluation/jsonload/");
$OBJECT_GRID->setSaveUrl("/evaluation/jsonsave/");

$CHOOSE_TERM = isset($_GET["term"])?$_GET["term"]:"";

switch(Zend_Registry::get('ADDITIONAL_ROLE')){
    case 1:
        $USER_TYPE = "INSTRUCTOR";
        break;
    case 2:
        $USER_TYPE = "TEACHER";
        break;
    default:
        $USER_TYPE = UserAuth::getUserType();
        break;
}

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
var behaviorValue;
Ext.onReady(function() {

    function cssDefault(value, metadata, record){
        var name = record.data.STUDENT;
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:normal; color:#000; padding: 5px; height: 15px; background:#fff;">' + value + '</div>';
    }
    
    function cssC(value, metadata, record){
        var name = record.data.STUDENT;
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:normal; color:#000; padding: 5px; height: 15px; background:#EEE;">' + value + '</div>';
    }
    
    function cssA(value, metadata, record){
        var name = record.data.STUDENT;
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:normal; color:#000; padding: 5px; height: 15px; background:#4ebbff;">' + value + '</div>';
    }
    
    function cssB(value, metadata, record){
        var name = record.data.STUDENT;
        metadata.attr = 'ext:qtip="' + name + '"';
        return '<div style="font-weight:normal; color:#000; padding: 5px; height: 15px; background:#FFE5A6;">' + value + '</div>';
    }
    
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $store= "[
        ['1','".EXCELLENT."']
        ,['2','".GOOD."']
        ,['3','".AVERAGE."']
        ,['4','".SATISFACTORY."']
    ]";
    $editor = "
        new Ext.form.ComboBox({
            typeAhead: true
            ,editable:false
            ,triggerAction: 'all'
            ,store: ".$store."
            ,listClass: 'x-combo-list-small'
            ,listeners:{
                select:function(combo){
                    switch(combo.getValue()){
                        case '1':
                            behaviorValue = 'EXCELLENT';
                            combo.setValue('".EXCELLENT."');
                        break;
                        case '2':
                            behaviorValue = 'GOOD';
                            combo.setValue('".GOOD."');
                        break;
                        case '3':
                            behaviorValue = 'AVERAGE';
                            combo.setValue('".AVERAGE."');
                        break;
                        case '4':
                            behaviorValue = 'SATISFACTORY';
                            combo.setValue('".SATISFACTORY."');
                        break;
                    }
                }
            }
        })
    ";
    
    /////////////////////////////////////////////////
    $OBJECT_GRID->addReadField("name: 'CODE'");
    $OBJECT_GRID->addReadField("name: 'STUDENT'");
    $OBJECT_GRID->addReadField("name: 'YEAR_NUMBER_GPA'");
    
    $OBJECT_GRID->addReadField("name: 'FIRST_BEHAVIOR'");
    $OBJECT_GRID->addReadField("name: 'SECOND_BEHAVIOR'");
    $OBJECT_GRID->addReadField("name: 'YEAR_BEHAVIOR'");
    
    $OBJECT_GRID->addReadField("name: 'FIRST_ASSESSMENT'");
    $OBJECT_GRID->addReadField("name: 'SECOND_ASSESSMENT'");
    $OBJECT_GRID->addReadField("name: 'YEAR_ASSESSMENT'");
    
    $OBJECT_GRID->addReadField("name: 'FIRST_AWARD'");
    $OBJECT_GRID->addReadField("name: 'SECOND_AWARD'");
    $OBJECT_GRID->addReadField("name: 'YEAR_AWARD'");
    
    $OBJECT_GRID->addReadField("name: 'FIRST_NUMBER_GPA'");
    $OBJECT_GRID->addReadField("name: 'SECOND_NUMBER_GPA'");
    
    $OBJECT_GRID->addReadField("name: 'RECOMMENDATION'");
    
    $OBJECT_GRID->addColumn("header: '<b>".CODE_ID."</b>', width: 80, sortable: true, renderer: cssDefault, dataIndex: 'CODE'");
    $OBJECT_GRID->addColumn("header: '<b>".STUDENT."</b>', width: 200, sortable: true, renderer: cssC, dataIndex: 'STUDENT'");
    
    switch($CHOOSE_TERM){
        case "YEAR_RESULT":
            $OBJECT_GRID->addColumn("header: '<b>".GPA."</b>', width: 120, sortable: true, renderer: cssA, dataIndex: 'YEAR_NUMBER_GPA'");
            $OBJECT_GRID->addColumn("header: '<b>".ASSESSMENT."</b>', width: 120, sortable: true, renderer: cssB, dataIndex: 'YEAR_ASSESSMENT'");
            $OBJECT_GRID->addColumn("header: '<b>".BEHAVIOR."</b>', width: 120, sortable: true, renderer: cssA, dataIndex: 'YEAR_BEHAVIOR'");
            $OBJECT_GRID->addColumn("header: '<b>".AWARD."</b>', width: 120, sortable: true, renderer: cssB, dataIndex: 'YEAR_AWARD'");
            $OBJECT_GRID->addColumn("header: '<b>".RECOMMENDATION."</b>', width: 120, sortable: true, renderer: cssA, dataIndex: 'RECOMMENDATION'");
            break;
        case "FIRST_SEMESTER_RESULT":
            $OBJECT_GRID->addColumn("header: '<b>".AVERAGE."</b>', width: 120, sortable: true, renderer: cssB, dataIndex: 'FIRST_NUMBER_GPA'");
            $OBJECT_GRID->addColumn("header: '<b>".ASSESSMENT."</b>', width: 120, sortable: true, renderer: cssA, dataIndex: 'FIRST_ASSESSMENT'");
            $OBJECT_GRID->addColumn("header: '<b>".BEHAVIOR."</b>', width: 120, sortable: true, renderer: cssB, dataIndex: 'FIRST_BEHAVIOR'");
            $OBJECT_GRID->addColumn("header: '<b>".AWARD."</b>', width: 120, sortable: true, renderer: cssA, dataIndex: 'FIRST_AWARD'");
            break;
        case "SECOND_SEMESTER_RESULT":
            $OBJECT_GRID->addColumn("header: '<b>".AVERAGE."</b>', width: 120, sortable: true, renderer: cssB, dataIndex: 'SECOND_NUMBER_GPA'");
            $OBJECT_GRID->addColumn("header: '<b>".ASSESSMENT."</b>', width: 120, sortable: true, renderer: cssA, dataIndex: 'SECOND_ASSESSMENT'");
            $OBJECT_GRID->addColumn("header: '<b>".BEHAVIOR."</b>', width: 120, sortable: true, renderer: cssB, dataIndex: 'SECOND_BEHAVIOR'");
            $OBJECT_GRID->addColumn("header: '<b>".AWARD."</b>', width: 120, sortable: true, renderer: cssA, dataIndex: 'SECOND_AWARD'");
            break;
    }
    
    /*
    $OBJECT_GRID->addColumn("
        header: '<b>".FIRST_BEHAVIOR."</b>'
        ,dataIndex: 'FIRST_BEHAVIOR'
        ,width: 100
        ,align: 'center'
        ,editor: ".$editor."
    ");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".SECOND_BEHAVIOR."</b>'
        ,dataIndex: 'SECOND_BEHAVIOR'
        ,width: 100
        ,align: 'center'
        ,editor: ".$editor."
    ");
    
    if($academicObject->EDUCATION_TYPE == 1){
        $OBJECT_GRID->addColumn("header: '<b>".BEHAVIOR."</b>', width: 100, dataIndex: 'SECOND_BEHAVIOR'");
    }else{
        $OBJECT_GRID->addColumn("
            header: '<b>".BEHAVIOR."</b>'
            ,dataIndex: 'YEAR_BEHAVIOR'
            ,width: 100
            ,align: 'center'
            ,editor: ".$editor."
        ");
    }
    */
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'jsonLoadClassperformances'
        ,academicId: '".$this->academicId."'
        ,chooseTerm: '".$CHOOSE_TERM."'
    ";
    
    if($USER_TYPE == "INSTRUCTOR"){
        $isGridEditing = true; 
    }else{
        $isGridEditing = false;   
    }
    
    $OBJECT_GRID->setSaveParams("
        cmd: 'jsonActionStudentBehavior'
        ,academicId: '".$this->academicId."'
        ,behaviorValue: behaviorValue
    ");

    $OBJECT_GRID->setAftereditCallback("
        if (jsonData.FIRST_BEHAVIOR) e.record.set('FIRST_BEHAVIOR',jsonData.FIRST_BEHAVIOR);
        if (jsonData.SECOND_BEHAVIOR) e.record.set('SECOND_BEHAVIOR',jsonData.SECOND_BEHAVIOR);
        if (jsonData.YEAR_BEHAVIOR) e.record.set('YEAR_BEHAVIOR',jsonData.YEAR_BEHAVIOR);
    ");
    
    $OBJECT_GRID->isGridEditing = $isGridEditing;
    $OBJECT_GRID->isQuickySearch = true;
    $OBJECT_GRID->isObjectDefaultOnLoad = true;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();
    
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            border: false
            ,layout: 'card'
            ,id:'content'
            ,activeItem: 0
            ,items:[{xtype: '<?=$OBJECT_GRID->getObjectXtype();?>'}]
        }]
    });
    
    var grid = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>');
    if (grid) grid.on('cellclick', function(grid, rowIndex, columnIndex, event) {
        var record = grid.store.getAt(rowIndex);
        studentId = record.data.ID;
        
        var contextMenu = new Ext.menu.Menu({
           items: [{
              text: '<?=GRADEBOOK?>&raquo; ' + record.data.STUDENT
              ,iconCls: 'icon-book_edit'
              ,handler: function(){
                  window.parent.parent.parent.openWinMax('<?=GRADEBOOK?>&raquo; ' + record.data.STUDENT,'<?=$this->URL_GRADEBOOK?>&studentId=' + studentId);
              }
           },{
              text: '<?=TRANSCRIPT?>&raquo; ' + record.data.STUDENT
              ,iconCls: 'icon-report_edit'
              ,disabled:false
              ,handler: function(){
                  window.parent.parent.parent.openWinMax('<?=TRANSCRIPT?>&raquo; ' + record.data.STUDENT,'<?=$this->URL_SHOW_TRANSCRIPT?>&studentId=' + studentId);
              }
           },{
              text: '<?=TEACHER_COMMENTS?>&raquo; ' + record.data.STUDENT
              ,iconCls: 'icon-comments'
              ,handler: function(){
                  window.parent.parent.openWinMax('<?=GRADEBOOK?>&raquo; ' + record.data.STUDENT,'<?=$this->URL_COMMENT?>&studentId=' + studentId);
              }
           }] 
        })
        event.stopEvent();
        contextMenu.showAt(event.xy);
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>