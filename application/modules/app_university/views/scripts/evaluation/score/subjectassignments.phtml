<?
////////////////////////////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.04.2014
// Am Stollheen 18, 55120 Mainz, Germany
////////////////////////////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once setUserLoacalization();
require_once "models/" . Zend_Registry::get('MODUL_API_PATH') . "/assignment/AssignmentDBAccess.php";
 
$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_TREE = new CamemisTree("ASSIGNMENT", "LIST");
$OBJECT_TREE->setURL("/assignment/jsontree/");
$OBJECT_TREE->setSaveUrl("/assignment/jsonsave/");

$myObject = AcademicDBAccess::findGradeFromId($this->academicId);

if(!$myObject) {header("Location: /main/permission/");exit;}

AcademicDBAccess::mappingAcademicSchoolyear($myObject);
$academicObject = AcademicDBAccess::findGradeFromId($this->academicId);

AssessmentConfig::setGradingScale($academicObject);

$DB_SCHOOLYEAR = AcademicDateDBAccess::getInstance();
$schoolyearObject = $DB_SCHOOLYEAR->findAcademicDateFromId($academicObject->SCHOOL_YEAR);

if($academicObject->EDUCATION_SYSTEM){
    $subjectId = $academicObject->SUBJECT_ID;
    $academicId = $academicObject->PARENT;
    $subjectObject = SubjectDBAccess::getAcademicSubject($subjectId,$academicId);
}else{
    $subjectId = $this->subjectId;
    $academicId = $academicObject->ID;
    $subjectObject = SubjectDBAccess::getAcademicSubject($subjectId,$academicId);
} 

$CHECK_IN_SCHEDULE = SubjectDBAccess::checkAcademicSubjectSchedule($subjectId, $academicId);

if(!$CHECK_IN_SCHEDULE) {
    header("Location: /main/permission/");exit;
}

$setParams = "";
$setParams .="&subjectId=".$subjectObject->SUBJECT_ID."";
$setParams .="&academicId=".$academicObject->ID."";

$TERM_NUMBER = AcademicDBAccess::findAcademicTerm($academicObject->SCHOOL_YEAR);
function getDataField($startdate, $enddate){
    
    $html = "{";
        $html .= "bodyStyle: 'padding:10px'";
        $html .= ",border:false";
        $html .= ",layout:'form'";
        $html .= ",labelWidth:130";
        $html .= ",items:[{";
            $html .= CamemisField::Displayfield($startdate."_".$enddate,DATE,showSeconds2Date($startdate)." - ".showSeconds2Date($enddate));
        $html .= "}]";
    $html .= "}";
    
    return $html;
}

switch($subjectObject->SCORE_TYPE){
    case 1:
        $SCORE_ITEMS = $subjectObject->SCORE_MIN." - ".$subjectObject->SCORE_MAX;
        $MAX_POSSIBLE_SCORE = $subjectObject->SCORE_MAX?$subjectObject->SCORE_MAX:"---";
        break;
    case 2:
        $SCORE_ITEMS = $subjectObject->MAX_POSSIBLE_SCORE?$subjectObject->MAX_POSSIBLE_SCORE:"---";
        $MAX_POSSIBLE_SCORE = $subjectObject->MAX_POSSIBLE_SCORE?$subjectObject->MAX_POSSIBLE_SCORE:"---";
        break;
}

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>

var objectId;
var date='<?=getCurrentDBDate();?>';
Ext.onReady(function() {
	
    Ext.Ajax.timeout = 600000;
    Ext.QuickTips.init();
    
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $OBJECT_TREE->isAsyncTreeNode = false;
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());
    
    $INFORMATION_ITEMS = Array();
    $SCORE_INFORMATION = "{
        width:480
        ,bodyStyle: 'padding:15px'
        ,title: '".SCORE."'
        ,autoHeight:true
        ,layout:'form'
        ,labelWidth:130
        ,items:[{
            ".CamemisField::Displayfield("SCORE_TYPE",SCORE_TYPE,getScoreType($subjectObject->SCORE_TYPE))."
        },{
            ".CamemisField::Displayfield("SCORE",SCORE,$SCORE_ITEMS)."
        },{
            ".CamemisField::Displayfield("POINTS_POSSIBLE",POINTS_POSSIBLE,$MAX_POSSIBLE_SCORE)."
        }]
    }";
    
    $INFORMATION_ITEMS[] = $SCORE_INFORMATION;
    
    switch ($TERM_NUMBER) {
        case 1:
            $FIRST_TERM = "{
                title: '".FIRST_TERM."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField($academicObject->TERM1_START, $academicObject->TERM1_END)."]
            }";
            $INFORMATION_ITEMS[] = $FIRST_TERM;
            $SECOND_TERM = "{
                title: '".SECOND_TERM."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField($academicObject->TERM2_START, $academicObject->TERM2_END)."]
            }";
            $INFORMATION_ITEMS[] = $SECOND_TERM;
            $THIRD_TERM = "{
                title: '".THIRD_TERM."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField($academicObject->TERM3_START, $academicObject->TERM3_END)."]
            }";
            $INFORMATION_ITEMS[] = $THIRD_TERM;
            break;
        case 2:
            $FIRST_QUARTER = "{
                title: '".FIRST_QUARTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField($academicObject->QUARTER1_START, $academicObject->QUARTER1_END)."]
            }";
            $INFORMATION_ITEMS[] = $FIRST_QUARTER;
            $SECOND_QUARTER = "{
                title: '".SECOND_QUARTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField($academicObject->QUARTER2_START, $academicObject->QUARTER2_END)."]
            }";
            $INFORMATION_ITEMS[] = $SECOND_QUARTER;
            $THIRD_QUARTER = "{
                title: '".THIRD_QUARTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField($academicObject->QUARTER3_START, $academicObject->QUARTER3_END)."]
            }";
            $INFORMATION_ITEMS[] = $THIRD_QUARTER;
            $FOURTH_QUARTER = "{
                title: '".FOURTH_QUARTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField($academicObject->QUARTER4_START, $academicObject->QUARTER4_END)."]
            }";
            $INFORMATION_ITEMS[] = $FOURTH_QUARTER;
            break;
        default:
            $FIRST_SEMESTER = "{
                title: '".FIRST_SEMESTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField($academicObject->SEMESTER1_START, $academicObject->SEMESTER1_END)."]
            }";
            $INFORMATION_ITEMS[] = $FIRST_SEMESTER;
            $SECOND_SEMESTER = "{
                title: '".SECOND_SEMESTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField($academicObject->SEMESTER2_START, $academicObject->SEMESTER2_END)."]
            }";
            $INFORMATION_ITEMS[] = $SECOND_SEMESTER;
            break;
    }
    
    $DISPLAY_INFORMATION_ITEMS = implode(",",$INFORMATION_ITEMS);
    
    $OBJECT_TREE->addTBarItems("
        text: ''
        ,tooltip:'" . INFORMATION . "'
        ,iconCls:'icon-information'
        ,handler:function(){
            var win = new Ext.Window({
                title:'" . INFORMATION . "'
                ,bodyStyle: 'padding:10px;'
                ,width:550
                ,height:250
                ,autoScroll: true
                ,modal: true
                ,items:[{
                    xtype: 'tabpanel'
                    ,height:150
                    ,tabPosition: 'top'
                    ,plain:true
                    ,activeTab: 0
                    ,enableTabScroll:true
                    ,items:[".$DISPLAY_INFORMATION_ITEMS."]
                }]
                ,buttons: [{
                    text: '".CLOSE."'
                    ,iconCls:'icon-cancel'
                    ,handler: function(){
                        win.hide();
                    }
                }]
            });
            if (win) win.show(win);
        }
    ");
    
    $OBJECT_TREE->addTBarItems("
        text:''
        ,tooltip:'" . REMOVE_ALL . "'
        ,iconCls:'icon-delete'
        ,handler:function(){
            Ext.MessageBox.confirm('".STATUS."', '".MSG_DO_YOU_REALLY_WANNT_TO_RUN_THIS."', function(btn){
                if(btn == 'yes'){
                    Ext.Ajax.request({
                        url:'/evaluation/jsonsave/'
                        ,method: 'POST'
                        ,params: {cmd:'jsonActionDeleteSubjectScoreAssessment',camIds: '".$this->urlEncryp->encryptedGet($setParams)."'}
                        ,success: function(response, options) {
                            window.location.href='".$_SERVER["REQUEST_URI"]."';
                        }
                    });
                }
            });
        }
    ");

    $paramImport = $setParams;
    $paramImport .= "&target=subjectassignments";
    $paramImport .= "&actionType=MULTI";
    $OBJECT_TREE->addTBarItems("
        text: '" . IMPORT . "'
        ,disabled: false
        ,iconCls:'icon-list-items'
        ,menu:[{
            text: '" . EXCEL_TEMPLATE . "'
            ,iconCls:'icon-page_excel'
            ,handler:function(){
                window.location='/evaluation/scoreimporttemplate/?camIds=".$this->urlEncryp->encryptedGet($paramImport)."';
            }
        },{
            text: '" . IMPORT . "'
            ,iconCls:'icon-database_copy'
            ,handler:function(){
                openWinIFrame('" . IMPORT . "', '/evaluation/scoreimport/?camIds=".$this->urlEncryp->encryptedGet($paramImport)."', 450,250);
            }
        }]
    ");
    
    $OBJECT_TREE->setBaseParams("
    	cmd: 'jsonTreeAssignmentsBySubjctClass'
        ,camIds: '".$this->urlEncryp->encryptedGet($setParams)."'
    ");
    
    $OBJECT_TREE->backgroundColor = "#F9F9F9";
    $OBJECT_TREE->isTreeExpand = true;
    $OBJECT_TREE->renderJS();
    
    if(!$academicObject->EVALUATION_OPTION){
        $TEACHER_ENTER_SCORE = "{
            text: '".TEACHER_ENTER_SCORE."'
            ,id:'TEACHER_ENTER_SCORE'
            ,iconCls: 'icon-brick_magnify'
            ,handler: function(){Ext.getCmp('MAIN_CONTENT').getLayout().setActiveItem(0);}
        }";
        $BAR_ITEMS[] = $TEACHER_ENTER_SCORE;
    }
    
    if($academicObject->DISPLAY_MONTH_RESULT){
        $MONTHLY_RESULT = "{
            text: '".MONTHLY_RESULT."'
            ,id:'MONTHLY_RESULT'
            ,iconCls: 'icon-brick_magnify'
            ,menu:[{
                text:'".MONTHLY_RESULT."'
                ,iconCls:'icon-application_view_detail'
                ,handler:function(){
                    clickOpenPage('MAIN_CONTENT','','/evaluation/subjectresultmonthmain/?camIds=".$this->urlEncryp->encryptedGet($setParams)."');
                }
            },{
                text:'".CHARTS."'
                ,iconCls:'icon-chart_bar'
                ,disabled:true
            }]
        }";
        $BAR_ITEMS[] = $MONTHLY_RESULT;
    }
    
    switch ($TERM_NUMBER) {
        case 1:
            
            $setParamsFirst = $setParams;
            $setParamsFirst .= "&term=FIRST_TERM";
            $FIRST_TERM_RESULT = "{
                text: '".FIRST_TERM_RESULT."'
                ,id:'FIRST_TERM_RESULT'
                ,iconCls: 'icon-brick_magnify'
                ,menu:[{
                    text:'".FIRST_TERM_RESULT."'
                    ,iconCls:'icon-application_view_detail'
                    ,handler:function(){
                        clickOpenPage('MAIN_CONTENT','','/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsFirst)."');
                    }
                },{
                    text:'".CHARTS."'
                    ,iconCls:'icon-chart_bar'
                    ,disabled:true
                }]
            }";
            
            if($academicObject->DISPLAY_FIRST_RESULT)
            $BAR_ITEMS[] = $FIRST_TERM_RESULT;

            $setParamsSecond = $setParams;
            $setParamsSecond .= "&term=SECOND_TERM";
            $SECOND_TERM_RESULT = "{
                text: '".SECOND_TERM_RESULT."'
                ,id:'SECOND_TERM_RESULT'
                ,iconCls: 'icon-brick_magnify'
                ,menu:[{
                    text:'".SECOND_TERM_RESULT."'
                    ,iconCls:'icon-application_view_detail'
                    ,handler:function(){
                        clickOpenPage('MAIN_CONTENT','','/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsSecond)."');
                    }
                },{
                    text:'".CHARTS."'
                    ,iconCls:'icon-chart_bar'
                    ,disabled:true
                }]
            }";
            
            if($academicObject->DISPLAY_SECOND_RESULT)
            $BAR_ITEMS[] = $SECOND_TERM_RESULT;
            
            $setParamsThird = $setParams;
            $setParamsThird .= "&term=SECOND_TERM";
            $THIRD_TERM_RESULT = "{
                text: '".THIRD_TERM_RESULT."'
                ,id:'THIRD_TERM_RESULT'
                ,iconCls: 'icon-brick_magnify'
                ,menu:[{
                    text:'".THIRD_TERM_RESULT."'
                    ,iconCls:'icon-application_view_detail'
                    ,handler:function(){
                        clickOpenPage('MAIN_CONTENT','','/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsThird)."');
                    }
                },{
                    text:'".CHARTS."'
                    ,iconCls:'icon-chart_bar'
                    ,disabled:true
                }]
            }";
            
            if($academicObject->DISPLAY_THIRD_RESULT)
            $BAR_ITEMS[] = $THIRD_TERM_RESULT;
            
        break;
        case 2:
            
            $setParamsFirst = $setParams;
            $setParamsFirst .= "&term=FIRST_QUARTER";
            $FIRST_QUARTER_RESULT = "{
                text: '".FIRST_QUARTER_RESULT."'
                ,id:'FIRST_QUARTER_RESULT'
                ,iconCls: 'icon-brick_magnify'
                ,menu:[{
                    text:'".FIRST_QUARTER_RESULT."'
                    ,iconCls:'icon-application_view_detail'
                    ,handler:function(){
                        clickOpenPage('MAIN_CONTENT','','/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsFirst)."');
                    }
                },{
                    text:'".CHARTS."'
                    ,iconCls:'icon-chart_bar'
                    ,disabled:true
                }]
            }";
            
            if($academicObject->DISPLAY_FIRST_RESULT)
            $BAR_ITEMS[] = $FIRST_QUARTER_RESULT;

            $setParamsSecond = $setParams;
            $setParamsSecond .= "&term=SECOND_QUARTER";
            $SECOND_QUARTER_RESULT = "{
                text: '".SECOND_QUARTER_RESULT."'
                ,id:'SECOND_QUARTER_RESULT'
                ,iconCls: 'icon-brick_magnify'
                ,menu:[{
                    text:'".SECOND_QUARTER_RESULT."'
                    ,iconCls:'icon-application_view_detail'
                    ,handler:function(){
                        clickOpenPage('MAIN_CONTENT','','/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsSecond)."');
                    }
                },{
                    text:'".CHARTS."'
                    ,iconCls:'icon-chart_bar'
                    ,disabled:true
                }]
            }";
            
            if($academicObject->DISPLAY_SECOND_RESULT)
            $BAR_ITEMS[] = $SECOND_QUARTER_RESULT;
            
            $setParamsThird = $setParams;
            $setParamsThird .= "&term=THIRD_QUARTER";
            $THIRD_QUARTER_RESULT = "{
                text: '".THIRD_QUARTER_RESULT."'
                ,id:'THIRD_QUARTER_RESULT'
                ,iconCls: 'icon-brick_magnify'
                ,menu:[{
                    text:'".THIRD_QUARTER_RESULT."'
                    ,iconCls:'icon-application_view_detail'
                    ,handler:function(){
                        clickOpenPage('MAIN_CONTENT','','/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsThird)."');
                    }
                },{
                    text:'".CHARTS."'
                    ,iconCls:'icon-chart_bar'
                    ,disabled:true
                }]
            }";
            
            if($academicObject->DISPLAY_THIRD_RESULT)
            $BAR_ITEMS[] = $THIRD_QUARTER_RESULT;
            
            if($academicObject->DISPLAY_SECOND_RESULT)
            $BAR_ITEMS[] = $SECOND_QUARTER_RESULT;
            
            $setParamsFourth = $setParams;
            $setParamsFourth .= "&term=FOURTH_QUARTER";
            $FOURTH_QUARTER_RESULT = "{
                text: '".FOURTH_QUARTER_RESULT."'
                ,id:'FOURTH_QUARTER_RESULT'
                ,iconCls: 'icon-brick_magnify'
                ,menu:[{
                    text:'".FOURTH_QUARTER_RESULT."'
                    ,iconCls:'icon-application_view_detail'
                    ,handler:function(){
                        clickOpenPage('MAIN_CONTENT','','/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsFirst)."');
                    }
                },{
                    text:'".CHARTS."'
                    ,iconCls:'icon-chart_bar'
                    ,disabled:true
                }]
            }";
            
            if($academicObject->DISPLAY_FOURTH_RESULT)
            $BAR_ITEMS[] = $FOURTH_QUARTER_RESULT;
            
        break;
        default:
            $setParamsFirst = $setParams;
            $setParamsFirst .= "&term=FIRST_SEMESTER";
            $FIRST_SEMESTER_RESULT = "{
                text: '".FIRST_SEMESTER_RESULT."'
                ,id:'FIRST_SEMESTER_RESULT'
                ,iconCls: 'icon-brick_magnify'
                ,menu:[{
                    text:'".FIRST_SEMESTER_RESULT."'
                    ,iconCls:'icon-application_view_detail'
                    ,handler:function(){
                        clickOpenPage('MAIN_CONTENT','','/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsFirst)."');
                    }
                },{
                    text:'".CHARTS."'
                    ,iconCls:'icon-chart_bar'
                    ,disabled:true
                }]
            }";
            if($academicObject->DISPLAY_FIRST_RESULT)
            $BAR_ITEMS[] = $FIRST_SEMESTER_RESULT;

            $setParamsSecond = $setParams;
            $setParamsSecond .= "&term=SECOND_SEMESTER";
            $SECOND_SEMESTER_RESULT = "{
                text: '".SECOND_SEMESTER_RESULT."'
                ,id:'SECOND_SEMESTER_RESULT'
                ,iconCls: 'icon-brick_magnify'
                ,menu:[{
                    text:'".SECOND_SEMESTER_RESULT."'
                    ,iconCls:'icon-application_view_detail'
                    ,handler:function(){
                        clickOpenPage('MAIN_CONTENT','','/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsSecond)."');
                    }
                },{
                    text:'".CHARTS."'
                    ,iconCls:'icon-chart_bar'
                    ,disabled:true
                }]
            }";
            if($academicObject->DISPLAY_SECOND_RESULT)
            $BAR_ITEMS[] = $SECOND_SEMESTER_RESULT;
        break;
    }
    
    if($academicObject->ENROLLMENT_TYPE !=1){
        if($academicObject->DISPLAY_YEAR_RESULT){
            $setParamsYear = $setParams;
            $YEAR_RESULT = "{
                text: '".YEAR_RESULT."'
                ,id:'YEAR_RESULT'
                ,iconCls: 'icon-brick_magnify'
                ,menu:[{
                    text:'".YEAR_RESULT."'
                    ,iconCls:'icon-application_view_detail'
                    ,handler:function(){
                        clickOpenPage('MAIN_CONTENT','','/evaluation/subjectresultyear/?camIds=".$this->urlEncryp->encryptedGet($setParamsYear)."');
                    }
                },{
                    text:'".CHARTS."'
                    ,iconCls:'icon-chart_bar'
                    ,disabled:true
                }]
            }";
            $BAR_ITEMS[] = $YEAR_RESULT;
        }
    }
    
    ////////////////////////////////////////////////////////////////////////////
    $DISPLAY_BAR_ITEMS = "'-',".implode(",'-',",$BAR_ITEMS);
    ////////////////////////////////////////////////////////////////////////////
    
    $VIEWPORT_ITEMS = Array();
    
    if(!$academicObject->EVALUATION_OPTION){
        $TEACHER_ENTER_SCORE = "{
            title: ''
            ,layout:'fit'
            ,border:false
            ,items:[{
                layout:'border'
                ,border: false
                ,defaults: {
                    collapsible: true
                    ,split: true
                }
                ,items: [{
                    region:'west'
                    ,id: 'WEST_ID'
                    ,margins: '3 0 3 3'
                    ,cmargins: '3 3 3 3'
                    ,width: 300
                    ,minSize: 300
                    ,maxSize: 300
                    ,layout: 'fit'
                    ,items:[{xtype: '".$OBJECT_TREE->getObjectXtype()."'}]
                },{
                    collapsible: false
                    ,id: 'center'
                    ,region:'center'
                    ,margins: '3 3 3 0'
                    ,layout: 'card'
                    ,activeItem: 0
                    ,items: [{
                        border: false
                        ,layout: 'anchor'
                        ,bodyStyle: 'background:#FFFFFF; padding:25px;'
                        ,items: [{
                            title: ''
                            ,height:60
                            ,width:500
                            ,bodyStyle: 'background:#F9F9F9; padding:10px; border:1px dotted #999;text-align:center;'
                            ,html:'<h1 class=\"header\">".PLEASE_MAKE_YOUR_SELECTIONS."</h1>'
                        }]
                    }]
                }]
            }]
        }";
        $VIEWPORT_ITEMS[] = $TEACHER_ENTER_SCORE;
    }else{
        if($academicObject->DISPLAY_MONTH_RESULT){
            $VIEWPORT_ITEMS[] = "{
                title: ''
                ,border:false
                ,layout: 'fit'
                ,items:[new Ext.ux.IFrameComponent({ id: 'MONTHLY_RESULT', url: '/evaluation/subjectresultmonthmain/?camIds=".$this->urlEncryp->encryptedGet($setParams)."'})]
            }";
        }
        switch ($TERM_NUMBER) {
            case 1:

                $setParamsFirst = $setParams;
                $setParamsFirst .= "&term=FIRST_TERM";
                $DISPLAY_FIRST_TERM_RESULT = "{
                    title: '".FIRST_TERM_RESULT."'
                    ,layout: 'fit'
                    ,items:[new Ext.ux.IFrameComponent({ id: 'FIRST_TERM', url: '/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsFirst)."'})]
                }";

                if($academicObject->DISPLAY_FIRST_RESULT)
                $VIEWPORT_ITEMS[] = $DISPLAY_FIRST_TERM_RESULT;

                $setParamsSecond = $setParams;
                $setParamsSecond .= "&term=SECOND_TERM";
                $DISPLAY_SECOND_TERM_RESULT = "{
                    title: '".SECOND_TERM_RESULT."'
                    ,layout: 'fit'
                    ,items:[new Ext.ux.IFrameComponent({ id: 'SECOND_TERM', url: '/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsSecond)."'})]
                }";

                if($academicObject->DISPLAY_SECOND_RESULT)
                $VIEWPORT_ITEMS[] = $DISPLAY_SECOND_TERM_RESULT;

                $setParamsThird = $setParams;
                $setParamsThird .= "&term=SECOND_TERM";
                $DISPLAY_THIRD_TERM_RESULT = "{
                    title: '".THIRD_TERM_RESULT."'
                    ,layout: 'fit'
                    ,items:[new Ext.ux.IFrameComponent({ id: 'THIRD_TERM', url: '/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsThird)."'})]
                }";

                if($academicObject->DISPLAY_THIRD_RESULT)
                $VIEWPORT_ITEMS[] = $DISPLAY_THIRD_TERM_RESULT;

            break;
            case 2:

                $setParamsFirst = $setParams;
                $setParamsFirst .= "&term=FIRST_QUARTER";
                $DISPLAY_FIRST_QUARTER_RESULT = "{
                    title: '".FIRST_QUARTER_RESULT."'
                    ,layout: 'fit'
                    ,items:[new Ext.ux.IFrameComponent({ id: 'FIRST_QUARTER', url: '/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsFirst)."'})]
                }";

                if($academicObject->DISPLAY_FIRST_RESULT)
                $VIEWPORT_ITEMS[] = $DISPLAY_FIRST_QUARTER_RESULT;

                $setParamsSecond = $setParams;
                $setParamsSecond .= "&term=SECOND_QUARTER";
                $DISPLAY_SECOND_QUARTER_RESULT = "{
                    title: '".SECOND_QUARTER_RESULT."'
                    ,layout: 'fit'
                    ,items:[new Ext.ux.IFrameComponent({ id: 'SECOND_QUARTER', url: '/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsSecond)."'})]
                }";

                if($academicObject->DISPLAY_SECOND_RESULT)
                $VIEWPORT_ITEMS[] = $DISPLAY_SECOND_QUARTER_RESULT;

                $setParamsThird = $setParams;
                $setParamsThird .= "&term=THIRD_QUARTER";
                $DISPLAY_THIRD_QUARTER_RESULT = "{
                    title: '".THIRD_QUARTER_RESULT."'
                    ,layout: 'fit'
                    ,items:[new Ext.ux.IFrameComponent({ id: 'THIRD_QUARTER', url: '/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsThird)."'})]
                }";

                if($academicObject->DISPLAY_THIRD_RESULT)
                $VIEWPORT_ITEMS[] = $DISPLAY_THIRD_QUARTER_RESULT;

                if($academicObject->DISPLAY_SECOND_RESULT)
                $VIEWPORT_ITEMS[] = $DISPLAY_SECOND_QUARTER_RESULT;

                $setParamsFourth = $setParams;
                $setParamsFourth .= "&term=FOURTH_QUARTER";
                $DISPLAY_FOURTH_QUARTER_RESULT = "{
                    title: '".FOURTH_QUARTER_RESULT."'
                    ,layout: 'fit'
                    ,items:[new Ext.ux.IFrameComponent({ id: 'FOURTH_QUARTER', url: '/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsFourth)."'})]
                }";

                if($academicObject->DISPLAY_FOURTH_RESULT)
                $VIEWPORT_ITEMS[] = $DISPLAY_FOURTH_QUARTER_RESULT;

            break;
            default:
                $setParamsFirst = $setParams;
                $setParamsFirst .= "&term=FIRST_SEMESTER";
                $DISPLAY_FIRST_SEMESTER_RESULT = "{
                    title: '".FIRST_SEMESTER_RESULT."'
                    ,layout: 'fit'
                    ,items:[new Ext.ux.IFrameComponent({ id: 'FIRST_SEMESTER', url: '/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsFirst)."'})]
                }";
                if($academicObject->DISPLAY_FIRST_RESULT)
                $VIEWPORT_ITEMS[] = $DISPLAY_FIRST_SEMESTER_RESULT;

                $setParamsSecond = $setParams;
                $setParamsSecond .= "&term=SECOND_SEMESTER";
                $DISPLAY_SECOND_SEMESTER_RESULT = "{
                    title: '".SECOND_SEMESTER_RESULT."'
                    ,layout: 'fit'
                    ,items:[new Ext.ux.IFrameComponent({ id: 'FIRST_SEMESTER', url: '/evaluation/subjectresultsemester/?camIds=".$this->urlEncryp->encryptedGet($setParamsSecond)."'})]
                }";
                if($academicObject->DISPLAY_SECOND_RESULT)
                $VIEWPORT_ITEMS[] = $DISPLAY_SECOND_SEMESTER_RESULT;
            break;
        }
    }
    
    $DISPLAY_VIEWPORT_ITEMS = implode(",",$VIEWPORT_ITEMS);
    
    ?>
    var fp = new Ext.FormPanel({
        labelAlign: 'left'
        ,border: false
        ,width:400
        ,autoHeight: true
        ,title: ''
        ,labelWidth:120
        ,defaults: {
            anchor: '85%'
            ,allowBlank: false
            ,msgTarget: 'side'
        }
        ,items:[{
            xtype:'datefield'
            ,fieldLabel:'<?=DATE?>'
            ,name:'MODIFY_DATE'
            ,value:''
            ,format:'<?=setExtDatafieldFormat()?>'
        }]
    });
    
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'fit'
            ,border:false
            ,tbar:[<?=$DISPLAY_BAR_ITEMS?>]
            ,items:[{
                layout: 'card'
                ,border:false
                ,id:'MAIN_CONTENT'
                ,activeItem: 0
                ,items:[<?=$DISPLAY_VIEWPORT_ITEMS;?>]
            }]
        }]
    });
    
    var myTree = <?=$OBJECT_TREE->ExtgetCmp();?>;
    if (myTree) myTree.on('click', function(node, event){
        if(node.isLeaf()){
            var contextMenu = new Ext.menu.Menu({
                items: [{
                    text: '<?=TEACHER_ENTER_SCORE?> &raquo; ' + node.attributes.display
                    ,iconCls: 'icon-table_edit'
                    ,handler: function(){
                        clickOpenPage('center',node.attributes.display, '/evaluation/subjectscoreenter/?camIds=<?=$this->urlEncryp->encryptedGet($setParams)?>&setId=' + node.id + '&date=' + date + '&objectId=' + node.attributes.setId);
                    }
                }]
            });
            event.stopEvent();
            contextMenu.showAt(event.xy); 
            
        }else{
            var dateMenu = new Ext.menu.DateMenu({
                handler: function(dp, date){
                    clickOpenPage('center',node.attributes.display, '/evaluation/subjectscoreenter/?camIds=<?=$this->urlEncryp->encryptedGet($setParams)?>&setId=' + node.id + '&date=' + date.format('Y-m-j'));
                }
            });
            event.stopEvent();
            dateMenu.showAt(event.xy); 
        }
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>