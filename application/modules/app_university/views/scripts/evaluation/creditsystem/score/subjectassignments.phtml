<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once setUserLoacalization();
require_once 'models/app_university/assignment/AssignmentDBAccess.php';

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_TREE = new CamemisTree("ASSIGNMENT", "LIST");
$OBJECT_TREE->setURL("/assignment/jsontree/");
$OBJECT_TREE->setSaveUrl("/assignment/jsonsave/");

$academicObject = AcademicDBAccess::findGradeFromId($this->academicId);
if(!$academicObject) {header("Location: /main/permission/");}

$subjectObject = SubjectDBAccess::getAcademicSubject($this->subjectId,$this->academicId);

if(!$subjectObject) {
    header("Location: /main/permission/");exit;
}

AcademicDBAccess::mappingAcademicSchoolyear($academicObject);

$DB_SCHOOLYEAR = AcademicDateDBAccess::getInstance();
$schoolyearObject = $DB_SCHOOLYEAR->findAcademicDateFromId($academicObject->SCHOOL_YEAR);

$setParams = "";
$setParams .= "&academicId=".$this->academicId."";
$setParams .= "&subjectId=".$this->subjectId."";

$TERM_NUMBER = AcademicDBAccess::findAcademicTerm($academicObject->SCHOOL_YEAR);
function getDataField($titte, $startdate, $enddate){
    
    $html = "{";
        $html .= "xtype:'fieldset'";
        $html .= ",width:480";
        $html .= ",checkboxToggle:true";
        $html .= ",collapsed: false";
        $html .= ",bodyStyle: 'padding:10px'";
        $html .= ",title: '".constant($titte)."'";
        $html .= ",autoHeight:true";
        $html .= ",layout:'form'";
        $html .= ",labelWidth:130";
        $html .= ",items:[{";
            $html .= "xtype: 'displayfield'";
            $html .= ",fieldLabel: '".DATE."'";
            $html .= ",value:'<b>".showSeconds2Date($startdate)." - ".showSeconds2Date($enddate)."</b>'";
        $html .= "}]";
    $html .= "}";
    
    return $html;
}

switch($subjectObject->SCORE_TYPE){
    case 1:
        $SCORE_ITEMS = $subjectObject->SCORE_MIN." - ".$subjectObject->SCORE_MAX;
        $MAX_POSSIBLE_SCORE = $subjectObject->SCORE_MAX?$subjectObject->SCORE_MAX:"---";
        break;
    case 2:
        $SCORE_ITEMS = $subjectObject->MAX_POSSIBLE_SCORE?$subjectObject->MAX_POSSIBLE_SCORE:"---";
        $MAX_POSSIBLE_SCORE = $subjectObject->MAX_POSSIBLE_SCORE?$subjectObject->MAX_POSSIBLE_SCORE:"---";
        break;
}

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>

var objectId;
var date='<?=getCurrentDBDate();?>';
Ext.onReady(function() {

    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

    $OBJECT_TREE->isAsyncTreeNode = false;
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());
    
    $INFORMATION_ITEMS = Array();
    $SCORE_INFORMATION = "{
        width:480
        ,bodyStyle: 'padding:15px'
        ,title: '".SCORE."'
        ,autoHeight:true
        ,layout:'form'
        ,labelWidth:130
        ,items:[{
            xtype: 'displayfield'
            ,fieldLabel: '".SCORE_TYPE."'
            ,value:'<b>".getScoreType($subjectObject->SCORE_TYPE)."</b>'
        },{
            xtype: 'displayfield'
            ,fieldLabel: '".SCORE."'
            ,value:'<b>".$SCORE_ITEMS."</b>'
        },{
            xtype: 'displayfield'
            ,fieldLabel: '".POINTS_POSSIBLE."'
            ,value:'<b>".$MAX_POSSIBLE_SCORE."</b>'
        }]
    }";
    
    $INFORMATION_ITEMS[] = $SCORE_INFORMATION;
    
    switch ($TERM_NUMBER) {
        case 1:
            $FIRST_TERM = "{
                title: '".FIRST_TERM."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField("FIRST_TERM", $academicObject->TERM1_START, $academicObject->TERM1_END)."]
            }";
            $INFORMATION_ITEMS[] = $FIRST_TERM;
            $SECOND_TERM = "{
                title: '".SECOND_TERM."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField("SECOND_TERM", $academicObject->TERM2_START, $academicObject->TERM2_END)."]
            }";
            $INFORMATION_ITEMS[] = $SECOND_TERM;
            $THIRD_TERM = "{
                title: '".THIRD_TERM."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField("THIRD_TERM", $academicObject->TERM3_START, $academicObject->TERM3_END)."]
            }";
            $INFORMATION_ITEMS[] = $THIRD_TERM;
            break;
        case 2:
            $FIRST_QUARTER = "{
                title: '".FIRST_QUARTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField("FIRST_QUARTER", $academicObject->QUARTER1_START, $academicObject->QUARTER1_END)."]
            }";
            $INFORMATION_ITEMS[] = $FIRST_QUARTER;
            $SECOND_QUARTER = "{
                title: '".SECOND_QUARTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField("SECOND_QUARTER", $academicObject->QUARTER2_START, $academicObject->QUARTER2_END)."]
            }";
            $INFORMATION_ITEMS[] = $SECOND_QUARTER;
            $THIRD_QUARTER = "{
                title: '".THIRD_QUARTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField("THIRD_QUARTER", $academicObject->QUARTER3_START, $academicObject->QUARTER3_END)."]
            }";
            $INFORMATION_ITEMS[] = $THIRD_QUARTER;
            $FOURTH_QUARTER = "{
                title: '".FOURTH_QUARTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField("FOURTH_QUARTER", $academicObject->QUARTER4_START, $academicObject->QUARTER4_END)."]
            }";
            $INFORMATION_ITEMS[] = $FOURTH_QUARTER;
            break;
        default:
            $FIRST_SEMESTER = "{
                title: '".FIRST_SEMESTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField("FIRST_SEMESTER", $academicObject->SEMESTER1_START, $academicObject->SEMESTER1_END)."]
            }";
            $INFORMATION_ITEMS[] = $FIRST_SEMESTER;
            $SECOND_SEMESTER = "{
                title: '".SECOND_SEMESTER."'
                ,width:480
                ,bodyStyle: 'padding:15px'
                ,border:false
                ,items:[".getDataField("SECOND_SEMESTER", $academicObject->SEMESTER2_START, $academicObject->SEMESTER2_END)."]
            }";
            $INFORMATION_ITEMS[] = $SECOND_SEMESTER;
            break;
    }
    
    $DISPLAY_INFORMATION_ITEMS = implode(",",$INFORMATION_ITEMS);
    
    $OBJECT_TREE->addTBarItems("
        text: ''
        ,tooltip:'" . INFORMATION . "'
        ,iconCls:'icon-information'
        ,handler:function(){
            var win = new Ext.Window({
                title:'" . INFORMATION . "'
                ,bodyStyle: 'padding:10px;'
                ,width:550
                ,height:250
                ,autoScroll: true
                ,modal: true
                ,items:[{
                    xtype: 'tabpanel'
                    ,height:150
                    ,tabPosition: 'top'
                    ,plain:true
                    ,activeTab: 0
                    ,enableTabScroll:true
                    ,items:[".$DISPLAY_INFORMATION_ITEMS."]
                }]
                ,buttons: [{
                    text: '".CLOSE."'
                    ,iconCls:'icon-cancel'
                    ,handler: function(){
                        win.hide();
                    }
                }]
            });
            if (win) win.show(win);
        }
    ");

    $OBJECT_TREE->addTBarItems("
        text:''
        ,tooltip:'" . REMOVE_ALL . "'
        ,iconCls:'icon-delete'
        ,handler:function(){
            Ext.MessageBox.confirm('".STATUS."', '".MSG_DO_YOU_REALLY_WANNT_TO_RUN_THIS."', function(btn){
                if(btn == 'yes'){
                    Ext.Ajax.request({
                        url:'/evaluation/jsonsave/'
                        ,method: 'POST'
                        ,params: {cmd:'jsonActionDeleteSubjectScoreAssessment',camIds: '".$this->urlEncryp->encryptedGet($setParams)."'}
                        ,success: function(response, options) {
                            window.location.href='".$_SERVER["REQUEST_URI"]."';
                        }
                    });
                }
            });
        }
    ");

    $OBJECT_TREE->setBaseParams("
    	cmd: 'jsonTreeAssignmentsBySubjctClass'
        ,camIds: '".$this->urlEncryp->encryptedGet($setParams)."'
    ");
    
    $OBJECT_TREE->backgroundColor = "#F9F9F9";
    $OBJECT_TREE->isTreeExpand = true;
    $OBJECT_TREE->renderJS();

    ?>
    var fp = new Ext.FormPanel({
        labelAlign: 'left'
        ,border: false
        ,width:400
        ,autoHeight: true
        ,title: ''
        ,labelWidth:120
        ,defaults: {
            anchor: '85%'
            ,allowBlank: false
            ,msgTarget: 'side'
        }
        ,items:[{
            xtype:'datefield'
            ,fieldLabel:'<?=DATE?>'
            ,name:'MODIFY_DATE'
            ,value:''
            ,format:'<?=setExtDatafieldFormat()?>'
        }]
    });
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'fit'
            ,bodyStyle: 'background:<?=CamemisPage::userBgColor();?>;padding:3px'
            ,border: false
            ,items:[{
                xtype: 'tabpanel'
                ,tabPosition: 'top'
                ,plain:true
                ,activeTab: 0
                ,enableTabScroll:true
                ,items:[{
                    title: '<?=TEACHER_ENTER_SCORE?>'
                    ,layout:'fit'
                    ,items:[{
                        layout:'border'
                        ,border: false
                        ,defaults: {
                            collapsible: true
                            ,split: true
                        }
                        ,items: [{
                            region:'west'
                            ,id: 'WEST_ID'
                            ,margins: '3 0 3 3'
                            ,cmargins: '3 3 3 3'
                            ,width: 350
                            ,minSize: 350
                            ,maxSize: 350
                            ,layout: 'fit'
                            ,items:[{xtype: '<?=$OBJECT_TREE->getObjectXtype();?>'}]
                        },{
                            collapsible: false
                            ,id: 'center'
                            ,region:'center'
                            ,margins: '3 3 3 0'
                            ,layout: 'card'
                            ,activeItem: 0
                            ,items: [{
                                border: false
                                ,layout: 'anchor'
                                ,bodyStyle: 'background:#FFFFFF; padding:25px;'
                                ,items: [{
                                    title: ''
                                    ,height:60
                                    ,width:500
                                    ,bodyStyle: 'background:#F9F9F9; padding:10px; border:1px dotted #999;text-align:center;'
                                    ,html:'<h1 class="header"><?=PLEASE_MAKE_YOUR_SELECTIONS;?></h1>'
                                }]
                            }]
                        }]
                    }]
                },{
                    title: '<?=SUBJECT_ASSESSMENT?>'
                    ,layout:'fit'
                    ,items:[new Ext.ux.IFrameComponent({ id: 'SUBJECT_ASSESSMENT', url: '/evaluation/subjectmainscoresummary/?camIds=<?=$this->urlEncryp->encryptedGet($setParams)?>'})]
                }]
            }]
        }]
    });

    var myTree = <?=$OBJECT_TREE->ExtgetCmp();?>;
    myTree.on('click', function(node, event){

        if(node.isLeaf()){
            var contextMenu = new Ext.menu.Menu({
                items: [{
                    text: '<?=TEACHER_ENTER_SCORE?> &raquo; ' + node.text
                    ,iconCls: 'icon-table_edit'
                    ,handler: function(){
                        clickOpenPage('center','', '/evaluation/subjectscoreenter/?camIds=<?=$this->urlEncryp->encryptedGet($setParams)?>&setId=' + node.id + '&date=' + date);
                    }
                },{
                    text: '<?=MODIFY_DATE?> &raquo; ' + node.text
                    ,iconCls: 'icon-date_edit'
                    ,handler: function(){
                        var win = new Ext.Window({
                            title:'<?=MODIFY_DATE?>',bodyStyle: 'padding:15px;background:#FFF'
                            ,plain: false,closable:false,modal:true,width:450,height:150,items: fp
                            ,buttons: [{
                                text: '<?=CLOSE?>',iconCls:'icon-cancel',handler: function(){win.hide();}
                            },{
                                text:'<?=SAVE?>',iconCls:'icon-page_save'
                                ,handler:function(){
                                    fp.getForm().submit({
                                        url:'/evaluation/jsonsave/'
                                        ,scope:this
                                        ,success: function(response, options) {
                                            window.location.href='<?=$_SERVER["REQUEST_URI"]?>';
                                        }
                                        ,params: {cmd:'jsonAcitonSubjectAssignmentModifyScoreDate',camIds:'<?=$this->urlEncryp->encryptedGet($setParams)?>',setId:node.id}
                                    });
                                }
                            }]
                        });
                        if (win) win.show(win);
                    }
                },{
                    text: '<?=ASSIGNMENT?> &raquo; ' + node.text
                    ,iconCls: 'icon-note_information'
                    ,handler: function(){
                        clickOpenPage('center','', '<?=$this->URL_CLASS_ASSIGNMENT;?>&setId=' + node.attributes.setId + '&title=' + node.text );
                    }
                }]
            });
            event.stopEvent();
            contextMenu.showAt(event.xy);

        }else{
            var dateMenu = new Ext.menu.DateMenu({
                handler: function(dp, date){
                    clickOpenPage('center','', '/evaluation/subjectscoreenter/?camIds=<?=$this->urlEncryp->encryptedGet($setParams)?>&setId=' + node.id + '&date=' + date.format('Y-m-j'));
                }
            });
            event.stopEvent();
            dateMenu.showAt(event.xy);
        }
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>