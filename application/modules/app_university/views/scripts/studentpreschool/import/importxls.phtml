<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisSchoolTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$OBJECT_GRID = new CamemisGrid("STUDENT_PRESCHOOL", "IMPORT");
$OBJECT_GRID->setLoadUrl("/studentpreschool/jsonload/");
$OBJECT_GRID->setSaveUrl("/studentpreschool/jsonsave/");

$disabledButton = $this->facette > 0 ? false : true; //@Math Man

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

?>

<script>
    Ext.onReady(function() {
        <?
        /**
        * Extjs: s.gif
        */
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

        $OBJECT_GRID->addCellRenderer("
            function renderQTip(val, cell, record){
                if (record.data.ACTION_STATUS == 1){
                    return '<div qtip=\"' + '<span>".CANNOT_IMPORT."</span>' +'\">'+ val +'</div>';
                }else{
                    return '<div qtip=\"' + '<span>".CAN_IMPORT."</span>' +'\">'+ val +'</div>';
                }
            }
        ");

        $OBJECT_GRID->addCellRenderer("
            function renderText(v, p, record, rowIndex){
                var str = '<span class=spanText>' + v + '</span>';
                return str;
            }
        ");



        $OBJECT_GRID->addReadField("name: 'LASTNAME'");
        $OBJECT_GRID->addReadField("name: 'FIRSTNAME'");
        $OBJECT_GRID->addReadField("name: 'GENDER'");
        $OBJECT_GRID->addReadField("name: 'PHONE'");
        $OBJECT_GRID->addReadField("name: 'EMAIL'");
        $OBJECT_GRID->addReadField("name: 'ADDRESS'");

        if(!SchoolDBAccess::displayPersonNameInGrid()){

            $OBJECT_GRID->addColumn("
                header: '<b>".LASTNAME."</b>',
                dataIndex: 'LASTNAME',
                width: 120,
                align: 'left',
                renderer: renderText,
                editor: new Ext.form.TextField({
                    allowBlank: false
                })
            ");

            $OBJECT_GRID->addColumn("
                header: '<b>".FIRSTNAME."</b>',
                dataIndex: 'FIRSTNAME',
                width: 120,
                align: 'left',
                renderer: renderText,
                editor: new Ext.form.TextField({
                    allowBlank: false
                })
            ");
        } else {

            $OBJECT_GRID->addColumn("
                header: '<b>".FIRSTNAME."</b>',
                dataIndex: 'FIRSTNAME',
                width: 120,
                align: 'left',
                renderer: renderText,
                editor: new Ext.form.TextField({
                    allowBlank: false
                })
            ");

            $OBJECT_GRID->addColumn("
                header: '<b>".LASTNAME."</b>',
                dataIndex: 'LASTNAME',
                width: 120,
                align: 'left',
                renderer: renderText,
                editor: new Ext.form.TextField({
                    allowBlank: false
                })
            ");
        }

        $OBJECT_GRID->addColumn("
            header: '<b>".GENDER."</b>',
            dataIndex: 'GENDER',
            width: 120,
            align: 'left',
            renderer: renderText,
            editor: new Ext.form.ComboBox({
                triggerAction:'all'
                ,mode:'local'
                ,store: new Ext.data.JsonStore({
                    autoDestroy: true
                    ,fields: ['chooseValue', 'chooseDisplay']
                    ,data:[{chooseValue: '0', chooseDisplay: '---'},{chooseValue: '1', chooseDisplay: '".MALE."'},{chooseValue: '2', chooseDisplay: '".FEMALE."'}]
                })
                ,valueField: 'chooseValue'
                ,displayField: 'chooseDisplay'
                ,editable: false
                ,listeners: {
                    select: function(combo, record, index) {
                        replaceValue = combo.getValue();
                        var newDisplay = record.get('chooseDisplay');
                        combo.setValue(newDisplay);
                    }
                }
            })
        ");


        $OBJECT_GRID->addColumn("
            header: '<b>".PHONE."</b>',
            dataIndex: 'PHONE',
            width: 120,
            align: 'left',
            renderer: renderText,
                editor: new Ext.form.TextField({
                allowBlank: false
            })
        ");

        $OBJECT_GRID->addColumn("
            header: '<b>".EMAIL."</b>',
            dataIndex: 'EMAIL',
            width: 120,
            align: 'left',
            renderer: renderText,
            editor: new Ext.form.TextField({
                allowBlank: false
            })
        ");

        $OBJECT_GRID->addColumn("header: '<b>".ADDRESS."</b>', align:'left', width: 100, renderer: renderText, sortable: true, dataIndex: 'ADDRESS'");

        $OBJECT_GRID->setAftereditCallback("
            XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
            //Ext.getCmp('STUDENT_PRESCHOOL_IMPORT_ID').store.reload();
        ");

        $OBJECT_GRID->forceFit = "false";
        //$OBJECT_GRID->removeNAME = "STAFF";
        $OBJECT_GRID->isGridEditing = true;
        $OBJECT_GRID->isCheckboxSelect = true;
        $OBJECT_GRID->isQuickySearch = true;

        $OBJECT_GRID->baseParams = "
            start:0
            ,limit:100
            ,type: 'PRE_SCHOOL'
            ,cmd: 'importStudents'
        ";

        if (UserAuth::getACLValue("PRE_SCHOOL_REMOVE_RIGHT"))
        $OBJECT_GRID->addTBarItems("
            tbar.add(['-',{
                id: 'REMOVE_ALL_STUDENTS_ID'
                ,text: '".REMOVE_IMPORT_LIST."'
                ,iconCls:'icon-delete'
                ,scope:this
                ,handler: this.onRemoveSelection
                ,disabled: '" . $disabledButton . "'
            }]);
        ");

        if (UserAuth::getACLValue("PRE_SCHOOL_EXECUTE_RIGHT"))
        $OBJECT_GRID->addTBarItems("
            tbar.add(['-',{
                id: 'ADD_STUDENT_ID'
                ,text: '".APPLY_INTO_LIST_OF_STUDENTS."'
                ,iconCls:'icon-disk'
                ,scope:this
                ,handler: this.onSelection
                ,disabled: '" . $disabledButton . "'
            }]);
        ");

        $OBJECT_GRID->setSelectionParams("
            cmd: 'jsonAddPreSchoolStudentDB'
        ");

        $OBJECT_GRID->setRemoveSelectionParams("
            cmd: 'jsonRemoveStudentsFromImport'
        ");

        $OBJECT_GRID->setSelectionEmbeddedEvents("
            Ext.getCmp('STUDENT_PRESCHOOL_IMPORT_ID').store.reload();
        ");

        $OBJECT_GRID->addTBarItems("
            tbar.add('->');
        ");

        $OBJECT_GRID->renderJS();

        $formItems = "
        [{
            xtype: 'fileuploadfield'
            ,id: 'form-file'
            ,emptyText: '".SELECT_AN_XLS_FILE."'
            ,fieldLabel: '".FILE."'
            ,name: 'xlsfile'
            ,buttonText: ''
            ,buttonCfg: {
                iconCls: 'upload-icon'
            }
        },{
            ".CamemisField::Datefield('CREATED_DATE',CREATED_DATE,false)."
        }]
        ";
        ?>
        var fp = new Ext.FormPanel({
            fileUpload: true
            ,labelAlign: 'left'
            ,border: true
            ,width:335
            ,autoHeight: true
            ,title: ''
            ,bodyStyle: 'background:<?=CamemisPage::userFormBgColor();?>; padding: 10px 10px 0 10px;'
            ,labelWidth:140
            ,defaults: {
                anchor: '95%'
                ,allowBlank: false
                ,msgTarget: 'side'
            },
            items: <?=$formItems;?>
            ,tbar: [{
                text: '<?=EXCEL_TEMPLATE?>'
                ,iconCls:'icon-table_save'
                ,handler: function(){
                    window.location='<?=$this->URL_TEMPLATE_XLS?>';
                }
            },'-',{
                text: '<?=RESET;?>'
                ,iconCls:'icon-arrow_undo'
                ,handler: function(){
                    fp.getForm().reset();
                }
            },'-',{
                text: '<?=UPLOAD?>'
                ,iconCls:'icon-disk'
                ,disabled: false
                ,handler: function(){

                    if(fp.getForm().isValid()){

                        Ext.Ajax.request({
                            url: '/studentpreschool/jsonimport'
                            ,isUpload: true
                            ,headers: {'Content-type':'multipart/form-data'}
                            ,method: 'POST'
                            ,params:{cmd: 'importXLS',type:'PRE_SCHOOL'}
                            ,waitMsg: 'Uploading your file...'
                            ,form: fp.getForm().getEl().dom
                            ,success: function(response, options) {
                                window.location='<?=$this->URL_STUDENT_PRESCHOOL_IMPORT?>';
                            }
                        });
                    }
                }
            },'-',{
                text: '<?=CANCEL;?>'
                ,id: 'RE_CANCEL_ID'
                ,formBind:true
                ,iconCls:'icon-cancel'
                ,scope:this
                ,handler: function(){window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);}
            }]
        });

        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout:'border'
                ,border: false
                ,defaults: {
                    collapsible: true
                    ,split: true
                },
                items: [{
                    title: ''
                    ,bodyStyle: 'background:<?=CamemisPage::userFormBgColor();?>;padding:5px'
                    ,region: 'west'
                    ,width:350
                    ,minSize:350
                    ,maxSize:350
                    ,cmargins: '3 3 3 3'
                    ,margins: '3 0 3 3'
                    ,items:[{
                        border: false
                        ,bodyStyle: 'background:<?=CamemisPage::userFormBgColor();?>;'
                        ,layout:'form'
                        ,items: fp
                    }]
                },{
                    title: '<?=IMPORT_RESULT?>'
                    ,collapsible: false
                    ,region:'center'
                    ,margins: '3 3 3 0'
                    ,layout: 'fit'
                    ,items:[{
                        layout: 'fit'
                        ,xtype: '<?=$OBJECT_GRID->getObjectXType();?>'
                    }]
                }]
            }]
        });
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>