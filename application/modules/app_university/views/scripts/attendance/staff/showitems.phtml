<?
///////////////////////////////////////////////////////////
// @Sea Peng
// Date: 06.08.2013
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_FORM = new CamemisForm("ATTENDANCE_MANAGEMENT");
$OBJECT_FORM->setLoadUrl('/attendance/jsonload/');

$OBJECT_GRID = new CamemisGrid("ATTENDANCE_MANAGEMENT", "LIST");
$OBJECT_GRID->setLoadUrl("/attendance/jsonload/");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>

<script>

    var code = '';
    var staffSchoolId= '';
    var firstname= '';
    var lastname= '';
    var startDate;
    var endDate;
    var attendanceType = '';
    
    function geFormat(data){
        return date.getFullYear() + '-' + (parseInt(date.getMonth()) + 1) + '-' + date.getDate();
    }
    Ext.apply(Ext.form.VTypes, {
        daterange : function(val, field) {
            var date = field.parseDate(val);
            if(!date){
                return false;
            }
            if (field.startDateField) {
                var start = Ext.getCmp(field.startDateField);
                if (!start.maxValue || (date.getTime() !== start.maxValue.getTime())) {
                    start.setMaxValue(date);
                    start.validate();
                }
            }
            else if (field.endDateField) {
                var end = Ext.getCmp(field.endDateField);
                if (!end.minValue || (date.getTime() !== end.minValue.getTime())) {
                    end.setMinValue(date);
                    end.validate();
                }
            }
            return true;
        }
    });
    
    Ext.onReady(function() {
        
        function cssTextBold(value, metadata, record){
            var name = record.data.STAFF;
            metadata.attr = 'ext:qtip="' + name + '"';
            return '<div style="font-weight:normal; color:#333; padding: 5px;">' + value + '</div>';
        }

        function cssTextBlue(value, metadata, record){
            var name = record.data.STAFF;
            metadata.attr = 'ext:qtip="' + name + '"';
            return '<div style="font-weight:normal; color:#061f83; padding: 5px;">' + value + '</div>';
        }

        function cssText(value, metadata, record){
            var name = record.data.STAFF;
            metadata.attr = 'ext:qtip="' + name + '"';
            return '<div style="font-weight:normal; color:#333; padding: 5px;">' + value + '</div>';
        }
        
        function cssTextRed(value, metadata, record){
            var name = record.data.STAFF;
            metadata.attr = 'ext:qtip="' + name + '"';
            return '<div style="font-weight:normal; color:#CC0000; padding: 5px;">' + value + '</div>';
        }

        <?
        /**
        * Extjs: s.gif
        */
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
        
        ///////////////////////////////////////////////////
        //Grid...
        ///////////////////////////////////////////////////
        
        $OBJECT_GRID->addReadField("name: 'STAFF', type: 'string'");
        $OBJECT_GRID->addReadField("name: 'ABSENT_ID'");
        $OBJECT_GRID->addReadField("name: 'STAFF_ID'");
        $OBJECT_GRID->addReadField("name: 'DATE'");
        $OBJECT_GRID->addReadField("name: 'COUNT_DATE'");
        $OBJECT_GRID->addReadField("name: 'ABSENT_TYPE'");
        
        $OBJECT_GRID->addColumn("header: '<b>".FULL_NAME."</b>', width: 190, renderer: cssTextBold, sortable: true, dataIndex: 'STAFF'");
        $OBJECT_GRID->addColumn("header: '<b>".ATTENDANCE_TYPE."</b>', align:'left', width: 180, sortable: true, renderer: cssTextBlue, dataIndex: 'ABSENT_TYPE'");
        $OBJECT_GRID->addColumn("header: '<b>".DATE."</b>', align:'right', width: 220, sortable: true, renderer: cssTextBlue, dataIndex: 'DATE'");
        $OBJECT_GRID->addColumn("header: '<b>".COUNT_DATE."</b>', align:'right', width: 100, sortable: true, renderer: cssTextRed, dataIndex: 'COUNT_DATE'");
        
        $OBJECT_GRID->addTBarItems("
            tbar.add([{
                id: 'REFRESH_ID'
                ,text: '".REFRESH."'
                ,iconCls:'icon-reload'
                ,scope:this
                ,disabled: false
                ,handler: function(){
                   Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
                }
            }]);
        ");
        
        $OBJECT_GRID->baseParams = "
            start:0
            ,limit:100
            ,cmd: 'jsonSearchStaffAttendance'
            ,objectId: '".$this->objectId."'
            ,actionType: 2
        ";
        
        if(UserAuth::getACLValue("STAFF_ATTENDANCE_EXECUTE_RIGHT")){
            $OBJECT_GRID->addTBarItems("
                tbar.add([{
                    text: '" . EXPORT_TO_EXCEL . "'
                    ,id: 'EXPORT_TO_EXCEL'
                    ,iconCls:'icon-page_excel'
                    ,handler: function(){
                        var param='';
                        if(code){ param +='&code=' + code;}
                        if(staffSchoolId){ param +='&staffSchoolId=' + staffSchoolId;}
                        if(firstname){param +='&firstname='+ firstname;}
                        if(lastname){param +='&lastname='+ lastname;}
                        if(startDate){param +='&startDate='+ startDate;}
                        if(endDate){param +='&endDate='+ endDate;}
                        if(attendanceType){param +='&attendanceType='+ attendanceType;}
                        openWinIFrame('" . EXPORT_TO_EXCEL . "','/export/teacherclass/?type=export_staff_attendance_university&target=export_staff_attendance&attendace=1' + param ,550,450);
                    }
                }]);
            ");
        }
        
        $OBJECT_GRID->isGroupingView = true;
        $OBJECT_GRID->groupField = "STAFF";
        $OBJECT_GRID->forceFit = "false";
        $OBJECT_GRID->renderJS();  
    
        ?>
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                border: false
                ,id: 'center'
                ,layout: 'card'
                ,activeItem: 0
                ,items: [{
                    layout: 'fit'
                    ,border: false
                    ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
                }]
            }]
        });
        var myGrid = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>');
        if (myGrid) myGrid.on('cellclick', function(grid, rowIndex, columnIndex, event) {
            var record = grid.store.getAt(rowIndex);
            hasHidden = (record.data.ABSENT_ID === "new")?true:false;
            showUrl = record.data.URL;
            var contextMenu = new Ext.menu.Menu({
                items: [{
                    text: '<?=SHOW_DETAIL;?> &raquo; ' + record.data.STAFF
                    ,iconCls:'icon-application_form_magnify'
                    ,hidden:hasHidden
                    ,handler:function(){
                        clickOpenPage('center','','/attendance/showbystaff/?staffId=' + record.data.ID +'&objectId=' + record.data.ABSENT_ID);
                    }
                }]
            });
            event.stopEvent();
            contextMenu.showAt(event.xy);
        });
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>