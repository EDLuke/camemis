<?
require_once("Zend/Loader.php");
require_once 'clients/CamemisPage.php';
require_once 'models/app_university/subject/SubjectDBAccess.php';
require_once setUserLoacalization();

$setId = isset($_GET["setId"]) ? $_GET["setId"] : "";

$Ids = explode("-",$setId);

$academicId = isset($Ids[0])?$Ids[0]:"";
$objectId = isset($Ids[1])?$Ids[1]:"";

$field = isset($_GET["field"])?strtoupper(addText($_GET["field"])):"";
$object = isset($_GET["object"]) ? $_GET["object"] : "";

$academicObject = AcademicDBAccess::findGradeFromId($academicId);
$subjectObject = SubjectDBAccess::getAcademicSubject($objectId, $academicId);
$DB_ACCESS = Zend_Registry::get('DB_ACCESS');
function checkTeacherSchedule($academicId, $subjectId){
    $SQL = Zend_Registry::get('DB_ACCESS')->select();
    $SQL->from('t_schedule', 'COUNT(*) AS C');
    $SQL->where("SUBJECT_ID = '" . $subjectId . "'");
    $SQL->where("TEACHER_ID = '" . Zend_Registry::get('USER')->ID . "'");
    $SQL->where("ACADEMIC_ID = '" . $academicId . "'");
    $result = Zend_Registry::get('DB_ACCESS')->fetchRow($SQL);
    //error_log($SQL);
    return $result ? $result->C : 0;
}

function checkTeacherSubjectConment($academicId, $subjectId){
    $SQL = Zend_Registry::get('DB_ACCESS')->select();
    $SQL->from('t_subject_teacher_content', array('*'));
    $SQL->where("SUBJECT = '" . $subjectId . "'");
    if(UserAuth::getUserType() == 'INSTRUCTOR' || UserAuth::getUserType() == 'TEACHER')
    {
    $SQL->where("TEACHER = '" . Zend_Registry::get('USER')->ID . "'");
    }
    $SQL->where("ACADEMIC = '" . $academicId . "'");
     //error_log($SQL);
    $result = Zend_Registry::get('DB_ACCESS')->fetchRow($SQL);
   
    return $result ? $result : 0;    
}



if(!$subjectObject) {header("Location: /main/permission/");}

$CHECK = checkTeacherSchedule($academicId, $objectId);
$checkTeacherConment=checkTeacherSubjectConment($academicId, $objectId);
$content = "";
///@veasna 

if($field && $subjectObject){    ///not yet check the teacher subject contents
   $content = $subjectObject->$field;     
}
if($field && $checkTeacherConment){    ///not yet check the teacher subject contents
   $content = $checkTeacherConment->$field;     
}
//error_log($content);
///
if ($_POST){

    $field = isset($_POST["field"])?addText($_POST["field"]):"";
    $object = isset($_POST["object"])?addText($_POST["object"]):"";
    //$objectId = isset($_GET["objectId"]) ? addText($_GET["objectId"]) : "";
    
    $subjectObject = SubjectDBAccess::getAcademicSubject($objectId, $acdemicId);

    if($subjectObject){
       
        $SAVEDATA = array();
        $SAVEDATA_SUBJECT = array();
        $WHERE = array();
        $WHERE_SUBJECT = array();
        $postedValue = stripslashes(addText($_POST["content"])) ;

        $SAVEDATA[$field] = $postedValue;
        $WHERE[] = $DB_ACCESS->quoteInto('ID = ?', $objectId);
        $WHERE_SUBJECT[] = $DB_ACCESS->quoteInto('SUBJECT = ?', $objectId);

        switch($object){
            case "gradesubject":  
                
                if(UserAuth::getUserType() == 'SUPERADMIN' || UserAuth::getUserType() == 'ADMIN'){
                    
                    $DB_ACCESS->update('t_grade_subject', $SAVEDATA, $WHERE);
                }
                
                if(UserAuth::getUserType() == 'INSTRUCTOR' || UserAuth::getUserType() == 'TEACHER'){
                    
                    $SAVEDATA_SUBJECT['SUBJECT'] = $objectId;
                    $SAVEDATA_SUBJECT['TEACHER'] = Zend_Registry::get('USER')->ID;
                    $SAVEDATA_SUBJECT['ACADEMIC'] = $acdemicId;

                    if ($field == 'GOALS')
                        $SAVEDATA_SUBJECT['GOALS'] = $SAVEDATA[$field];
                    if ($field == 'OBJECTIVES')
                        $SAVEDATA_SUBJECT['OBJECTIVES'] = $SAVEDATA[$field];
                    if ($field == 'EVALUATION')
                        $SAVEDATA_SUBJECT['EVALUATION'] = $SAVEDATA[$field];
                    if ($field == 'MATERIALS')
                        $SAVEDATA_SUBJECT['MATERIALS'] = $SAVEDATA[$field];
                    
                    
                    if($checkTeacherConment){
                         
                        $DB_ACCESS->update('t_subject_teacher_content', $SAVEDATA_SUBJECT,$WHERE_SUBJECT);
                    }
                    else{
                         
                        $DB_ACCESS->insert('t_subject_teacher_content', $SAVEDATA_SUBJECT); 
                    }
                   
                }
            break;

        }
        header("Location: ".$_SERVER['REQUEST_URI']."?&field=".$field."&setId=".$academicId."-".$objectId."&object=".$object."");
        exit;
    }
}

$SHOW_EDITOR = "";

switch(UserAuth::getUserType()){
    case 'SUPERADMIN':
    case 'ADMIN':
    case 'STUDENT':
        $SHOW_EDITOR = "
            CKEDITOR.replace( 'content',{
                language:'".CamemisPage::ckeditorLanguage()."'
                ,height:350
                ,readOnly: true
                ,uiColor: '#e0e7f7'
                ,toolbar :
                [
                    { name: 'document', items : [ 'Print','-','Templates' ] }
                    ,{ name: 'basicstyles', items : [ 'Bold','Italic' ] }
                    ,{ name: 'paragraph', items : [ 'NumberedList','BulletedList' ] }
                    ,{ name: 'insert', items : [ 'Table','HorizontalRule','SpecialChar','PageBreak'] }
                    ,{ name: 'tools', items : [ 'Maximize','-','About' ] }
                ]
            });
        ";
        break;
    case 'INSTRUCTOR':
    case 'TEACHER':
        if($CHECK)
        $SHOW_EDITOR = "
            CKEDITOR.replace( 'content',{
                language:'".CamemisPage::ckeditorLanguage()."'
                ,height:350
                ,uiColor: '#e0e7f7'
                ,toolbar :
                [
                    { name: 'document', items : [ 'Save','NewPage','DocProps','Preview','Print','-','Templates' ] }
                    ,{ name: 'basicstyles', items : [ 'Bold','Italic' ] }
                    ,{ name: 'paragraph', items : [ 'NumberedList','BulletedList' ] }
                    ,{ name: 'insert', items : [ 'Table','HorizontalRule','SpecialChar','PageBreak'] }
                    ,{ name: 'tools', items : [ 'Maximize','-','About' ] }
                ]
            });
        "; 
        if(!$CHECK)
        $SHOW_EDITOR = "
            CKEDITOR.replace( 'content',{
                language:'".CamemisPage::ckeditorLanguage()."'
                ,height:350
                ,readOnly: true
                ,uiColor: '#e0e7f7'
                ,toolbar :
                [
                    { name: 'document', items : [ 'Print','-','Templates' ] }
                    ,{ name: 'basicstyles', items : [ 'Bold','Italic' ] }
                    ,{ name: 'paragraph', items : [ 'NumberedList','BulletedList' ] }
                    ,{ name: 'insert', items : [ 'Table','HorizontalRule','SpecialChar','PageBreak'] }
                    ,{ name: 'tools', items : [ 'Maximize','-','About' ] }
                ]
            });
        ";
    break;
}

?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--
Copyright (c) 2003-2012, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.html or http://ckeditor.com/license
-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>CAMEMIS</title>
<meta content="text/html; charset=utf-8" http-equiv="content-type" />
<script type="text/javascript" src="/public/ckeditor/ckeditor.js"></script>
<link href="/public/ckeditor/samples/sample.css" rel="stylesheet" type="text/css" />
</head>
<body style='background:#e0e7f7;'>
   <form action="" method="post">
    <textarea id="content" name="content"><?=$content;?></textarea>
    <script type="text/javascript">
        //<![CDATA[ 
        CKEDITOR.on('instanceReady',function(evt){
            var editor = evt.editor;
            editor.execCommand('maximize');
        });
        <?= $SHOW_EDITOR;?>
        //]]>
    </script> 
    <input type="hidden" name="field" value="<?=$field;?>">
    <input type="hidden" name="gradeSubjectId" value="<?=$objectId;?>">
    <input type="hidden" name="object" value="<?=$object;?>">  
    </form>
</body>
</html>