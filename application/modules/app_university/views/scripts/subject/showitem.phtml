<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once 'models/app_university/DepartmentDBAccess.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_FORM = new CamemisForm("SUBJECT");
$OBJECT_FORM->setLoadUrl('/subject/jsonload/');
$OBJECT_FORM->setSaveUrl('/subject/jsonsave/');

$PREREQUISITE_TREE = new CamemisTree("SUBJECT", "LIST");
$PREREQUISITE_TREE->setURL("/subject/jsontree/");

$hasChild = SubjectDBAccess::checkChild($this->objectId);

$OBJECT_DATA = $this->objectData;

$HIDDEN_SCORE_ON_NUMBER = "true";
$HIDDEN_SCORE_ON_ALPHABET = "true";
    
$removeStatus = true;
if ($this->facette) {
    $reloadId = $this->facette->PARENT;
    $status = $this->facette->STATUS;
    if ($status){
        $removeStatus = false;
    }else{
        $removeStatus = true;
    }
    
    $HIDDEN_SCORE_ON_NUMBER = ($this->facette->SCORE_TYPE==1)?"false":"true";
    $HIDDEN_SCORE_ON_ALPHABET = ($this->facette->SCORE_TYPE==2)?"false":"true";
    $HIDDEN_TRADITINAL = $this->facette->EDUCATION_SYSTEM?true:false;
    $HIDDEN_CREDIT = $this->facette->EDUCATION_SYSTEM?false:true;
    
} else {
    $reloadId = $this->parentId;
    $status = false;
    $HIDDEN_TRADITINAL = false;
    $HIDDEN_CREDIT = true;
}

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
Ext.onReady(function() {
    
    function getTreeNode(tree){
        var firstTree = tree.getNodeById('QUALIFICATION_TYPE_<?=$reloadId;?>');
        var secondTree = tree.getNodeById('<?=$reloadId;?>');
        if(firstTree){
            return firstTree;
        }else if(secondTree){
            return secondTree;
        } 
    }
    
    function cssText(value, metadata, record){
        return '<div style="font-weight:normal; color:#333; padding: 5px;">' + value + '</div>';
    }
    <?
    /**
    * Extjs: s.gif
    */
    
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $ITEMS = "[";
    if($hasChild || $this->objectId == "new"){
        $ITEMS .= "
            {".CamemisField::Textfield("SHORT_ID", "SHORT", SHORT, true)."}
            ,{".CamemisField::Textfield("NAME_ID", "NAME", NAME, true)."}
        ";
    }else{
        $ITEMS .= "
            {".CamemisField::Textfield("SHORT_ID", "SHORT", SHORT, true)."}
            ,{".CamemisField::Textfield("NAME_ID", "NAME", NAME, true)."}
            ,{".CamemisField::ComboQualificationType(false, false, false)."}    
            ,{".CamemisField::ComboSubjectType(TYPE, false, false, false)."}
            ,{".CamemisField::Numberfield("NUMBER_CREDIT", "NUMBER_CREDIT", NUMBER_CREDIT, false, false, false) . "}
            ,{".CamemisField::comboScoreType(1, false)."}
            ,{".CamemisField::Colorfield("COLOR", COLOR, false)."}
            ,{".CamemisField::Combo("DEPARTMENT",FACULTY_OR_DEPARTMENT,DepartmentDBAccess::getComboDataDepartment(true),false,false,false)."}
        ";
    }
    $ITEMS .= "]";
    
    $DETAIL_INFORMATION = "
    {
        title: '".DETAIL_INFORMATION."'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,items:[{
            layout: 'form'
            ,border: false
            ,autoHeight:true
            ,bodyStyle: 'padding:10px'
            ,items: ".$ITEMS."
        }]
    }
    ";
    
    $ADDITIONAL_EVALUATION = "
    {
        title: '".COEFFICIENT_SETTING."'
        ,id: 'ADDITIONAL_EVALUATION'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,items:[{
            layout: 'form'
            ,border: false
            ,autoHeight:true
            ,bodyStyle: 'padding:10px'
            ,items: [
                {".CamemisField::comboMathematicalOperation(1)."}
                ,{".CamemisField::Numberfield("COEFF_VALUE","COEFF_VALUE", VALUE, false, 1, false)."}
            ]
        }]
    }
    ";
    
    $SCORE_NUMBER = "
    {
        title: '".SCORE_ON_NUMBER."'
        ,id:'SCORE_ON_NUMBER'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,hidden:".$HIDDEN_SCORE_ON_NUMBER."
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,items:[{
            layout: 'form'
            ,border: false
            ,autoHeight:true
            ,bodyStyle: 'padding:10px'
            ,items: [
                {".CamemisField::Numberfield("SCORE_MIN","SCORE_MIN", MIN_POINTS, false, false, false, false)."}
                ,{".CamemisField::Numberfield("SCORE_MAX","SCORE_MAX", MAX_POINTS, false, false, false, false)."}
            ]
        }]
    }
    ";
    
    $SCORE_ALPHABET = "
    {
        title: '".SCORE_ON_ALPHABET."'
        ,id:'SCORE_ON_ALPHABET'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,hidden:".$HIDDEN_SCORE_ON_ALPHABET."
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,items:[{
            layout: 'form'
            ,border: false
            ,autoHeight:true
            ,bodyStyle: 'padding:10px'
            ,items: [
                {".CamemisField::Textarea("MAX_POSSIBLE_SCORE", POINTS_POSSIBLE, 50)."}
            ]
        }]
    }
    ";
    
    //@veasna 
    ////////////////////////////////////////////////////////////////////////////
    $PREREQUISITE_TREE->isAsyncTreeNode = false;
    $PREREQUISITE_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
    $PREREQUISITE_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $PREREQUISITE_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());
    $PREREQUISITE_TREE->setBaseParams("
    	cmd: 'treeAllSubjects'
        ,requisiteId:'".$this->objectId."'
    ");
    
    $PREREQUISITE_TREE->backgroundColor = "#F9F9F9";
    $PREREQUISITE_TREE->isTreeExpand = true;
    $PREREQUISITE_TREE->isOnClickContextMenu = false;
    $PREREQUISITE_TREE->renderJS();
    
    $PRE_REQUISITE_COURSE = "
    {
        title: '".PRE_REQUISITE_COURSE."'
        ,collapsible: true
        ,collapsed: false
        ,height:450
        ,layout:'fit'
        ,style: 'padding-bottom:5px'
        ,width: 550
        ,items:[{xtype: '".$PREREQUISITE_TREE->getObjectXtype()."'}]
    }";
    //

    $CREATED = "
    {
        title: '".CREATED."'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,iconCls:'icon-about'
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,bodyStyle: 'padding:5px'
        ,items:[{
            layout: 'form'
            ,border: false
            ,autoHeight:true
            ,frame:true
            ,bodyStyle: 'padding:10px'
            ,items:[{
                ".CamemisField::Displayfield("CREATED_DATE",CREATED_DATE,"".$OBJECT_DATA["CREATED_DATE"]."")."
            },{
                ".CamemisField::Displayfield("CREATED_BY",CREATED_BY,"".$OBJECT_DATA["CREATED_BY"]."")."
            }]
        }]
    }
    ";
    
    $MODIFIED = "
    {
        title: '".MODIFIED."'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,iconCls:'icon-about'
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,bodyStyle: 'padding:5px'
        ,items:[{
            layout: 'form'
            ,border: false
            ,autoHeight:true
            ,frame:true
            ,bodyStyle: 'padding:10px'
            ,items:[{
                ".CamemisField::Displayfield("MODIFY_DATE",MODIFY_DATE,"".$OBJECT_DATA["MODIFY_DATE"]."")."
            },{
                ".CamemisField::Displayfield("MODIFY_BY",MODIFY_BY,"".$OBJECT_DATA["MODIFY_BY"]."")."
            }]
        }]
    }
    ";
    
    $ENABLED = "
    {
        title: '".ENABLED."'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,iconCls:'icon-about'
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,bodyStyle: 'padding:5px'
        ,items:[{
            layout: 'form'
            ,border: false
            ,autoHeight:true
            ,frame:true
            ,bodyStyle: 'padding:10px'
            ,items:[{
                ".CamemisField::Displayfield("ENABLED_DATE",ENABLED_DATE,"".$OBJECT_DATA["ENABLED_DATE"]."")."
            },{
                ".CamemisField::Displayfield("ENABLED_BY",ENABLED_BY,"".$OBJECT_DATA["ENABLED_BY"]."")."
            }]
        }]
    }
    ";
    
    $DISABLED = "
    {
        title: '".DISABLED."'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,iconCls:'icon-about'
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,bodyStyle: 'padding:5px'
        ,items:[{
            layout: 'form'
            ,border: false
            ,autoHeight:true
            ,frame:true
            ,bodyStyle: 'padding:10px'
            ,items:[{
                ".CamemisField::Displayfield("DISABLED_DATE",DISABLED_DATE,"".$OBJECT_DATA["DISABLED_DATE"]."")."
            },{
                ".CamemisField::Displayfield("DISABLED_BY",DISABLED_BY,"".$OBJECT_DATA["DISABLED_BY"]."")."
            }]
        }]
    }
    ";
    
    $FORM_ITEMS = "[";
    $FORM_ITEMS .= $DETAIL_INFORMATION;
    
    if($this->facette){
        
        if(!$this->hasChildren){
            $FORM_ITEMS .= ",".$ADDITIONAL_EVALUATION;
        }
        $FORM_ITEMS .= ",".$SCORE_NUMBER;
        $FORM_ITEMS .= ",".$SCORE_ALPHABET;
        $FORM_ITEMS .= ",".$PRE_REQUISITE_COURSE;   
        $FORM_ITEMS .= ",".$CREATED;  
        $FORM_ITEMS .= ",".$MODIFIED;  
        $FORM_ITEMS .= ",".$ENABLED;  
        $FORM_ITEMS .= ",".$DISABLED;  
    }
    $FORM_ITEMS .= "]";
    
    $items = "
        border: false
        ,id: 'FORM_ITEMS'
        ,bodyStyle: 'padding:0px'
        ,items: ".$FORM_ITEMS."
    ";
    $OBJECT_FORM->addObjectItems($items);
    $OBJECT_FORM->addTBarItems("
        text: '".CANCEL."'
        ,id: 'CANCEL_ID'
        ,formBind:true
        ,iconCls:'icon-cancel'
        ,scope:this
        ,handler: function(){window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);}
    ");
    
    if ($this->objectId<>'new'){
    if (UserAuth::getACLValue("ACADEMIC_SETTING_REMOVE_RIGHT"))
        $OBJECT_FORM->addTBarItems(CamemisBar::tbarFormRemoveObject($removeStatus));
    }
    if (UserAuth::getACLValue("ACADEMIC_SETTING_EXECUTE_RIGHT")){
        if($this->facette){
            $OBJECT_FORM->addTBarItems(CamemisBar::tbarSetRelease($status));
        }
    }
    
    //if (UserAuth::getACLValue("ACADEMIC_SETTING_EDIT_RIGHT"))
    $OBJECT_FORM->addTBarItems(CamemisBar::tbarSave());
    
    $OBJECT_FORM->setLoadParams("cmd: 'loadObject',objectId: '".$this->objectId."'");
    $OBJECT_FORM->setSaveParams("
        cmd: 'jsonActionSave'
        ,objectId: '".$this->objectId."'
        ,parentId: '".$this->parentId."'
        ,educationType:'".$this->educationType."'
    ");

    $OBJECT_FORM->setReleaseParams("cmd: 'releaseObject',objectId: '".$this->objectId."'");
    
    if($this->facette){
        $OBJECT_FORM->setonEmbeddedEvents("
            myTree = window.parent.Ext.getCmp('TREE.SUBJECT_LIST_ID');
            myNode = getTreeNode(myTree);
            if(myNode){
                myNode.reload();
                myNode.expand(true, false);
            }
            ".camemisPage::setRequestURI()."
        ");
        
        $OBJECT_FORM->setOnEmbeddedReleaseEvents("
            XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
            myTree = window.parent.Ext.getCmp('TREE.SUBJECT_LIST_ID');
            myNode = getTreeNode(myTree);
            if(myNode){
                myNode.reload();
                myNode.expand(true, false);
            }
            ".camemisPage::setRequestURI()."
        ");
        
        $OBJECT_FORM->setOnEmbeddedRemoveEvents("
            XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
            myTree = window.parent.Ext.getCmp('TREE.SUBJECT_LIST_ID');
            myNode = getTreeNode(myTree);
            if(myNode){
                myNode.reload();
                myNode.expand(true, false);
            }
            window.parent.Ext.getCmp('center').getLayout().setActiveItem(0);
        ");
        
    }else{
        $OBJECT_FORM->setonEmbeddedEvents("
            XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
            myTree = window.parent.Ext.getCmp('TREE.SUBJECT_LIST_ID');
            myNode = getTreeNode(myTree);
            if(myNode){
                myNode.reload();
                myNode.expand(true, false);
            }else{
                window.parent.Ext.getCmp('TREE.SUBJECT_LIST_ID').root.reload();
            }
            var result = Ext.util.JSON.decode(action.response.responseText);
            var objectId = result.objectId;
            window.location='".$_SERVER["REQUEST_URI"]."&objectId='+objectId;
        "); 
    }

    $OBJECT_FORM->setRemoveParams("
        cmd: 'removeObject'
        ,objectId: '".$this->objectId."'
    ");
    
    $OBJECT_FORM->isObjectDefaultOnLoad = $this->facette?true:false;
    $OBJECT_FORM->labelAlign = "left";
    $OBJECT_FORM->labelWidth = 150;
    $OBJECT_FORM->renderJS();
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items: [{
            xtype: 'panel'
            ,id: 'panel'
            ,border: false
            ,layout: 'card'
            ,activeItem: 0
            ,items: [{
                layout: 'fit'
                ,border: false
                ,items: [{xtype: '<?=$OBJECT_FORM->getObjectXType();?>'}]
            }]
        }]
    });
    
    if (Ext.getCmp('EDUCATION_SYSTEM')) Ext.getCmp('EDUCATION_SYSTEM').on('select', function() {
        if(Ext.getCmp('EDUCATION_SYSTEM').getValue() == 1){
            Ext.getCmp('NUMBER_SESSION').hide();    
            Ext.getCmp('NUMBER_CREDIT').show();    
        }else{
            Ext.getCmp('NUMBER_SESSION').show();    
            Ext.getCmp('NUMBER_CREDIT').hide();     
        }
    });
    if (Ext.getCmp('SCORE_TYPE')) Ext.getCmp('SCORE_TYPE').on('select', function() {
        if(Ext.getCmp('SCORE_TYPE').getValue() == 1){
            Ext.getCmp('SCORE_ON_ALPHABET').hide();    
            Ext.getCmp('SCORE_ON_NUMBER').show();    
        }else{
            Ext.getCmp('SCORE_ON_ALPHABET').show();    
            Ext.getCmp('SCORE_ON_NUMBER').hide();     
        }
        
        if (Ext.getCmp('MAX_POSSIBLE_SCORE_ID')) Ext.getCmp('MAX_POSSIBLE_SCORE_ID').setValue('');  
    });
    
    var tree = Ext.getCmp('<?=$PREREQUISITE_TREE->getObjectId()?>');
    if (tree) tree.on('checkchange', function(node, checked){
        
        var selecteds = '', selNodes = tree.getChecked();
        Ext.each(selNodes, function(node){
            if(selecteds.length > 0){
                selecteds += ',';
            }
            selecteds += node.id;
        });
        Ext.Ajax.request({
            url: '/subject/jsonsave/'
            ,method: 'POST'
            ,scope:this
            ,params: {
                cmd: 'actionPreRequisite2Subject'
                ,selecteds: selecteds
                ,objectId: '<?=$this->objectId;?>'
            }
            ,success: function(response, options) {
                XMsg('<?=STATUS?>','<?=ACTION_SUCCESSFULLY_SAVED?>'); 
            }
        });
    });
    
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>