<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_TREE = new CamemisTree("SUBJECT", "LIST");
$OBJECT_TREE->setURL("/subject/jsontree/");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
var subjectId = null;
var clickId;
Ext.onReady(function() {
    var fp = new Ext.FormPanel({
        fileUpload: true
        ,labelAlign: 'left'
        ,border: true
        ,width: 500
        ,height: 200
        ,title: ''
        ,bodyStyle: 'padding:10px'
        ,labelWidth:100
        ,defaults: {
            anchor: '95%'
            ,allowBlank: false
            ,msgTarget: 'side'
        },
        items: [{
            xtype: 'fileuploadfield'
            ,id: 'form-file'
            ,emptyText: '<?=SELECT_AN_XLS_FILE?>'
            ,fieldLabel: '<?=FILE?>'
            ,name: 'xlsfile'
            ,buttonText: ''
            ,buttonCfg: {
                iconCls: 'upload-icon'
            }
        }]
        ,tbar: [{
            text: '<?=RESET;?>'
            ,iconCls:'icon-arrow_undo'
            ,handler: function(){
                fp.getForm().reset();
            }
        },{
            text: '<?=UPLOAD?>'
            ,id: 'UPLOAD'
            ,iconCls:'icon-disk'
            ,disabled: false
            ,handler: function(){
                if(fp.getForm().isValid()){
                    Ext.Ajax.request({
                        url: '/subject/jsonimport/'
                        ,isUpload: true
                        ,headers: {'Content-type':'multipart/form-data'}
                        ,method: 'POST'
                        ,params:{cmd: 'importXLS', parentId:parentId}
                        ,waitMsg: 'Uploading your file...'
                        ,form: fp.getForm().getEl().dom
                        ,success: function(response, options) {
                            <?=CamemisPage::setRequestURI(false);?>
                        }
                        ,failure: function(response, options) { console.log('fail'); }
                    });
                }
            }
        }]
    });
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $OBJECT_TREE->isAsyncTreeNode = false;
    $OBJECT_TREE->addTBarItems("
        scope:this
        ,text:'".REFRESH."'
        ,iconCls:'icon-arrow_refresh'
        ,handler: function(){
            ".CamemisPage::setRequestURI(false)."
        }
    ");
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $OBJECT_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());
    $OBJECT_TREE->addTBarItems("
        xtype: 'buttongroup'
        ,keys:{
            key:[13]
            ,fn: function(){
                ".$OBJECT_TREE->ExtgetCmp().".loader.baseParams.query = document.getElementById('query').value;
                ".$OBJECT_TREE->ExtgetCmp().".root.reload();
                ".$OBJECT_TREE->ExtgetCmp().".getRootNode().expand(true, false);
            }
            ,scope:this
        }
        ,items:[{
            xtype:'textfield'
            ,id:'query'
            ,emptyText: '".ENTER_NAME_OR_CODEID."'
            ,width:120
        },{
            iconCls:'icon-find'
            ,tooltip:'".SEARCH."'
            ,handler: function(){
                ".$OBJECT_TREE->ExtgetCmp().".loader.baseParams.query = document.getElementById('query').value;
                ".$OBJECT_TREE->ExtgetCmp().".root.reload();
                ".$OBJECT_TREE->ExtgetCmp().".getRootNode().expand(true, false);
            }
        }]
    ");
    
    $OBJECT_TREE->setSaveParams("
        cmd: 'addObject'
        ,parentId:parentId
    ");
    
    $OBJECT_TREE->setOnEmbeddedEvents("
        myTree = Ext.getCmp('TREE.SUBJECT_LIST_ID');
        myNode = myTree.getNodeById(parentId);
        myNode.reload();
        myNode.expand(true, false);
        myNode.setText(action.result.text);
    ");
    
    $OBJECT_TREE->setBaseParams("
    	cmd: 'treeAllSubjects'
    ");
    
    $OBJECT_TREE->backgroundColor = "#F9F9F9";
    $OBJECT_TREE->isTreeExpand = false;
    $OBJECT_TREE->isOnClickContextMenu = false;
    $OBJECT_TREE->renderJS();
    
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            }
            ,items: [{
               	region:'west'
                ,title:'<?=SUBJECT?>'
                ,margins: '3 0 3 3'
                ,cmargins: '3 3 3 3'
                ,width:280
                ,minSize:280
                ,maxSize:280
                ,layout: 'fit'
                ,items:[{xtype: '<?=$OBJECT_TREE->getObjectXtype();?>'}]
            },{
               	collapsible: false
                ,id: 'center'
                ,region:'center'
                ,margins: '3 3 3 0'
                ,layout: 'card'
                ,activeItem: 0
                ,items: [{
                    border: false
                    ,layout: 'anchor'
                    ,bodyStyle: 'background:#FFFFFF; padding:25px;'
                    ,items: [{
                        title: ''
                        ,height:60
                        ,width:500
                        ,bodyStyle: 'background:#F9F9F9; padding:10px; border:1px dotted #999;text-align:center;'
                        ,html:'<h1 class="header"><?=PLEASE_MAKE_YOUR_SELECTIONS;?></h1>'
                    }]
                }]
            }]
        }]
    });
    
    var myTree = <?=$OBJECT_TREE->ExtgetCmp();?>;
    myTree.on('click', function(node, e){
        
        parentId = node.attributes.parentId;
        clickId = node.id;
        
        switch(node.attributes.type){
            case "qualification":
                var contextMenu = new Ext.menu.Menu({
                    items: [{
                        text: '<?=ADD_A_NEW_ITEM;?>'
                        ,iconCls:'icon-application_form_add'
                        ,handler: function(){
                            clickOpenPage('center','<?=ADD_A_NEW_ITEM?>', '<?=$this->URL_SHOWITEM?>objectId=new&educationType=' + parentId + '&parentId='+parentId);
                        }
                    },{
                        text: '<?=IMPORT_FROM_EXCEL;?>'
                        ,iconCls:'icon-database_copy'
                        ,menu:[{
                            text: '<?=EXCEL_TEMPLATE;?>'
                            ,iconCls:'icon-page_excel'
                            ,handler:function(){
                                window.location='/subject/templatexls';
                            }
                        },{
                            text: '<?=IMPORT;?>'
                            ,iconCls:'icon-database_save'
                            ,handler:function(){
                                if(!win){
                                    var win = new Ext.Window({
                                        layout:'fit'
                                        ,width:500
                                        ,height:200
                                        ,modal: true
                                        ,plain: true
                                        ,items:[{
                                            border: false
                                            ,layout:'form'
                                            ,items: fp
                                        }]
                                        ,fbar: ['->',{text: '<?=CLOSE?>',iconCls: 'icon-cancel',handler: function (){win.hide();}}]
                                    });
                                }
                                win.show(this);
                            }
                        }]
                    }]
                });
                e.stopEvent();
                contextMenu.showAt(e.xy);
            break;
            case "subject":
                var contextMenu = new Ext.menu.Menu({
                    items: [{
                        text: '<?=SHOW_DETAIL;?>'
                        ,iconCls:'icon-application_form_magnify'
                        ,handler:function(){
                            clickOpenPage('center','<?=SHOW_DETAIL?> &raquo; ' + node.text, '<?=$this->URL_SHOWITEM;?>objectId=' + node.id);
                        }
                    },{
                        text: '<?=ADD_A_NEW_ITEM;?>'
                        ,iconCls:'icon-application_form_add'
                        ,handler: function(){
                            clickOpenPage('center','<?=ADD_A_NEW_ITEM?>', '<?=$this->URL_SHOWITEM?>objectId=new&parentId=' + node.id);
                        }
                    },{
                        text: '<?=IMPORT_FROM_EXCEL;?>'
                        ,iconCls:'icon-database_copy'
                        ,menu:[{
                            text: '<?=EXCEL_TEMPLATE;?>'
                            ,iconCls:'icon-page_excel'
                            ,handler:function(){
                                window.location='/subject/templatexls';
                            }
                        },{
                            text: '<?=IMPORT;?>'
                            ,iconCls:'icon-database_save'
                            ,handler:function(){
                                if(!win){
                                    var win = new Ext.Window({
                                        layout:'fit'
                                        ,width:500
                                        ,height:200
                                        ,modal: true
                                        ,plain: true
                                        ,items:[{
                                            border: false
                                            ,layout:'form'
                                            ,items: fp
                                        }]
                                        ,fbar: ['->',{text: '<?=CLOSE?>',iconCls: 'icon-cancel',handler: function (){win.hide();}}]
                                    });
                                }
                                win.show(this);
                            }
                        }]
                    }]
                });
                e.stopEvent();
                contextMenu.showAt(e.xy);
            break;
        }
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>