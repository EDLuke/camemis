<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 10.11.2011
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once 'models/app_university/AcademicDateDBAccess.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$DB_SCHOOLYEAR = AcademicDateDBAccess::getInstance();
$DB_ACADEMIC = AcademicDBAccess::getInstance();

$OBJECT_GRID = new CamemisGrid("ACADEMIC", "LIST_OF_TEACHER");
$OBJECT_GRID->setLoadUrl('/academic/jsonload/');
$OBJECT_GRID->setSaveUrl('/academic/jsonsave/');

$OBJECT_DATA = $this->objectData;

$gradeId = isset($_GET["gradeId"])?addText($_GET["gradeId"]):"";
$schoolyearId = isset($_GET["schoolyearId"])?addText($_GET["schoolyearId"]):"";
$term = isset($_GET["term"])?$_GET["term"]:"";
$startDate = isset($_GET["startDate"])?$_GET["startDate"]:"";
$endDate = isset($_GET["endDate"])?$_GET["endDate"]:"";

$CURRENT_SCHOOLYEAR = $DB_SCHOOLYEAR->isCurrentSchoolyear($schoolyearId);

if ($CURRENT_SCHOOLYEAR){
    $DISABLED_TEACHER_CHANGE = "false";
}else{
    $DISABLED_TEACHER_CHANGE = "true";
}

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>

<script>
var teacherId = '<?=isset($_GET["teacherId"])?addText($_GET["teacherId"]):0?>';
Ext.chart.Chart.CHART_URL = '../public/<?=Zend_Registry::get('EXTJS_VERSION')?>/resources/charts.swf';
Ext.onReady(function() {
    
    function renderTextRed(v){
        return '<div style="font-weight:bold;color:#CC0000;">' + v + '</div>';
    }
    <?
    /**
     * Extjs: s.gif
     */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

    $OBJECT_GRID->addCellRenderer("
        function renderText(v, p, record, rowIndex){
            var str = '<span class=spanText>' + v + '</span>';
            return str;
        }
    ");
    
    $OBJECT_GRID->addReadField("name: 'FULL_NAME'");
    $OBJECT_GRID->addReadField("name: 'SCORE_SUBJECT_COUNT'");
    $OBJECT_GRID->addReadField("name: 'SUBJECT_COUNT'");
    $OBJECT_GRID->addReadField("name: 'CLASS'");
    
    $OBJECT_GRID->addColumn("header: '<b>".TOTAL."</b>', align:'center', menuDisabled : true, sortable: false, width:80, dataIndex: 'SCORE_SUBJECT_COUNT'");
    $OBJECT_GRID->addColumn("header: '<b>".SUBJECTS."</b>', align:'center', menuDisabled : true, sortable: false, width:80, dataIndex: 'SUBJECT_COUNT'");
    $OBJECT_GRID->addColumn("header: '<b>".FULL_NAME."</b>', hidden: false, align:'left', menuDisabled : true, sortable: true, width:180, dataIndex: 'FULL_NAME'");
    $OBJECT_GRID->addColumn("header: '<b>".GRADE_CLASS."</b>', align:'center', menuDisabled : true, sortable: false, width:100, dataIndex: 'CLASS'");
    
    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            text: '" . REFRESH . "'
            ,iconCls:'icon-reload'
            ,handler: function(){
                Ext.getCmp('" . $OBJECT_GRID->getObjectId() . "').store.reload();
            }
        }]);
    ");
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,gradeId: '".$gradeId."'
        ,term: '".$term."'
        ,startDate: '".$startDate."'
        ,endDate: '".$endDate."'
        ,schoolyearId: '".$schoolyearId."'
        ,cmd: 'jsonCheckTeacherScoreEnter'
    ";
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();
    
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            border: false
            ,title: ''
            ,layout: 'fit'
            ,id: 'CONTENT_ID'
            ,title: ''
            ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
        }]
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>