<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisSchoolTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$GENERAL_EDU_TREE = new CamemisTree("ACADEMIC","LIST");
$GENERAL_EDU_TREE->setURL('/academic/jsontree/');
$GENERAL_EDU_TREE->setSaveUrl('/academic/jsonsave/');

$TRAINING_TREE = new CamemisTree("TRAINING","LIST");
$TRAINING_TREE->setURL('/training/jsontree/');
$TRAINING_TREE->setSaveUrl('/training/jsonsave/');

$OBJECT_FORM = new CamemisForm("STUDENT");
$OBJECT_FORM->setLoadUrl('/student/jsonload/');
$OBJECT_FORM->setSaveUrl('/student/jsonsave/');

$OBJECT_GRID = new CamemisGrid("SMS", "STUDENTSEARCH");
$OBJECT_GRID->setLoadUrl('/sms/jsonload/');
$OBJECT_GRID->setSaveUrl('sms/jsonsave/');

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
var seachrSting = "";
var educationType;
Ext.onReady(function() {
    
    function cssText(value, metadata, record){
        return '<div style="font-weight:normal; color:#000; padding: 5px; height: 15px;;">' + value + '</div>';
    }
    
    function renderTextSMS(value, metadata, record){
        var SMS_SERVICES = record.data.SMS_SERVICES;
        if (SMS_SERVICES == 1){
            return '<div style="font-weight:normal; color: #141414;">' + value + '</div>';
        }else{
            return '<div style="font-weight:bold; color: #CC0000;">' + value + '</div>';
        }
    }
    <?
    /**
    * Extjs: s.gif
    */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

    $TRAINING_TREE->isAsyncTreeNode = false;
    $TRAINING_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
    $TRAINING_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $TRAINING_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());

    $TRAINING_TREE->setBaseParams("
        cmd: 'jsonTreeAllTrainings'
    ");
    $TRAINING_TREE->backgroundColor = "#F9F9F9";
    $TRAINING_TREE->isTreeExpand = false;
    $TRAINING_TREE->renderJS();
    $triggerOnClickTraining = "
        openWinXType('XTYPE_TRAINING','".TRAINING_PROGRAMS."', '".$TRAINING_TREE->getObjectXType()."', 500, percentHeight(85));
        var trainingTree = Ext.getCmp('".$TRAINING_TREE->getObjectId()."');
        trainingTree.on('click', function(node, e){   
            if(node.attributes.objecttype == 'TERM' || node.attributes.objecttype == 'CLASS'){
                Ext.getCmp('CHOOSE_TRAINING_NAME_ID').setValue(node.text);
                Ext.getCmp('CHOOSE_TRAINING').setValue(node.id);
                Ext.getCmp('XTYPE_TRAINING').close();
            }
        });
    ";
    
    $OBJECT_GRID->addReadField("name: 'ICON_SMS_SERVICES'");
    $OBJECT_GRID->addReadField("name: 'CODE'");
    $OBJECT_GRID->addReadField("name: 'FIRSTNAME'");
    $OBJECT_GRID->addReadField("name: 'LASTNAME'");
    $OBJECT_GRID->addReadField("name: 'GENDER'");
    $OBJECT_GRID->addReadField("name: 'DATE_BIRTH'");
    $OBJECT_GRID->addReadField("name: 'CLASS_NAME'");
    $OBJECT_GRID->addReadField("name: 'SMS_SERVICES'");
    $OBJECT_GRID->addReadField("name: 'MOBIL_PHONE'");
    
    $OBJECT_GRID->addColumn("header: '<b>".CODE_ID."</b>', align:'left', width: 80, renderer: cssText, sortable: false, dataIndex: 'CODE'");
    if(!SchoolDBAccess::displayPersonNameInGrid()){
        $OBJECT_GRID->addColumn("header: '<b>".LASTNAME."</b>', align:'left', width: 120, renderer: cssText, sortable: false, dataIndex: 'LASTNAME'");
        $OBJECT_GRID->addColumn("header: '<b>".FIRSTNAME."</b>', align:'left', width: 120, renderer: cssText, sortable: false, dataIndex: 'FIRSTNAME'");
    }else{
        $OBJECT_GRID->addColumn("header: '<b>".FIRSTNAME."</b>', align:'left', width: 120, renderer: cssText, sortable: false, dataIndex: 'FIRSTNAME'");
        $OBJECT_GRID->addColumn("header: '<b>".LASTNAME."</b>', align:'left', width: 120, renderer: cssText, sortable: false, dataIndex: 'LASTNAME'");
    }
    $OBJECT_GRID->addColumn("header: '<b>".GENDER."</b>', align:'left', width: 100, renderer: cssText, sortable: true, dataIndex: 'GENDER'");
    $OBJECT_GRID->addColumn("header: '<b>".DATE_BIRTH."</b>', align:'left', width: 120, renderer: cssText, sortable: true, dataIndex: 'DATE_BIRTH'");
    $OBJECT_GRID->addColumn("header: '<b>".MOBIL_PHONE."</b>', align:'left', width: 100, renderer: cssText, sortable: true, dataIndex: 'MOBIL_PHONE'");
    $OBJECT_GRID->addColumn("header: '<b>".SMS_SERVICES."</b>', align:'center', width: 100, sortable: true, dataIndex: 'ICON_SMS_SERVICES'");
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,objectId: '".$this->objectId."'
        ,cmd: 'jsonUnassignedStudentsSMS'
    ";
    
    $OBJECT_GRID->addTBarItems("
        tbar.add(['-',{
            id: 'APPLY_ID'
            ,text: '".APPLY."'
            ,iconCls:'icon-disk'
            ,scope:this
            ,disabled: false
            ,handler: function(){
                var sm = this.getSelectionModel();
                var record = sm.getSelected();
                if(record){
                    var clickId = record.data.ID;
                    var futureacademicId = record.data.FUTURE_CLASS_ID;
                    var clickName = record.data.STUDENT_NAME;   
                    Ext.MessageBox.show({
                        title:'".STATUS."'
                        ,msg: '".MSG_ACCEPT_CHOICE."'
                        ,buttons: Ext.MessageBox.YESNO
                        ,fn: function(btn){
                            if (btn == 'yes'){
                                var selids = '';
                                var seltexts = '';
                                var sels = Ext.getCmp('".$OBJECT_GRID->getObjectId()."').getSelectionModel().getSelections();
                                for( var i = 0; i < sels.length; i++ ) {
                                    if (i >0) selids += ',';
                                    selids += sels[i].get('ID');
                                    if (i >0) seltexts += '\\n';
                                    seltexts += i+1 + ') ' + sels[i].get('LASTNAME') +' '+ sels[i].get('FIRSTNAME');
                                }
                                Ext.Ajax.request({
                                    url: '/sms/jsonsave/'
                                    ,method: 'POST'
                                    ,params: {
                                        cmd: 'actionAddStudentsToSMSSevices'
                                        ,selectionIds: selids
                                        ,objectId: '".$this->objectId."'
                                    }
                                    ,success: function(result) {
                                        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.reload();
                                        window.parent.Ext.getCmp('SMS_PERSONS_ID').store.reload();
                                    }
                                });
                            }
                        }
                        ,icon: Ext.MessageBox.QUESTION
                    });
                }else{
                    ".camemisPage::alertPleaseSelect()."
                }
            }
        }]);
    ");
    
    $OBJECT_GRID->isCheckboxSelect = true;
    $OBJECT_GRID->isObjectDefaultOnLoad = false;
    $OBJECT_GRID->loadMask = true;
    $OBJECT_GRID->isQuickySearch = false;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();
    
    $OBJECT_SCHOOLYEAR = new CamemisDynCombo("ACADEMICDATE","COMBO");
    $OBJECT_SCHOOLYEAR->setLoadUrl('/academicdate/jsonload/');
    $OBJECT_SCHOOLYEAR->objectTitle = false;
    $OBJECT_SCHOOLYEAR->allowBlank = "true";
    $OBJECT_SCHOOLYEAR->varName = "SCHOOLYEAR";
    $OBJECT_SCHOOLYEAR->setLoadParams("cmd: 'allSchoolyearCombo'");
    $OBJECT_SCHOOLYEAR->renderJS();
        
    $GENERAL_EDU_TREE->isAsyncTreeNode = false;
    $GENERAL_EDU_TREE->addTBarItems(CamemisBar::tbarTreeRefresh());
    $GENERAL_EDU_TREE->addTBarItems(CamemisBar::tbarTreeExpand());
    $GENERAL_EDU_TREE->addTBarItems(CamemisBar::tbarTreeCollapse());

    $GENERAL_EDU_TREE->addTBarItems("
    xtype: 'buttongroup'
    ,items:[{
        width: 120
        ,xtype: '".$OBJECT_SCHOOLYEAR->getObjectXType()."'
    }]
    ");
    
    $GENERAL_EDU_TREE->setBaseParams("
        cmd: 'getTreeTraditionalEducationSystem'
    ");
    
    $GENERAL_EDU_TREE->isOnClickContextMenu = false;
    $GENERAL_EDU_TREE->isTreeExpand = false;
    $GENERAL_EDU_TREE->renderJS();
    
    $triggerOnClick = "
        openWinXType('HIGHER_EDUCATION','".HIGHER_EDUCATION."', '".$GENERAL_EDU_TREE->getObjectXType()."', 500, percentHeight(85));
        var academicTree = Ext.getCmp('".$GENERAL_EDU_TREE->getObjectId()."');
        Ext.getCmp('COMBO_ID').on('select', function() {
            academicTree.loader.baseParams.SCHOOLYEAR = Ext.getCmp('COMBO_ID').getValue();
            academicTree.root.reload();
            academicTree.getRootNode().expand(true, false);
        });
        academicTree.getRootNode().expand(true, false);
        academicTree.on('click', function(node, e){   
            if(node.attributes.objecttype == 'SCHOOLYEAR' || node.attributes.objecttype == 'CLASS' ){
                Ext.getCmp('CHOOSE_GRADE_NAME_ID').setValue(node.attributes.title);
                Ext.getCmp('CHOOSE_GRADE').setValue(node.id);
                Ext.getCmp('HIGHER_EDUCATION').close();
            }
        });
    ";
    $CAMEMIS_PAGE_OBJECT->setAddTab();
    
    if(!SchoolDBAccess::displayPersonNameInGrid()){
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,title: '".STUDENT_SEARCH."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor().";padding:10px'
            ,width: 310
            ,items:[            
                {".CamemisField::Textfield("CODE_ID", "CODE", CODE_ID, false, false, false, 150)."}
                ,{".CamemisField::Textfield("MOBIL_PHONE_ID", "MOBIL_PHONE", MOBIL_PHONE, false, false, false, 150)."}
                ,{".CamemisField::Textfield("LASTNAME_ID", "LASTNAME", LASTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("FIRSTNAME_ID", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
                ,{".CamemisField::ComboGender(GENDER, false, false, 150)."}
                ,{".CamemisField::Radio("RADIO_1", "SMS_SERVICES", ONLY_REGISTERED_PERSONS, 1, true)."}
                ,{".CamemisField::Radio("RADIO_2", "SMS_SERVICES", ALL_PERSONS, 0, false)."}
                ,{".CamemisField::Radio("GENERAL_EDUCATION", "ACADEMIC", HIGHER_EDUCATION, "GENERAL", false)."}
                ,{".CamemisField::Radio("TRAINING", "ACADEMIC", TRAINING_PROGRAMS, "TRAINING", false)."}
                ,{".CamemisField::Trigger("CHOOSE_GRADE_NAME",HIGHER_EDUCATION,$triggerOnClick,false, true, false, 150)."}
                ,{".CamemisField::Trigger("CHOOSE_TRAINING_NAME",TRAINING_PROGRAMS,$triggerOnClickTraining,false, true, false, 150)."}
            ]
        ");
    }else{
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,title: '".STUDENT_SEARCH."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor().";padding:10px'
            ,width: 310
            ,items:[            
                {".CamemisField::Textfield("CODE_ID", "CODE", CODE_ID, false, false, false, 150)."}
                ,{".CamemisField::Textfield("MOBIL_PHONE_ID", "MOBIL_PHONE", MOBIL_PHONE, false, false, false, 150)."}
                ,{".CamemisField::Textfield("FIRSTNAME_ID", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("LASTNAME_ID", "LASTNAME", LASTNAME, false, false, false, 150)."}
                ,{".CamemisField::ComboGender(GENDER, false, false, 150)."}
                ,{".CamemisField::Radio("RADIO_1", "SMS_SERVICES", ONLY_REGISTERED_PERSONS, 1, true)."}
                ,{".CamemisField::Radio("RADIO_2", "SMS_SERVICES", ALL_PERSONS, 0, false)."}
                ,{".CamemisField::Radio("GENERAL_EDUCATION", "ACADEMIC", HIGHER_EDUCATION, "GENERAL", false)."}
                ,{".CamemisField::Radio("TRAINING", "ACADEMIC", TRAINING_PROGRAMS, "TRAINING", false)."}
                ,{".CamemisField::Trigger("CHOOSE_GRADE_NAME",HIGHER_EDUCATION,$triggerOnClick,false, true, false, 150)."}
                ,{".CamemisField::Trigger("CHOOSE_TRAINING_NAME",TRAINING_PROGRAMS,$triggerOnClickTraining,false, true, false, 150)."}
            ]
        ");
    }   
        
    $OBJECT_FORM->addObjectItems(CamemisField::Hidden("CHOOSE_GRADE",false));
    $OBJECT_FORM->addObjectItems(CamemisField::Hidden("CHOOSE_TRAINING",false));
    
    $OBJECT_FORM->addTBarItems("
        text: '".RESET."'
        ,iconCls:'icon-arrow_undo'
        ,scope:this
        ,handler: function(){
            Ext.getCmp('center').getLayout().setActiveItem(0);
            Ext.getCmp('".$OBJECT_FORM->getObjectId()."').onReset();
        }
    ");
    
    $OBJECT_FORM->addTBarItems("
        text: '".FIND."'
        ,id: 'FIND_ID'
        ,formBind:true
        ,iconCls:'icon-magnifier'
        ,scope:this
        ,handler: function(){
            
            form = this.getForm();
            var code = form.findField('CODE').getValue();
            var searchMobilphone = form.findField('MOBIL_PHONE').getValue();
            var firstname = form.findField('FIRSTNAME').getValue();
            var lastname = form.findField('LASTNAME').getValue();
            var gender = form.findField('GENDER').getValue();
            var choosegrade = form.findField('CHOOSE_GRADE').getValue();
            var searchSMSServices = form.findField('SMS_SERVICES').getValue();
            var searchMobilphone = form.findField('MOBIL_PHONE').getValue();
            
            var alertMsg = '';
            alertMsg = alertMsg + ' || ".HIGHER_EDUCATION."<br/>' +
            alertMsg + ' || ".CODE_ID."<br/>' + 
            alertMsg + ' || ".MOBIL_PHONE."<br/>' + 
            alertMsg + ' || ".LASTNAME."<br/>' + 
            alertMsg + ' || ".FIRSTNAME."<br/>' + 
            alertMsg + ' || ".GENDER."<br/>';
                
            if (choosegrade || firstname || 
                lastname || code || gender || 
                searchMobilphone || searchSMSServices
            ){
                this.onEmbeddedEvents();
            }else{
                Ext.Msg.show({
                    title:'".STATUS."'
                    ,width: '250'
                    ,icon: Ext.MessageBox.QUESTION
                    ,msg: '" . PLEASE_SELECT . " <br/><br/>'+ alertMsg
                    ,buttons: Ext.Msg.OK
                });  
            }
        }
    ");
    
    $OBJECT_FORM->labelAlign = "left";
    $OBJECT_FORM->isObjectDefaultOnLoad = false;

    $OBJECT_FORM->setonEmbeddedEvents("
        
        Ext.getCmp('center').getLayout().setActiveItem(1);

        var code = this.getForm().findField('CODE').getValue();
        var searchMobilphone = form.findField('MOBIL_PHONE').getValue();
        var firstname = this.getForm().findField('FIRSTNAME').getValue();
        var lastname = this.getForm().findField('LASTNAME').getValue();
        var gender = this.getForm().findField('GENDER').getValue();
        var choosegrade = this.getForm().findField('CHOOSE_GRADE').getValue();
        var searchSMSServices = form.findField('SMS_SERVICES').getValue();
        var searchMobilphone = form.findField('MOBIL_PHONE').getValue();
        
        if (searchSMSServices == true){
            searchSMSServices = 1;
        }else{
            searchSMSServices = 0;
        }
        
        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.baseParams = {
            start:0
            ,limit:100
            ,cmd: 'jsonUnassignedStudentsSMS'
            ,code: code
            ,objectId: '".$this->objectId."'
            ,firstname: firstname
            ,lastname: lastname
            ,gender: gender
            ,choosegrade: choosegrade
            ,searchMobilphone: searchMobilphone
            ,educationType: educationType
            ,searchSMSServices: searchSMSServices
        };

        searchString = 'code=' + code
        + '&firstname=' + firstname
        + '&lastname=' + lastname
        + '&searchMobilphone=' + searchMobilphone
        + '&gender=' + gender
        + '&searchSMSServices=' + searchSMSServices
        + '&searchMobilphone=' + searchMobilphone
        + '&educationType=' + educationType
        + '&choosegrade=' + choosegrade;
        
        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.load();
        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.sortInfo = null;
        Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.commitChanges();
    ");

    $OBJECT_FORM->setBodyStyle("padding:10px;background:".CamemisPage::userFormBgColor().";");
    $OBJECT_FORM->isKeys = true;
    $OBJECT_FORM->renderJS();
    
    ?>
	
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            }
            ,items: [{
                title: ''
                ,region:'west'
                ,layout:'fit'
                ,id: 'WEST_ID'
                ,margins: '3 0 3 3'
                ,cmargins: '3 3 3 3'
                ,width: 350
                ,minSize: 350
                ,maxSize: 350
                ,items: [{xtype: '<?=$OBJECT_FORM->getObjectXType();?>'}]
            },{
                title: ''
                ,collapsible: false
                ,id: 'center'
                ,region:'center'
                ,margins: '3 3 3 0'
                ,layout: 'card'
                ,activeItem: 0
                ,bodyStyle: 'padding:0px'
                ,items: [{
                    border: false
                    ,layout: 'anchor'
                    ,bodyStyle: 'background:#FFFFFF; padding:25px;'
                    ,items: [{
                        title: ''
                        ,height:60
                        ,width:500
                        ,bodyStyle: 'background:#F9F9F9; padding:10px; border:1px dotted #999;text-align:center;'
                        ,html:'<h1 class="header"><?=PLEASE_MAKE_YOUR_SELECTIONS;?></h1>'
                    }]
                },{
                    border: false
                    ,activeItem: 0
                    ,layout: 'fit'
                    ,items:[{xtype: '<?=$OBJECT_GRID->getObjectXtype();?>'}]
                }]
            }]
        }]
    });
    Ext.get('GENERAL_EDUCATION').on('click', function(e){
        Ext.getCmp('FIND_ID').enable();
        educationType = "GENERAL";
        if(Ext.getCmp('GENERAL_EDUCATION').getValue() == true){
            Ext.getCmp('CHOOSE_GRADE_NAME_ID').show();
            Ext.getCmp('CHOOSE_TRAINING').setValue('');
            Ext.getCmp('CHOOSE_TRAINING_NAME_ID').hide();
        }
    });
    Ext.get('TRAINING').on('click', function(e){
        educationType = "TRAINING";
        if(Ext.getCmp('TRAINING').getValue() == true){
            Ext.getCmp('CHOOSE_GRADE_NAME_ID').hide();
            Ext.getCmp('CHOOSE_GRADE').setValue('');
            Ext.getCmp('CHOOSE_TRAINING_NAME_ID').show();
        }
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>