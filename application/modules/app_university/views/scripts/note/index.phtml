<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_GRID = new CamemisGrid("NOTE", "LIST");
$OBJECT_GRID->setLoadUrl("/note/jsonload/");
$OBJECT_GRID->setSaveUrl("/note/jsonsave/");

$OBJECT_FORM = new CamemisForm("NOTE");
$OBJECT_FORM->setSaveUrl("/note/jsonsave/");
$OBJECT_FORM->setLoadUrl("/note/jsonload/");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$isCancel = isset($_GET["isCancel"]) ? addText($_GET["isCancel"]):"";

?>
<style>
   div.content {
        margin: 10px 10px 10px 10px;
    }
    span.textTime {
        font-weight:bold;
        color:#333;
    }
    span.text {
        font-weight:normal;
        color:#333;
        white-space:normal;
    }
</style>
<script>
Ext.onReady(function() {
    showContent = {
        content : function(value, p, record){
        return String.format(
            '<div class="content"><span class="textTime">{1}</span><br><br><span class="text">{0}</span></div>',
            value, record.data.DATE_TIME, record.data.CONTENT);
        }
    };
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $items = "
        border: false
        ,id: 'FORM_ITEMS'
        ,layout: 'fit'
        ,bodyStyle: 'padding:0px'
        ,items: [{
            xtype: 'textarea'
            ,id: 'CONTENT'
            ,hideLabel: true
            ,height: 100
            ,allowBlank: false
            ,name:'content'
        }]
    ";
    
    if($isCancel)
    $OBJECT_FORM->addTBarItems("
        text: '".CANCEL."'
        ,id: 'CANCEL_ID'
        ,formBind:true
        ,iconCls:'icon-cancel'
        ,scope:this
        ,handler: function(){window.parent.Ext.getCmp('content').getLayout().setActiveItem(0);}
    ");
    
    $OBJECT_FORM->addObjectItems($items);
    if(UserAuth::getUserType()<>"STUDENT"){
        $OBJECT_FORM->setSaveParams("
            cmd: 'jsonAddNote'
            ,academicId: '".$this->academicId."'
            ,objectId: '".$this->studentId."'
        ");
        $OBJECT_FORM->setonEmbeddedEvents("
            XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."');
            Ext.getCmp('CONTENT').setValue('');
            Ext.getCmp('NOTE_LIST_ID').store.reload();
        ");
        $OBJECT_FORM->addTBarItems(CamemisBar::tbarSingleSave());
    }
    
    $OBJECT_FORM->isObjectDefaultOnLoad = false;
    $OBJECT_FORM->labelAlign = "top";
    $OBJECT_FORM->labelWidth = 120;
    $OBJECT_FORM->renderJS();
    
    $OBJECT_GRID->addReadField("name: 'DATE_TIME'");
    $OBJECT_GRID->addReadField("name: 'CONTENT'");
    
    $OBJECT_GRID->addColumn("header: '".NOTE."', renderer: showContent.content, width: percentWidth(85), sortable: true, dataIndex: 'CONTENT'");
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'jsonLoadAllNotes'
        ,academicId: '".$this->academicId."'
        ,objectId: '".$this->studentId."'
    ";
    
    $OBJECT_GRID->loadMask = false;
    $OBJECT_GRID->isQuickySearch = true;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->isObjectDefaultOnLoad = true;
    $OBJECT_GRID->renderJS();
    
    $VIEWPORT_ADMIN = "
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout:'fit'
                ,border: false
                ,items:[{xtype: '".$OBJECT_GRID->getObjectXtype()."'}]
            }]
        });
    ";
    
    $VIEWPORT_TUTOR = "
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout:'border'
                ,border: false
                ,defaults: {
                    collapsible: false
                    ,split: true
                }
                ,items: [{
                    region:'north'
                    ,margins: '3 3 0 3'
                    ,cmargins: '3 3 3 3'
                    ,height: 150
                    ,minSize: 150
                    ,maxSize: 150
                    ,layout: 'fit'
                    ,items: [{xtype: '".$OBJECT_FORM->getObjectXType()."'}]

                },{
                    collapsible: false
                    ,title: ''
                    ,id: 'center'
                    ,region:'center'
                    ,margins: '0 3 3 3'
                    ,layout: 'fit'
                    ,items: [{xtype: '".$OBJECT_GRID->getObjectXType()."'}]
                }]
            }]
        });
    ";
    
    $EVENT_DELETE = "
        Ext.getCmp('NOTE_LIST_ID').on('cellclick', function(grid, rowIndex, columnIndex, event) {
            var record = grid.store.getAt(rowIndex);
            var contextMenu = new Ext.menu.Menu({
                items: [{
                    text: '".REMOVE."'
                    ,iconCls: 'icon-delete'
                    ,handler: function(){
                        window.parent.Ext.MessageBox.show({
                            title:'".WARNING."'
                            ,width: 350
                            ,msg: '".DELETE_THIS_ITEM."'
                            ,buttons: Ext.MessageBox.YESNO
                            ,icon: Ext.MessageBox.WARNING
                            ,fn: function(btn){
                                if (btn == 'yes'){
                                    Ext.Ajax.request({
                                        url: '/note/jsonsave/'
                                        ,method: 'POST'
                                        ,params: {cmd: 'jsonDeleteNote', Id: record.data.ID}
                                        ,success: function(response, options) {Ext.getCmp('NOTE_LIST_ID').store.reload();}
                                        ,failure: function(response, options) {}
                                    });
                                }
                            }
                            ,icon: Ext.MessageBox.INFO
                        });
                    }
                }]
            });
            event.stopEvent();
            contextMenu.showAt(event.xy);
        });
    ";
    
    switch(UserAuth::getUserType()){
        case "TEACHER":
        case "INSTRUCTOR":
            echo $VIEWPORT_TUTOR;
            echo $EVENT_DELETE;
            break;
        default:
            echo $VIEWPORT_ADMIN;
            break;
    }
    ?>
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>