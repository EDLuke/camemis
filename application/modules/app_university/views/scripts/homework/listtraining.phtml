<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_GRID = new CamemisGrid("HOMEWORK", "LIST");
$OBJECT_GRID->setLoadUrl('/homework/jsonload/');

$OBJECT_FORM = new CamemisForm("HOMEWORK");
$OBJECT_FORM->setLoadUrl('/homework/jsonload/');
$OBJECT_FORM->setSaveUrl('/homework/jsonsave/');

$objectId = isset($_GET["objectId"])?addText($_GET["objectId"]):"";
$trainingId = isset($_GET["trainingId"])? (int) $_GET["trainingId"]:"";
$teacherId = isset($_GET["teacherId"])?addText($_GET["teacherId"]):"";
$subjectId = isset($_GET["subjectId"])? (int)$_GET["subjectId"]:"";
$studentId = isset($_GET["studentId"])? addText($_GET["studentId"]):"";
                                          
print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

?>

<script>
Ext.onReady(function() {
    
    function cssTextBold(value, metadata, record){
        if(record.data.DISABLED_BY == ''){
          return '<div style="margin: 3px 10px 3px 10px; font-weight:normal; color:#333; white-space:normal;">' + value + '</div>';  
        }else{
          return '<div style="margin: 3px 10px 3px 10px; font-weight:normal; color:#30C; white-space:normal;">' + value + '</div>';  
        }
    }
    function cssText(value, metadata, record){
        return '<div style="margin: 3px 10px 3px 10px; font-weight:normal; color:#333; white-space:normal;">' + value + '</div>';
    }
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
        
    if(UserAuth::getUserType()){ 
        switch(UserAuth::getUserType()){
            case "SUPERADMIN":
            case "ADMIN":
                $OBJECT_GRID->addReadField("name: 'SUBJECT_NAME'");
                $OBJECT_GRID->addReadField("name: 'NAME'");
                $OBJECT_GRID->addReadField("name: 'FULL_NAME'");
                $OBJECT_GRID->addReadField("name: 'START_DATE'");
                $OBJECT_GRID->addReadField("name: 'END_DATE'");
                $OBJECT_GRID->addReadField("name: 'COUNT'");
                $OBJECT_GRID->addReadField("name: 'DISABLED_BY'");

                $OBJECT_GRID->addColumn("header: '<b>".SUBJECT."</b>',hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:160, dataIndex: 'SUBJECT_NAME'");
                $OBJECT_GRID->addColumn("header: '<b>".HOMEWORK_NAME."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:180, dataIndex: 'NAME'");
                $OBJECT_GRID->addColumn("header: '<b>".TEACHER."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:150, dataIndex: 'FULL_NAME'");
                $OBJECT_GRID->addColumn("header: '<b>".START_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:140, dataIndex: 'START_DATE'");
                $OBJECT_GRID->addColumn("header: '<b>".END_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:140, dataIndex: 'END_DATE'");
                $OBJECT_GRID->addColumn("header: '<b>".STATUS."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:80, dataIndex: 'COUNT'");
                break;
            case 'INSTRUCTOR':
            case 'TEACHER':                                           
                $OBJECT_GRID->addReadField("name: 'SUBJECT_NAME'");
                $OBJECT_GRID->addReadField("name: 'NAME'");
                $OBJECT_GRID->addReadField("name: 'START_DATE'");
                $OBJECT_GRID->addReadField("name: 'END_DATE'");
                $OBJECT_GRID->addReadField("name: 'CONTENT'");
                $OBJECT_GRID->addReadField("name: 'COUNT'");
                $OBJECT_GRID->addReadField("name: 'DISABLED_BY'"); 
                                                                                                                                                                                
                $OBJECT_GRID->addColumn("header: '<b>".SUBJECT."</b>',hidden: false, align:'left', menuDisabled : true, sortable: true, width:160, dataIndex: 'SUBJECT_NAME'");
                $OBJECT_GRID->addColumn("header: '<b>".HOMEWORK_NAME."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:180, dataIndex: 'NAME'");
                $OBJECT_GRID->addColumn("header: '<b>".START_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, dataIndex: 'START_DATE'");
                $OBJECT_GRID->addColumn("header: '<b>".END_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, dataIndex: 'END_DATE'");
                $OBJECT_GRID->addColumn("header: '<b>".DESCRIPTION."</b>',hidden: false, align:'left',renderer:cssTextBold, menuDisabled : true, sortable: true, width:312, dataIndex: 'CONTENT'");
                $OBJECT_GRID->addColumn("header: '<b>".STATUS."</b>',hidden: false, align:'left',renderer:cssTextBold, menuDisabled : true, sortable: true, width:120, dataIndex: 'COUNT'");
                if($this->subjectId == ''){}
                else{ 
                    $OBJECT_GRID->addTBarItems("
                        tbar.add([{
                            id: 'ADD_A_NEW_ITEM'
                            ,text: '".ADD_A_NEW_ITEM."'
                            ,iconCls:'icon-application_form_add'
                            ,handler: function(){        
                                clickOpenPage('content','".ADD_A_NEW_ITEM."', '/homework/showitemtraining/?subjectId=".$subjectId."&teacherId=".$teacherId."&trainingId=".$trainingId."&objectId=new');  
                            }
                        }]);
                    ");
                 }  
                break;
            case 'STUDENT':
            case 'GUARDIAN': 
                $OBJECT_GRID->addReadField("name: 'SUBJECT_NAME'");
                $OBJECT_GRID->addReadField("name: 'NAME'");
                $OBJECT_GRID->addReadField("name: 'FULL_NAME'");
                $OBJECT_GRID->addReadField("name: 'START_DATE'");
                $OBJECT_GRID->addReadField("name: 'END_DATE'");
                $OBJECT_GRID->addReadField("name: 'CONTENT'");
                $OBJECT_GRID->addReadField("name: 'DISABLED_BY'");
                                                                                                                                                                                  
                $OBJECT_GRID->addColumn("header: '<b>".SUBJECT."</b>',hidden: false, align:'left', menuDisabled : true, sortable: true, width:160, dataIndex: 'SUBJECT_NAME'");
                $OBJECT_GRID->addColumn("header: '<b>".HOMEWORK_NAME."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:160, dataIndex: 'NAME'");
                $OBJECT_GRID->addColumn("header: '<b>".TEACHER."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, dataIndex: 'FULL_NAME'");
                $OBJECT_GRID->addColumn("header: '<b>".START_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, dataIndex: 'START_DATE'");
                $OBJECT_GRID->addColumn("header: '<b>".END_DATE."</b>', hidden: false,renderer:cssTextBold, align:'left', menuDisabled : true, sortable: true, width:130, dataIndex: 'END_DATE'");
                $OBJECT_GRID->addColumn("header: '<b>".DESCRIPTION."</b>',hidden: false, align:'left',renderer:cssTextBold, menuDisabled : true, sortable: true, width:310, dataIndex: 'CONTENT'");
                break;
        }
    }
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'jsonLoadAllSubjectTrainingHomeworks'  
        ,trainingId: '".$trainingId."'
        ,subjectId: '".$subjectId."'
        ,objectId: '".$objectId."'
        ,studentId: '".$studentId."'
    ";
     
    $OBJECT_GRID->loadMask = false;
    $OBJECT_GRID->isQuickySearch = true;
    $OBJECT_GRID->isObjectDefaultOnLoad = true;
    switch(UserAuth::getUserType()){
        case 'INSTRUCTOR':
        case 'TEACHER':
             $OBJECT_GRID->isGroupingView = true;
             $OBJECT_GRID->groupField = "SUBJECT_NAME";
        break;
    }
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS(); 
    
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            border: false
            ,id:'content'
            ,layout: 'card'
            ,activeItem: 0
            ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType()?>'}]
        }]
    });
    
    Ext.getCmp('HOMEWORK_LIST_ID').on('cellclick', function(grid, rowIndex, columnIndex, event) {
        var record = grid.store.getAt(rowIndex);
        clickOpenPage('content','<?=SHOW_DETAIL;?>','/homework/showitemtraining/?objectId=' + record.data.ID);
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>