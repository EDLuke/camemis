<?
///////////////////////////////////////////////////////////
// @soda
// Date: 03.07.2013   
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';                                     
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance(); 
$OBJECT_FORM = new CamemisForm("HOMEWORK");
$OBJECT_FORM->setLoadUrl('/homework/jsonload/');
$OBJECT_FORM->setSaveUrl('/homework/jsonsave/'); 
                                                              
if(!$this->facette) {header("Location: /main/permission/");exit;}

$studentId = isset($_GET["studentId"])? addText($_GET["studentId"]):"";

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

?>
<script>
Ext.apply(Ext.form.VTypes, {
    daterange : function(val, field) {
        var date = field.parseDate(val);
        if(!date){
            return false;
        }
        if (field.startDateField) {
            var start = Ext.getCmp(field.startDateField);
            if (!start.maxValue || (date.getTime() !== start.maxValue.getTime())) {
                start.setMaxValue(date);
                start.validate();
            }
        }
        else if (field.endDateField) {
            var end = Ext.getCmp(field.endDateField);
            if (!end.minValue || (date.getTime() !== end.minValue.getTime())) {
                end.setMinValue(date);
                end.validate();
            }
        }
        return true;
    }
});
Ext.onReady(function() {
    
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
        
    $PUBLISH_INFORMATION = "
    {
        title: '".PUBLISH."'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,items:[{
            layout: 'form'
            ,border: false
            ,bodyStyle: 'padding:10px'
            ,items: [{             
                layout: 'form'
                ,border: false
                ,bodyStyle: 'background:#FFF' 
                ,items: [{".CamemisField::Displayfield("CREATED_DATE",CREATED_DATE,false)."}]
            }]
        }]
    }
    ";
    
    $STUDENT_TITLE = "{
        title: '".TITLE."'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,items:[{
            layout: 'form'
            ,border: false
            ,bodyStyle: 'background:#FFF; padding:10px' 
            ,items: [{".CamemisField::Displayfield("TITLE_NAME",HOMEWORK_NAME,false)."}]    
        }]

    }";
    
    $STUDENT_CONTENT = "
    {
        title: '".DESCRIPTION."'
        ,collapsible: true
        ,collapsed: false
        ,width: 550
        ,style: 'padding-bottom: 5px'
        ,items:[{
            layout: 'fit'
            ,border: false 
            ,bodyStyle: 'padding:10px; background:#FFF; padding-bottom:40px;'
            ,items: [{".CamemisField::Displayfield("STUDENT_CONTENT",CONTENT,false)."}] 
        }]
    }
    ";
    
    switch(UserAuth::getUserType()){
        case "INSTRUCTOR":
        case "TEACHER":
            $HEIGHT = 320;
        break;
        default:
            $HEIGHT = 400;
        break;
    }
    
    $STUDENT_ATTACHMENTS = "
    {
        title: '".ATTACHMENTS."'
        ,height: 480
        ,collapsible: true
        ,collapsed: false
        ,width: 550
        ,style: 'padding-bottom: 5px'
        ,layout: 'fit'
        ,items: [new Ext.ux.IFrameComponent({id: 'STUDENT_ATTACHMENTS', url: '/dataset/attachment/?isUpload=0&objectId=".$studentId."&template=homework&display=1&attachment=download'})]
    }
    "; 
        
    $ITEMS = "[";
        $ITEMS .= $PUBLISH_INFORMATION;
        $ITEMS .= ",".$STUDENT_TITLE;
        $ITEMS .= ",".$STUDENT_CONTENT;
        $ITEMS .= ",".$STUDENT_ATTACHMENTS;           
    $ITEMS .= "]";

    $formItems = "
        border: false
        ,layout: 'form'
        ,items:".$ITEMS 
    ;
    
    $OBJECT_FORM->addObjectItems($formItems);
    $OBJECT_FORM->addTBarItems("
        text: '".CANCEL."'
        ,id: 'CANCEL_ID'
        ,formBind:true
        ,iconCls:'icon-cancel'
        ,scope:this
        ,handler: function(){
            window.parent.Ext.getCmp('content').getLayout().setActiveItem(0);
        }
    ");
    
    $OBJECT_FORM->setLoadParams("cmd: 'jsonLoadStudentHomeworkInfo',studentId: '".$studentId."'");              
    $OBJECT_FORM->labelAlign = "left";
    $OBJECT_FORM->labelWidth = 150;
    $OBJECT_FORM->renderJS();
    $VIEWPORT = "
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                border: false
                ,id: 'content'
                ,layout: 'fit'
                ,items:[{xtype: '".$OBJECT_FORM->getObjectXtype()."'}]
            }]
        }); 
    ";
    echo  $VIEWPORT;
    ?>
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>