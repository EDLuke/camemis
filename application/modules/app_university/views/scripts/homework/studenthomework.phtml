<?
///////////////////////////////////////////////////////////
// @soda
// Date: 03.07.2013   
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance(); 
$OBJECT_FORM = new CamemisForm("HOMEWORK");
$OBJECT_FORM->setLoadUrl('/homework/jsonload/');
$OBJECT_FORM->setSaveUrl('/homework/jsonsave/'); 

if(!$this->facette) {header("Location: /main/permission/");exit;}
$teacherId = $this->facette->SUBJECT.$this->facette->CLASS_ID.$this->facette->TEACHER.$this->facette->ID;
$homeworkId = $this->facette->ID;

$DB_ACCESS = Zend_Registry::get('DB_ACCESS');
$SQL = "";
$SQL .= " SELECT *";
$SQL .= " FROM t_subject_homework";
$SQL .= " WHERE 1=1"; 
$SQL .= " AND ID ='" . $this->objectId . "'";
$SQL .= " AND END_DATE >= NOW()";
$entries = $DB_ACCESS->fetchAll($SQL);

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>

<script>
Ext.apply(Ext.form.VTypes, {
    daterange : function(val, field) {
        var date = field.parseDate(val);
        if(!date){
            return false;
        }
        if (field.startDateField) {
            var start = Ext.getCmp(field.startDateField);
            if (!start.maxValue || (date.getTime() !== start.maxValue.getTime())) {
                start.setMaxValue(date);
                start.validate();
            }
        }
        else if (field.endDateField) {
            var end = Ext.getCmp(field.endDateField);
            if (!end.minValue || (date.getTime() !== end.minValue.getTime())) {
                end.setMinValue(date);
                end.validate();
            }
        }
        return true;
    }
});
Ext.onReady(function() {
    
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $TITLE = "
    {
        title: '".TITLE."'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,items:[{
            layout: 'form'
            ,border: false
            ,bodyStyle: 'padding:10px'
            ,items: [{             
                layout: 'form'
                ,border: false
                ,bodyStyle: 'background:#FFF' 
                ,items: [{".CamemisField::Box("SUBJECT", SUBJECT, $this->facette->SUBJECT_NAME)."}]
            },{
                layout: 'form'
                ,border: false
                ,bodyStyle: 'background:#FFF'
                ,items: [{".CamemisField::Box("NAME", HOMEWORK_NAME, $this->facette->NAME)."}]
            }]            
        }]
    }
    ";
    
    $DESCRIPTION = "
    {
        title: '".DESCRIPTION."'
        ,collapsible: true
        ,collapsed: false
        ,width: 550
        ,style: 'padding-bottom: 5px' 
        ,items:[{
            layout: 'fit'
            ,border: false 
            ,bodyStyle: 'padding:10px; background:#FFF'
            ,items: [{".CamemisField::Box("CONTENT", CONTENT, $this->facette->CONTENT)."}]
        }]
    }
    ";
    
    $PUBLISH_INFORMATION = "
    {
        title: '".PUBLISH."'
        ,autoHeight: true
        ,collapsible: true
        ,collapsed: false
        ,style: 'padding-bottom: 5px'
        ,width: 550
        ,items:[{
            layout: 'form'
            ,border: false
            ,bodyStyle: 'padding:10px'
            ,items: [{             
                layout: 'form'
                ,border: false
                ,bodyStyle: 'background:#FFF' 
                ,items: [{".CamemisField::Box("START_DATE", START_DATE, $this->facette->START_DATE)."}]
            },{
                layout: 'form'
                ,border: false 
                ,bodyStyle: 'background:#FFF' 
                ,items: [{".CamemisField::Box("END_DATE", END_DATE, $this->facette->END_DATE)."}]
            }]
        }]
    } 
    ";
    
    $ATTACHMENTS = "
    {
        title: '".ATTACHMENTS."'
        ,height: 480
        ,collapsible: true
        ,collapsed: false
        ,width: 550
        ,style: 'padding-bottom: 5px'
        ,layout: 'fit'
        ,items: [new Ext.ux.IFrameComponent({ id: 'ATTACHMENTS', url: '/dataset/attachment/?camIds=".$this->urlEncryp->encryptedGet("isUpload=0&template=homework&count=3&objectId=".$teacherId."")."'})]    
    }
    ";
        
    $ITEMS = "["; 
        $ITEMS .= $TITLE;
        $ITEMS .= ",".$DESCRIPTION;
        $ITEMS .= ",".$PUBLISH_INFORMATION;
        $ITEMS .= ",".$ATTACHMENTS;
    $ITEMS .= "]";

    $formItems = "
        border: false
        ,layout: 'form'
        ,items:".$ITEMS 
    ;
    
    $OBJECT_FORM->addObjectItems($formItems);
    
    $OBJECT_FORM->addTBarItems("
        text: '".CANCEL."'
        ,id: 'CANCEL_ID'
        ,formBind:true
        ,iconCls:'icon-cancel'
        ,scope:this
        ,handler: function(){
            window.parent.Ext.getCmp('content').getLayout().setActiveItem(0);
        }
    ");   
    
    $OBJECT_FORM->setLoadParams("
        cmd: 'jsonLoadSubjectHomework'
        ,objectId: '".$this->objectId."'
    ");
                    
    $OBJECT_FORM->labelAlign = "left";
    $OBJECT_FORM->labelWidth = 150;
    $OBJECT_FORM->renderJS();

    $PENEL_ITEMS = Array();
    
    $MAIN_CONTENT = "{
        title: '".MAIN_CONTENT."'
        ,layout: 'fit'
        ,items:[{xtype: '".$OBJECT_FORM->getObjectXtype()."'}]
    }";
    $PENEL_ITEMS[] = $MAIN_CONTENT; 
    
    $STUDENT_ATTACHMENTS = "
    {
        title: '".ATTACHMENTS."'
        ,layout: 'fit'
        ,items: [new Ext.ux.IFrameComponent({id: 'STUDENT_ATTACHMENTS', url: '/homework/studentsubmithomework/?homeworkId=".$homeworkId."'})]
    }
    ";
    
    switch(UserAuth::getUserType()){
        case 'STUDENT':
            if($this->facette){
                if($entries){
                    $PENEL_ITEMS[] = $STUDENT_ATTACHMENTS;
                }  
            }
            break;
    }
    
    $CHOOSE_ITEMS = "[".implode(',',$PENEL_ITEMS)."]";
    
    $VIEWPORT = "
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout:'fit'
                ,bodyStyle: 'background:".CamemisPage::userBgColor().";padding:3px'
                ,border: false
                ,items:[{
                    xtype: 'tabpanel'
                    ,tabPosition: 'top'
                    ,plain:true
                    ,activeTab: 0
                    ,enableTabScroll:true
                    ,items:".$CHOOSE_ITEMS."
                }]
            }]
        });
    ";
    echo  $VIEWPORT;
    ?>
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>