<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
$OBJECT_GRID = new CamemisGrid("TRANSLATION", "LIST");
$OBJECT_GRID->setLoadUrl('/translation/jsonload/');
$OBJECT_GRID->setSaveUrl('/translation/jsonsave/');

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

?>
<script>

    Ext.onReady(function() {

    <?
    /**
     * Extjs: s.gif
     */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

    $OBJECT_GRID->addCellRenderer("
        function renderText(v, p, record, rowIndex){
            return String.format('<div style=\"font-weight:normal;white-space:normal;padding:5px;\">{0}</div>'
                ,v
            );
        }
    ");

    $OBJECT_GRID->addReadField("name: 'CONST'");
    $OBJECT_GRID->addReadField("name: 'ENGLISH'");

    if (Zend_Registry::get('SYSTEM_LANGUAGE')!="ENGLISH")
    $OBJECT_GRID->addReadField("name: '".Zend_Registry::get('SYSTEM_LANGUAGE')."'");

    $OBJECT_GRID->addColumn("header: 'CONST', renderer: renderText, hidden: true,align:'left', width: 250, dataIndex: 'CONST'");
    $OBJECT_GRID->addColumn("header: 'ENGLISH', renderer: renderText, align:'left', width: 450, dataIndex: 'ENGLISH'");

    if (Zend_Registry::get('SYSTEM_LANGUAGE')!="ENGLISH")
    $OBJECT_GRID->addColumn("header: '".Zend_Registry::get('SYSTEM_LANGUAGE')."', renderer: renderText,align:'left', width: 450, dataIndex: '".Zend_Registry::get('SYSTEM_LANGUAGE')."'");

    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            id: 'SHOW_DETAIL_ID'
            ,text: '".SHOW_DETAIL."'
            ,hidden: true
            ,iconCls:'icon-magnifier'
            ,scope:this
            ,handler: function(){
                var sm = this.getSelectionModel();
                var record = sm.getSelected();
                if(record){
                    objectId = record.data.ID;
                    var url = '".$this->URL_SHOWITEM."&objectId=' + objectId;
                    clickOpenPage('center',record.data.NAME, url);
                }
            }
        }]);
    ");

    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            id: 'NOT_TRANSLATED_ID'
            ,text: '".NOT_TRANSLATED."'
            ,iconCls:'icon-application_form_magnify'
            ,scope:this
            ,handler: function(){
                Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.baseParams = {
                    start:0
                    ,limit:100
                    ,cmd: 'allTranslations'
                    ,show_all: 'false'
                    ,not_translated: 'true'
                };
                Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.load();
            }
        }]);
    ");

    $OBJECT_GRID->addTBarItems("
        tbar.add([{
            id: 'SHOW_ALL_ID'
            ,text: '".SHOW_ALL."'
            ,iconCls:'icon-application_form_magnify'
            ,scope:this
            ,handler: function(){
                Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.baseParams = {
                    start:0
                    ,limit:100
                    ,cmd: 'allTranslations'
                    ,show_all: 'true'
                    ,not_translated: 'false'
                };
                Ext.getCmp('".$OBJECT_GRID->getObjectId()."').store.load();
            }
        }]);
    ");
    
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'allTranslations'
    ";
    
    $OBJECT_GRID->addTBarItems("
        tbar.add('->');
    ");
    
    $OBJECT_GRID->isQuickySearch = true;
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->renderJS();

    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            border: false
            ,id:'content'
            ,layout: 'card'
            ,activeItem: 0
            ,items:[{xtype: '<?=$OBJECT_GRID->getObjectXtype();?>'}]
        }]
    });
    
    var grid = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>');
    grid.on('cellclick', function(grid, rowIndex, columnIndex, event) {
        var rec = grid.store.getAt(rowIndex);
        var objectId = rec.data.ID;
        var url = '<?=$this->URL_SHOWITEM?>&objectId=' + objectId;
        clickOpenPage('content',rec.data.NAME, url);
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>