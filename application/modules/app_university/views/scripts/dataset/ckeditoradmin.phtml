<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 25.08.2012
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////

require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$DB_ACCESS = Zend_Registry::get('DB_ACCESS');

$field = isset($_GET["field"])?strtoupper(addText($_GET["field"])):"";
$objectId = isset($_GET["objectId"])?addText($_GET["objectId"]):"";
$object = isset($_GET["object"])?addText($_GET["object"]):"";

$subjectId = isset($_GET["subjectId"])? (int)$_GET["subjectId"]:"";
$classId = isset($_GET["classId"])?addText($_GET["classId"]):"";
$teacherId = isset($_GET["teacherId"])?addText($_GET["teacherId"]):"";
$CHECK_TEACHER_CHANGE_CONTENT = GradeSubjectDBAccess::getGradeSubjectTeacherCount($subjectId, $teacherId, $classId);
//$control = GradeSubjectDBAccess::getGradeSubjectYear($subjectId, $classId);

$content = "";
$disable_enable = "";

switch(UserAuth::getUserType()){
    case "SUPERADMIN":
    case "ADMIN":
        $DISABLE_ENABLE = $CHECK_TEACHER_CHANGE_CONTENT?true:false;
    break;
    case"STUDENT":
        $disable_enable = true;
    break;
}

switch($object){
    case "gradesubject":
        if($classId !=''){
            if($CHECK_TEACHER_CHANGE_CONTENT == 1){
                $facette = GradeSubjectDBAccess::getGradeSubjectTeacher($subjectId, false, $classId);
                if($facette->$field){
                    if ($field) $content = setShowText($facette->$field);
                }else{
                    $control = GradeSubjectDBAccess::getGradeSubject($objectId, false, false, false);
                    if ($field) $content = setShowText($facette->$field);
                }
            }
            else if($CHECK_TEACHER_CHANGE_CONTENT == 0){
                $facette = GradeSubjectDBAccess::getGradeSubject($objectId, false, false, false);
                if ($field) $content = setShowText($facette->$field);
            }
        }else{
            $facette = GradeSubjectDBAccess::getGradeSubject($objectId, false, false, false);
            if ($field) $content = setShowText($facette->$field);
        }
    break;
    case "student":
        require_once 'models/app_university/student/StudentDBAccess.php';
        $facette = StudentDBAccess::findStudentFromId($objectId);
        if ($field) $content = isset($facette->$field)?setShowText($facette->$field):"";
    break;
    case "staff":
        require_once 'models/app_university/staff/StaffDBAccess.php';
        $facette = StaffDBAccess::findStaffFromId($objectId);
        if ($field) $content = isset($facette->$field)?setShowText($facette->$field):"";
    break;
    case "bulletin":
        require_once 'models/app_university/bulletin/BulletinDBAccess.php';
        $facette = BulletinDBAccess::findBulletinFromId($objectId);
        if ($field) $content = isset($facette->$field)?setShowText($facette->$field):"";
        
    break;
    case "studenttraining":
        require_once 'models/training/StudentTrainingDBAccess.php';
        $facette = StudentTrainingDBAccess::findStudentTrainingFromId($objectId);
        if ($field) $content = isset($facette->$field)?setShowText($facette->$field):"";
        
    break;
    case "subject_training":
        $facette = TrainingSubjectDBAccess::findTrainingSubjectFromId($objectId);
        if ($field) $content = isset($facette->$field)?setShowText($facette->$field):"";
        break;
}

if ($_POST){
    
    $field = isset($_POST["field"])?addText($_POST["field"]):"";
    $objectId = isset($_POST["objectId"])?addText($_POST["objectId"]):"";
    $object = isset($_POST["object"])?addText($_POST["object"]):"";
    
    $subjectId = isset($_POST["subjectId"])?$_POST["subjectId"]:"";
    $classId = isset($_POST["classId"])?$_POST["classId"]:"";
    $teacherId = isset($_POST["teacherId"])?$_POST["teacherId"]:"";
    
    $SAVEDATA = array();         
    $WHERE = array();             
    $postedValue = stripslashes(addText($_POST["content"])) ;
    $SAVEDATA[$field] = $postedValue;
    $WHERE[] = $DB_ACCESS->quoteInto('ID = ?', $objectId); 
    
    switch($object){
        case "gradesubject":   
             //@THORN Visal
            switch(UserAuth::getUserType()){
                case "INSTRUCTOR":
                case "TEACHER":
                    $CHECK_TEACHER_CHANGE_CONTENT = GradeSubjectDBAccess::getGradeSubjectTeacherCount($subjectId, $teacherId, $classId);
                    if($CHECK_TEACHER_CHANGE_CONTENT == 1){
                        $WHERE_SUBJECT = array();
                        $WHERE_SUBJECT[] = $DB_ACCESS->quoteInto('SUBJECT = ?', $subjectId);
                        $WHERE_SUBJECT[] = $DB_ACCESS->quoteInto('TEACHER = ?', $teacherId);
                        $WHERE_SUBJECT[] = $DB_ACCESS->quoteInto('ACADEMIC = ?', $classId);
                    if ($field == 'GOALS')
                        $SAVEDATA_SUBJECT['GOALS'] = $SAVEDATA[$field];
                    if ($field == 'OBJECTIVES')
                        $SAVEDATA_SUBJECT['OBJECTIVES'] = $SAVEDATA[$field];
                    if ($field == 'EVALUATION')
                        $SAVEDATA_SUBJECT['EVALUATION'] = $SAVEDATA[$field];
                    if ($field == 'MATERIALS')
                        $SAVEDATA_SUBJECT['MATERIALS'] = $SAVEDATA[$field];
                        $SAVEDATA['MODIFY_DATE'] = getCurrentDBDateTime();
                        $SAVEDATA['MODIFY_BY'] = Zend_Registry::get('USER')->ID;
                        $DB_ACCESS->update('t_subject_teacher_content', $SAVEDATA_SUBJECT, $WHERE_SUBJECT);
                    }else if($CHECK_TEACHER_CHANGE_CONTENT == 0){
                        $SAVEDATA_SUBJECT['TEACHER'] = $teacherId;
                        $SAVEDATA_SUBJECT['SUBJECT'] = $subjectId;
                        $SAVEDATA_SUBJECT['ACADEMIC'] = $classId;
                        $SAVEDATA_SUBJECT['CREATED_DATE'] = getCurrentDBDateTime();
                        $SAVEDATA_SUBJECT['CREATED_BY'] = Zend_Registry::get('USER')->ID;
                        $SAVEDATA_SUBJECT['MODIFY_DATE'] = getCurrentDBDateTime();
                        $SAVEDATA_SUBJECT['MODIFY_BY'] = Zend_Registry::get('USER')->ID;
                        
                    if ($field == 'GOALS')
                        $SAVEDATA_SUBJECT['GOALS'] = $SAVEDATA[$field];
                    if ($field == 'OBJECTIVES')
                        $SAVEDATA_SUBJECT['OBJECTIVES'] = $SAVEDATA[$field];
                    if ($field == 'EVALUATION')
                        $SAVEDATA_SUBJECT['EVALUATION'] = $SAVEDATA[$field];
                    if ($field == 'MATERIALS')
                        $SAVEDATA_SUBJECT['MATERIALS'] = $SAVEDATA[$field];
                        
                        $DB_ACCESS->insert('t_subject_teacher_content', $SAVEDATA_SUBJECT); 
                    }
                break;
                default:
                    $DB_ACCESS->update('t_grade_subject', $SAVEDATA, $WHERE);
                break;
            }  
        ///////////////
        break;
        case "schoolletter":
            $DB_ACCESS->update('t_letter', $SAVEDATA, $WHERE);
        break;
        case "bulletin":
            $DB_ACCESS->update('t_bulletin', $SAVEDATA, $WHERE);
        break;
        case "staff":
            $DB_ACCESS->update('t_staff', $SAVEDATA, $WHERE);
        break;
        case "student":
            $DB_ACCESS->update('t_student', $SAVEDATA, $WHERE);
        break;
        case "studenttraining":
            $DB_ACCESS->update('t_student_training', $SAVEDATA, $WHERE);
        break;
        case "subject_training":
            $DB_ACCESS->update('t_student_training', $SAVEDATA, $WHERE);
        break;
    }
    
    header("Location: ".$_SERVER['REQUEST_URI']."?field=".$field."&objectId=".$objectId."&object=".$object."");
    exit;
}

switch(Zend_Registry::get('SYSTEM_LANGUAGE')) {

    case "KHMER":
        $lang = 'km';
        $css = '/css/main-kher.css';
        break;
    case "VIETNAMESE":
        $lang = 'vi';
        $css = '/css/main.css';
        break;
    case "THAI":
        $lang = 'th';
        $css = '/css/main.css';
        break;
    case "LAO":
        $lang = 'en';
        $css = '/css/main.css';
        break;
    case "BURMESE":
        $lang = 'en';
        $css = '/css/main.css';
        break;
    default:
        $lang = 'en';
        $css = '/css/main.css';
        break;
}

    $SHOW_EDITOR = "";
    if($disable_enable == true)
    $SHOW_EDITOR = "
     CKEDITOR.replace( 'content',{    
            uiColor: '#e0e7f7'
            ,height:350
            ,readOnly: true
            ,hidden: true
            ,language:'".$lang."'
            ,toolbar :
            [
                { name: 'document', items : ['Print','-','Templates' ], groups: [ 'document', 'undo' ] },
                { name: 'basicstyles', items : [ 'Bold','Italic' ] },
                { name: 'paragraph', items : [ 'NumberedList','BulletedList' ] },
                { name: 'tools', items : [ 'Maximize','-','About' ] }
            ] 
        });
    ";
    
    if($disable_enable == false)
    $SHOW_EDITOR = "
        CKEDITOR.replace( 'content',{
            language:'".$lang."'
            ,height:350
            ,uiColor: '#e0e7f7'
            ,toolbar :
            [
                { name: 'document', items : [ 'Save','NewPage','DocProps','Preview','Print','-','Templates' ] },
                { name: 'basicstyles', items : [ 'Bold','Italic' ] },
                { name: 'paragraph', items : [ 'NumberedList','BulletedList' ] },
                { name: 'tools', items : [ 'Maximize','-','About' ] }
            ]
        });
    ";
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--
Copyright (c) 2003-2012, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.html or http://ckeditor.com/license
-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>CAMEMIS</title>
<meta content="text/html; charset=utf-8" http-equiv="content-type" />
<script type="text/javascript" src="/public/ckeditor/ckeditor.js"></script>
<link href="/public/ckeditor/samples/sample.css" rel="stylesheet" type="text/css" />
</head>
<body style='background:#e0e7f7;'>
    <form action="/dataset/ckeditoradmin/" method="post">
    <textarea id="content" name="content"><?=$content;?></textarea>
        <script type="text/javascript">
            //<![CDATA[ 
            CKEDITOR.on('instanceReady',function( evt ){
                var editor = evt.editor;
                editor.execCommand('maximize');
            });
            <?=$SHOW_EDITOR?>
            //]]>
        </script>
        <input type="hidden" name="field" value="<?=$field;?>">
        <input type="hidden" name="objectId" value="<?=$objectId;?>">
        <input type="hidden" name="object" value="<?=$object;?>">
        <input type="hidden" name="subjectId" value="<?=$subjectId;?>">
        <input type="hidden" name="classId" value="<?=$classId;?>">
        <input type="hidden" name="teacherId" value="<?=$teacherId;?>">
    </form>
</body>
</html>