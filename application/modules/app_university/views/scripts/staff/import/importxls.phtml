<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisDynamicCombo.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisSchoolTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$OBJECT_GRID = new CamemisGrid("STAFF", "IMPORT");
$OBJECT_GRID->setLoadUrl('/staff/jsonload/');
$OBJECT_GRID->setSaveUrl('/staff/jsonsave/');

$disabledButton = $this->facette > 0 ? false : true; //@Math Man

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>

<script>
Ext.onReady(function() {
    <?
    /**
    * Extjs: s.gif
    */
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
    
    $OBJECT_GRID->addCellRenderer("
        function renderQTip(val, cell, record){
            if (record.data.ACTION_STATUS == 1){
                return '<div qtip=\"' + '<span>".CANNOT_IMPORT."</span>' +'\">'+ val +'</div>';
            }else{
                return '<div qtip=\"' + '<span>".CAN_IMPORT."</span>' +'\">'+ val +'</div>';
            }
        }
    ");

    $OBJECT_GRID->addCellRenderer("
        function renderText(v, p, record, rowIndex){
            var str = '<span class=spanText>' + v + '</span>';
            return str;
        }
    ");
    
    $OBJECT_GRID->addReadField("name: 'STAFF_SCHOOL_ID'");
    $OBJECT_GRID->addReadField("name: 'CAMPUS_NAME'");
    $OBJECT_GRID->addReadField("name: 'STAFF'");
    $OBJECT_GRID->addReadField("name: 'LASTNAME'");
    $OBJECT_GRID->addReadField("name: 'FIRSTNAME'");
    $OBJECT_GRID->addReadField("name: 'LASTNAME_LATIN'");
    $OBJECT_GRID->addReadField("name: 'FIRSTNAME_LATIN'");
    $OBJECT_GRID->addReadField("name: 'DATE_BIRTH'");
    $OBJECT_GRID->addReadField("name: 'GENDER'");
    $OBJECT_GRID->addReadField("name: 'ROLE_NAME'");
    $OBJECT_GRID->addReadField("name: 'JOB_TYPE'");
    $OBJECT_GRID->addReadField("name: 'SUBJECTS'");
    $OBJECT_GRID->addReadField("name: 'ACTION_STATUS'");
    $OBJECT_GRID->addReadField("name: 'ACTION_STATUS_ICON'");
    
    $OBJECT_GRID->addReadField("name: 'NUMBER_CHILDREN'");
    $OBJECT_GRID->addReadField("name: 'PHONE'");
    $OBJECT_GRID->addReadField("name: 'EMAIL'");
    $OBJECT_GRID->addReadField("name: 'STREET'");
    $OBJECT_GRID->addReadField("name: 'COUNTRY_PROVINCE'");
    $OBJECT_GRID->addReadField("name: 'TOWN_CITY'");
    $OBJECT_GRID->addReadField("name: 'POSTCODE_ZIPCODE'");
    $OBJECT_GRID->addReadField("name: 'START_DATE'");

    $OBJECT_GRID->addColumn("header: '<b>".ACTION_STATUS."</b>', align:'center', width: 80, renderer: renderQTip, sortable: false, dataIndex: 'ACTION_STATUS_ICON'");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".STAFF_SCHOOL_ID."</b>',
        dataIndex: 'STAFF_SCHOOL_ID',
        width: 120,
        align: 'left',
        renderer: renderText,
        editor: new Ext.form.TextField({
            allowBlank: false
        })
    ");
    
    if(!SchoolDBAccess::displayPersonNameInGrid()){
        $OBJECT_GRID->addColumn("
            header: '<b>".LASTNAME."</b>',
            dataIndex: 'LASTNAME',
            width: 120,
            align: 'left',
            renderer: renderText,
            editor: new Ext.form.TextField({
                allowBlank: false
            })
        ");

        $OBJECT_GRID->addColumn("
            header: '<b>".FIRSTNAME."</b>',
            dataIndex: 'FIRSTNAME',
            width: 120,
            align: 'left',
            renderer: renderText,
            editor: new Ext.form.TextField({
                allowBlank: false
            })
        ");
        
        $OBJECT_GRID->addColumn("
            header: '<b>".LASTNAME_LATIN."</b>',
            dataIndex: 'LASTNAME_LATIN',
            width: 120,
            align: 'left',
            renderer: renderText,
            editor: new Ext.form.TextField({
                allowBlank: false
            })
        ");

        $OBJECT_GRID->addColumn("
            header: '<b>".FIRSTNAME_LATIN."</b>',
            dataIndex: 'FIRSTNAME_LATIN',
            width: 120,
            align: 'left',
            renderer: renderText,
            editor: new Ext.form.TextField({
                allowBlank: false
            })
        ");
    }else{
        $OBJECT_GRID->addColumn("
            header: '<b>".FIRSTNAME."</b>',
            dataIndex: 'FIRSTNAME',
            width: 120,
            align: 'left',
            renderer: renderText,
            editor: new Ext.form.TextField({
                allowBlank: false
            })
        ");
        
        $OBJECT_GRID->addColumn("
            header: '<b>".LASTNAME."</b>',
            dataIndex: 'LASTNAME',
            width: 120,
            align: 'left',
            renderer: renderText,
            editor: new Ext.form.TextField({
                allowBlank: false
            })
        ");
        
        $OBJECT_GRID->addColumn("
            header: '<b>".FIRSTNAME_LATIN."</b>',
            dataIndex: 'FIRSTNAME_LATIN',
            width: 120,
            align: 'left',
            renderer: renderText,
            editor: new Ext.form.TextField({
                allowBlank: false
            })
        ");
        
        $OBJECT_GRID->addColumn("
            header: '<b>".LASTNAME_LATIN."</b>',
            dataIndex: 'LASTNAME_LATIN',
            width: 120,
            align: 'left',
            renderer: renderText,
            editor: new Ext.form.TextField({
                allowBlank: false
            })
        ");
    }
        
    $OBJECT_GRID->addColumn("
        header: '<b>".GENDER."</b>',
        dataIndex: 'GENDER',
        width: 120,
        align: 'left',
        renderer: renderText,
        editor: new Ext.form.ComboBox({
            triggerAction:'all'
            ,mode:'local'
            ,store: new Ext.data.JsonStore({
                    autoDestroy: true
                    ,fields: ['chooseValue', 'chooseDisplay']
                    ,data:[{chooseValue: '0', chooseDisplay: '---'},{chooseValue: '1', chooseDisplay: '".MALE."'},{chooseValue: '2', chooseDisplay: '".FEMALE."'}]
                })
                ,valueField: 'chooseValue'
                ,displayField: 'chooseDisplay'
                ,editable: false
                ,listeners: {
                select: function(combo, record, index) {
                    replaceValue = combo.getValue();
                    var newDisplay = record.get('chooseDisplay');
                    combo.setValue(newDisplay);
                }
            }
        })
    ");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".START_DATE."</b>',
        dataIndex: 'START_DATE',
        width: 120,
        align: 'left',
        renderer: renderText,
        editor: new Ext.form.TextField({
            allowBlank: false
        })
    ");
    
    $OBJECT_GRID->addColumn("header: '<b>".USER_ROLE."</b>', align:'left', width: 120, renderer: renderText, sortable: false, dataIndex: 'ROLE_NAME'");
    $OBJECT_GRID->addColumn("header: '<b>".JOB_TYPE."</b>', align:'left', width: 150, renderer: renderText, sortable: false, dataIndex: 'JOB_TYPE'");
    //$OBJECT_GRID->addColumn("header: '<b>".SCHOOL_AND_CAMPUS."</b>', align:'left', width: 100, renderer: renderText, sortable: true, dataIndex: 'CAMPUS_NAME'");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".NUMBER_CHILDREN."</b>',
        dataIndex: 'NUMBER_CHILDREN',
        width: 80,
        align: 'left',
        renderer: renderText,
        editor: new Ext.form.TextField({
            allowBlank: false
        })
    ");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".PHONE."</b>',
        dataIndex: 'PHONE',
        width: 120,
        align: 'left',
        renderer: renderText,
        editor: new Ext.form.TextField({
            allowBlank: false
        })
    ");
    
    $OBJECT_GRID->addColumn("
        header: '<b>".EMAIL."</b>',
        dataIndex: 'EMAIL',
        width: 120,
        align: 'left',
        renderer: renderText,
        editor: new Ext.form.TextField({
            allowBlank: false
        })
    ");
    
    $OBJECT_GRID->setSaveParams("
        cmd: 'jsonActionChangeStaffImport'
    ");
    
    $OBJECT_GRID->setAftereditCallback("
        XMsg('".STATUS."','".ACTION_SUCCESSFULLY_SAVED."'); 
        //Ext.getCmp('STAFF_IMPORT_ID').store.reload();
    ");
    
    $OBJECT_GRID->forceFit = "false";
    $OBJECT_GRID->removeNAME = "STAFF";
    $OBJECT_GRID->isGridEditing = true;
    $OBJECT_GRID->isCheckboxSelect = true;
    $OBJECT_GRID->isQuickySearch = true;
        
    $OBJECT_GRID->baseParams = "
        start:0
        ,limit:100
        ,cmd: 'importStaffs'
    ";
    $OBJECT_GRID->addTBarItems("
        tbar.add(['-',{
            id: 'REMOVE_ALL_STAFFS_ID'
            ,text: '".REMOVE_IMPORT_LIST."'
            ,iconCls:'icon-delete'
            ,scope:this
            ,handler: this.onRemoveSelection
            ,disabled: '" . $disabledButton . "'
        }]);
    ");
    $OBJECT_GRID->addTBarItems("
        tbar.add(['-',{
            id: 'ADD_STAFF_ID'
            ,text: '".APPLY_INTO_LIST_OF_STAFFS."'
            ,iconCls:'icon-disk'
            ,scope:this
            ,handler: this.onSelection
            ,disabled: '" . $disabledButton . "'
        }]);
    ");
    
    $OBJECT_GRID->setRemoveParams("
        cmd: 'removeStaffFromImport'
    ");
    
    $OBJECT_GRID->setSelectionParams("
        cmd: 'jsonAddStaffToStaffDB'
    ");
    
    $OBJECT_GRID->setRemoveSelectionParams("
        cmd: 'jsonRemoveStaffsFromImport'
    ");
    
    $OBJECT_GRID->setSelectionEmbeddedEvents("
        Ext.getCmp('STAFF_IMPORT_ID').store.reload();
    ");
    
    $OBJECT_GRID->addTBarItems("
        tbar.add('->');
    ");
    
    $OBJECT_GRID->renderJS();

    $formItems = "
    [{
        xtype: 'fileuploadfield'
        ,id: 'form-file'
        ,emptyText: '".SELECT_AN_XLS_FILE."'
        ,fieldLabel: '".FILE."'
        ,name: 'xlsfile'
        ,buttonText: ''
        ,buttonCfg: {
            iconCls: 'upload-icon'
        }
    },{
        ".CamemisField::ComboUserRole(USER_ROLE, true, false)."
    },{
        ".CamemisField::Datefield('CREATED_DATE',CREATED_DATE,false)."
    }]
    ";
    ?>
    var fp = new Ext.FormPanel({
        fileUpload: true
        ,labelAlign: 'left'
        ,border: true
       	,width:335
       	,autoHeight: true
        ,title: ''
        ,bodyStyle: 'background:<?=CamemisPage::userFormBgColor();?>; padding: 10px 10px 0 10px;'
        ,labelWidth:140
        ,defaults: {
            anchor: '95%'
            ,allowBlank: false
            ,msgTarget: 'side'
        },
        items: <?=$formItems;?>
        ,tbar: [{
            text: '<?=EXCEL_TEMPLATE?>'
            ,iconCls:'icon-table_save'
            ,handler: function(){
                window.location='<?=$this->URL_TEMPLATE_XLS?>';
            }
        },'-',{
            text: '<?=RESET;?>'
            ,iconCls:'icon-arrow_undo'
            ,handler: function(){
                fp.getForm().reset();
            }
        },'-',{
            text: '<?=UPLOAD?>'
            ,iconCls:'icon-disk'
            ,disabled: false
            ,handler: function(){
            	
            	if(fp.getForm().isValid()){
            		
                    Ext.Ajax.request({
                        url: '/staff/jsonimport'
                        ,isUpload: true
                        ,headers: {'Content-type':'multipart/form-data'}
                        ,method: 'POST'
                        ,params:{cmd: 'importXLS'}
                        ,waitMsg: 'Uploading your file...'
                        ,form: fp.getForm().getEl().dom
                        ,success: function(response, options) {
                            window.location='<?=$this->URL_STAFF_IMPORT?>';
                        }
                    });
            	}
            }
        }]
    });
    
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout:'border'
            ,border: false
            ,defaults: {
                collapsible: true
                ,split: true
            },
            items: [{
                title: ''
                ,bodyStyle: 'background:<?=CamemisPage::userFormBgColor();?>;padding:5px'
                ,region: 'west'
                ,width:350
                ,minSize:350
                ,maxSize:350
                ,cmargins: '3 3 3 3'
                ,margins: '3 0 3 3'
                ,items:[{
                    border: false
                    ,bodyStyle: 'background:<?=CamemisPage::userFormBgColor();?>;'
                    ,layout:'form'
                    ,items: fp
                }]
            },{
                title: '<?=IMPORT_RESULT?>'
                ,collapsible: false
                ,region:'center'
                ,margins: '3 3 3 0'
                ,layout: 'fit'
                ,items:[{
                    layout: 'fit'
                    ,xtype: '<?=$OBJECT_GRID->getObjectXType();?>'
                }]
            }]
        }]
    });
});
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>