<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 25.12.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_GRID = new CamemisGrid("SCHEDULE", "LIST");
$OBJECT_GRID->setLoadUrl("/schedule/jsonload/");
$OBJECT_GRID->setSaveUrl("/schedule/jsonsave/");

function ComboEducationType() {
    
    $PENEL_ITEMS = Array();    
    $GENERAL_EDUCATION = "['GENERAL', '" . GENERAL_EDUCATION . "']";
    if (UserAuth::displayRoleGeneralEducation())
    $PENEL_ITEMS[] = $GENERAL_EDUCATION;
    
    $TRAINING_PROGRAMS = "['TRAINING', '" . TRAINING_PROGRAMS . "']";
    if (UserAuth::displayRoleTrainingEducation())
    $PENEL_ITEMS[] = $TRAINING_PROGRAMS;
    
    $CHOOSE_ITEMS = "[".implode(',',$PENEL_ITEMS)."]";
    
    $js = "";
    $js .= "xtype: 'combo'";
    $js .= ",id: 'EDUCATION_TYPE_ID'";
    $js .= ",fieldLabel: '" . EDUCATION_TYPE . "'";
    $js .= ",mode: 'local'";
    $js .= ",editable:false";
    $js .= ",triggerAction: 'all'";
    $js .= ",emptyText: '" . PLEASE_CHOOSE . "'";
    $js .= ",store: " . $CHOOSE_ITEMS . "";
    $js .= ",name: 'EDUCATION_TYPE'";
    $js .= ",hiddenName: 'EDUCATION_TYPE'";
    $js .= ",width:150";
    //$js .= ",value:'GENERAL'";
    $js .= ",allowBlank:false";

    return $js;
}

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader(); 
?>
<script>
    var teacherId;
    var types;
    var startDate;
    var endDate;
    Ext.apply(Ext.form.VTypes, {
        daterange : function(val, field) {
            var date = field.parseDate(val);
            if(!date){
                return false;
            }
            if (field.startDateField) {
                var start = Ext.getCmp(field.startDateField);
                if (!start.maxValue || (date.getTime() !== start.maxValue.getTime())) {
                    start.setMaxValue(date);
                    start.validate();
                }
            }
            else if (field.endDateField) {
                var end = Ext.getCmp(field.endDateField);
                if (!end.minValue || (date.getTime() !== end.minValue.getTime())) {
                    end.setMinValue(date);
                    end.validate();
                }
            }
            return true;
        }
    });
    Ext.onReady(function() {

        function showText(v, p, record, rowIndex){
            return String.format('<div style=\"white-space:normal;font-weight:bold; padding: 15px; height: 40px; background:{1};color:{2};\">{0}</div>'
                ,v
                ,record.data['COLOR']
                ,record.data['COLOR_FONT']
            );
        }
        
        <?
        
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();

        $OBJECT_GRID->addReadField("name: 'ID'");
        $OBJECT_GRID->addReadField("name: 'SESSION_DATE'");
        $OBJECT_GRID->addReadField("name: 'CLASS'");
        $OBJECT_GRID->addReadField("name: 'SCHEDULE_TYPE'");
        $OBJECT_GRID->addReadField("name: 'EVENT'");
        $OBJECT_GRID->addReadField("name: 'ROOM'");
        $OBJECT_GRID->addReadField("name: 'COLOR'");
        $OBJECT_GRID->addReadField("name: 'COLOR_FONT'");
        $OBJECT_GRID->addReadField("name: 'CODE'");
        $OBJECT_GRID->addReadField("name: 'TEACHING'");
        
        $OBJECT_GRID->addColumn("
            header: '<b>" . DAY . "</b>'
            , align:'center'
            ,renderer: showText
            , sortable: false
            , dataIndex: 'SESSION_DATE'
            , width: 150
        ");
    
        $OBJECT_GRID->addColumn("
            header: '<b>" . GRADE_CLASS . "</b>'
            , align:'center'
            ,renderer: showText
            , sortable: false
            , dataIndex: 'CLASS'
            , width: 150
        ");
        
        $OBJECT_GRID->addColumn("
            header: '<b>" . EVENT . "</b>'
            ,renderer: showText
            , align:'center'
            , sortable: false
            , dataIndex: 'EVENT'
            , width: 200
        ");
        
        $OBJECT_GRID->addColumn("
            header: '<b>" . ROOM . "</b>'
            , renderer: showText
            , align:'center'
            , sortable: false
            , dataIndex: 'ROOM'
            , width: 150
        ");
        
        $OBJECT_GRID->addColumn("
            header: '<b>" . TEACHING . "</b>'
            , renderer: showText
            , align:'center'
            , sortable: false
            , dataIndex: 'TEACHING'
            , width: 150
        ");
        
        $OBJECT_GRID->baseParams = "
            start:0
            ,limit:100
            ,cmd: 'searchTeachingSession'
        ";
         
        //@soda
        $OBJECT_GRID->addTBarItems("  
            tbar.add([{
                text: '" . EXPORT_TO_EXCEL . "'
                ,disabled: true
                ,id: 'EXPORT_TO_EXCEL'
                ,iconCls:'icon-page_excel'
                ,handler: function(){ 
                    var param='';
                    if(teacherId){param +='&teacherId='+ teacherId;}
                    if(types){param +='&typeedu='+ types;}
                    if(startDate){param +='&startdt='+ startDate;}
                    if(endDate){param +='&enddt='+ endDate;} 
                    window.location='/export/index/?type=export_teaching_session_school' + param;
                }
            }]);
        ");
        //
        $OBJECT_GRID->baseParams = "
            start:0
            ,limit:100
            ,teacherId:'".$this->objectId."'
            ,cmd: 'searchTeachingSession'
            ,startdt:'".firstDayOfMonth()."'
            ,enddt:'".lastDayOfMonth()."'
        ";
        $OBJECT_GRID->loadMask = true;
        $OBJECT_GRID->isPagingToolbar = true;
        $OBJECT_GRID->isObjectDefaultOnLoad = true;
        $OBJECT_GRID->forceFit = "false";
        $OBJECT_GRID->renderJS();
        
        $FORM_ITEMS = "
        [{
            xtype:'datefield'
            ,fieldLabel: '".START_DATE."'
            ,name: 'startdt'
            ,id: 'startdt'
            ,vtype: 'daterange'
            ,endDateField: 'enddt'
            ,width: 150
            ,value:'".firstDayOfMonth()."'
            ,format: '".setExtDatafieldFormat()."'
        },{
            xtype:'datefield'
            ,fieldLabel: '".END_DATE."'
            ,name: 'enddt'
            ,id: 'enddt'
            ,vtype: 'daterange'
            ,startDateField: 'startdt'
            ,width: 150
            ,value:'".lastDayOfMonth()."'
            ,format: '".setExtDatafieldFormat()."'
        },{
            ".ComboEducationType()."
        },{
            xtype: 'displayfield'
            ,value : '<b>".TOTAL.": 0</b>'
            ,id:'TOTAL'
            ,labelStyle: 'background:#86a723; width : 12px; height: 12px; margin-top: 4px; padding : 0;' 
        }]
        ";
        ?>
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout:'border'
                ,border: false
                ,defaults: {
                    collapsible: false
                    ,split: true
                }
                ,items: [{
                    title: ''
                    ,id:'WEST_ID'
                    ,region:'west'
                    ,margins: '3 0 3 3'
                    ,cmargins: '3 3 3 3'
                    ,width:350
                    ,minSize:350
                    ,maxSize:350
                    ,layout: 'fit'
                    ,bodyStyle: 'padding:3px;background:<?=CamemisPage::userFormBgColor();?>;'
                    ,items:[{
                        title: ''
                        ,layout: 'fit'
                        ,tbar:[{
                            text: '<?=FIND?>'
                            ,iconCls:'icon-magnifier'
                            ,handler: function(){
                                form = Ext.getCmp('myForm').getForm();
                                Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store.baseParams = {
                                    start:0
                                    ,limit:100                    
                                    ,cmd: 'searchTeachingSession'
                                    ,teacherId: '<?=$this->objectId;?>'
                                    ,type: form.findField('EDUCATION_TYPE_ID').getValue()
                                    ,startdt: form.findField('startdt').getValue()
                                    ,enddt: form.findField('enddt').getValue()
                                };
                                store = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store;
                                store.reload();
                                store.on('load', function(ds){ 
                                    Ext.getCmp('TOTAL').update('<b><?=TOTAL?>: '+ ds.getTotalCount() +'</b>');
                                }); 

                                teacherId = '<?=$this->objectId;?>';
                                types = form.findField('EDUCATION_TYPE_ID').getValue();
                                startDate = form.findField('startdt').getValue();
                                endDate = form.findField('enddt').getValue();  
                                Ext.getCmp('EXPORT_TO_EXCEL').enable();
                            }
                        }]
                        ,items: [{
                            border: false
                            ,height: 220
                            ,xtype: 'form'
                            ,id: 'myForm'
                            ,bodyStyle: 'padding:15px;background:<?=CamemisPage::userFormBgColor();?>;'
                            ,items:<?=$FORM_ITEMS;?>
                        }]      
                    }]
                },{
                    title: '<?=SEARCH_RESULT?>'
                    ,collapsible: false
                    ,region:'center'
                    ,id: 'center'
                    ,layout: 'card'
                    ,activeItem: 0
                    ,margins: '3 3 3 0'
                    ,items: [{
                        layout: 'fit'
                        ,border: false
                        ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
                    }]
                }]
            }]
        });
        
        store = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>').store;
        store.reload();
        store.on('load', function(ds){ 
            Ext.getCmp('TOTAL').update('<b><?=TOTAL?>: '+ ds.getTotalCount() +'</b>');
        });
   });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>