<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.02.2012
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once 'models/app_university/staff/StaffDBAccess.php';
require_once setUserLoacalization();

$setId = isset($_GET["objectId"])?addText($_GET["objectId"]):"";

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$HIGH_EDUCATION_TREE = new CamemisTree("SUBJECT", "HIGH_EDUCATION");
$HIGH_EDUCATION_TREE->setURL("/subject/jsontree/");

$TRAINING_EDUCATION_TREE = new CamemisTree("SUBJECT", "TRAINING_EDUCATION");
$TRAINING_EDUCATION_TREE->setURL("/subject/jsontree/");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<script>
    
    <?
    $HIGH_EDUCATION_TREE->isAsyncTreeNode = false;
    $HIGH_EDUCATION_TREE->setBaseParams("
        cmd: 'treeAllSubjects'
        ,setId:'".$setId."'
    ");
    
    $HIGH_EDUCATION_TREE->addTBarItems(CamemisBar::tbarTreeRefresh('H'));
    $HIGH_EDUCATION_TREE->addTBarItems(CamemisBar::tbarTreeExpand('H'));
    $HIGH_EDUCATION_TREE->addTBarItems(CamemisBar::tbarTreeCollapse('H'));
    
    $HIGH_EDUCATION_TREE->addTBarItems("
        xtype: 'buttongroup'
        ,keys:{
            key:[13]
            ,fn: function(){
                ".$HIGH_EDUCATION_TREE->ExtgetCmp().".loader.baseParams.query = document.getElementById('query').value;
                ".$HIGH_EDUCATION_TREE->ExtgetCmp().".root.reload();
                ".$HIGH_EDUCATION_TREE->ExtgetCmp().".getRootNode().expand(true, false);
            }
            ,scope:this
        }
        ,items:[{
            xtype:'textfield'
            ,id:'query'
            ,emptyText: '".ENTER_NAME_OR_CODEID."'
            ,width:120
        },{
            iconCls:'icon-find'
            ,tooltip:'".SEARCH."'
            ,handler: function(){
                ".$HIGH_EDUCATION_TREE->ExtgetCmp().".loader.baseParams.query = document.getElementById('query').value;
                ".$HIGH_EDUCATION_TREE->ExtgetCmp().".root.reload();
                ".$HIGH_EDUCATION_TREE->ExtgetCmp().".getRootNode().expand(true, false);
            }
        }]
    ");
    
    $HIGH_EDUCATION_TREE->backgroundColor = "#FFF";
    $HIGH_EDUCATION_TREE->isTreeExpand = false;
    $HIGH_EDUCATION_TREE->isOnClickContextMenu = false;
    $HIGH_EDUCATION_TREE->renderJS();
    
    ///////////////////////////////////////////////////////
    $TRAINING_EDUCATION_TREE->addTBarItems(CamemisBar::tbarTreeRefresh('T'));
    $TRAINING_EDUCATION_TREE->addTBarItems(CamemisBar::tbarTreeExpand('T'));
    $TRAINING_EDUCATION_TREE->addTBarItems(CamemisBar::tbarTreeCollapse('T'));
    
    $TRAINING_EDUCATION_TREE->addTBarItems("
        xtype: 'buttongroup'
        ,keys:{
            key:[13]
            ,fn: function(){
                ".$TRAINING_EDUCATION_TREE->ExtgetCmp().".loader.baseParams.query = document.getElementById('query').value;
                ".$TRAINING_EDUCATION_TREE->ExtgetCmp().".root.reload();
                ".$TRAINING_EDUCATION_TREE->ExtgetCmp().".getRootNode().expand(true, false);
            }
            ,scope:this
        }
        ,items:[{
            xtype:'textfield'
            ,id:'query'
            ,emptyText: '".ENTER_NAME_OR_CODEID."'
            ,width:120
        },{
            iconCls:'icon-find'
            ,tooltip:'".SEARCH."'
            ,handler: function(){
                ".$TRAINING_EDUCATION_TREE->ExtgetCmp().".loader.baseParams.query = document.getElementById('query').value;
                ".$TRAINING_EDUCATION_TREE->ExtgetCmp().".root.reload();
                ".$TRAINING_EDUCATION_TREE->ExtgetCmp().".getRootNode().expand(true, false);
            }
        }]
    ");
    $TRAINING_EDUCATION_TREE->isAsyncTreeNode = false;
    $TRAINING_EDUCATION_TREE->setBaseParams("
        cmd: 'treeAllTrainingSubjects'
        ,setId:'".$setId."'
    ");
    
    $TRAINING_EDUCATION_TREE->backgroundColor = "#FFF";
    $TRAINING_EDUCATION_TREE->isTreeExpand = false;
    $TRAINING_EDUCATION_TREE->isOnClickContextMenu = false;
    $TRAINING_EDUCATION_TREE->renderJS();
    
    ?>

    var type='GENERAL';
    Ext.onReady(function() {

        Ext.QuickTips.init();
        
        <?
        camemisPage::setNoLogoutMessage();
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
        $CAMEMIS_PAGE_OBJECT->setAddTab();
        
        $PENEL_ITEMS = Array();        
        $GENERAL_EDUCATION = "{
            title: '".HIGHER_EDUCATION."'
            ,layout: 'fit'
            ,items:[{xtype: '".$HIGH_EDUCATION_TREE->getObjectXtype()."'}]
        }";
        if(UserAuth::displayRoleGeneralEducation())
        $PENEL_ITEMS[] = $GENERAL_EDUCATION;
        
        $TRAINING_PROGRAMS = "{
            title: '".TRAINING_PROGRAMS."'
            ,layout: 'fit'
            ,items:[{xtype: '".$TRAINING_EDUCATION_TREE->getObjectXtype()."'}]
        }";
        if(UserAuth::displayRoleTrainingEducation())
        $PENEL_ITEMS[] = $TRAINING_PROGRAMS;
        
        $CHOOSE_ITEMS = "[".implode(',',$PENEL_ITEMS)."]";
        ?>
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                xtype: 'tabpanel'
                ,border:false
                ,tabPosition: 'top'
                ,activeTab: 0
                ,items:[<?=$CHOOSE_ITEMS?>]
            }]
        });
        
        var treeHighEducation = Ext.getCmp('<?=$HIGH_EDUCATION_TREE->getObjectId()?>');
        var treeTraining = Ext.getCmp('<?=$TRAINING_EDUCATION_TREE->getObjectId()?>');
        
        if (treeHighEducation) treeHighEducation.on('checkchange', function(node, checked){
            Ext.Ajax.request({
                url: '/subject/jsonsave/'
                ,method: 'POST'
                ,scope:this
                ,params: {
                    cmd: 'actionTeacherSubject'
                    ,checked: checked
                    ,Id: node.id
                    ,type:type
                    ,setId: '<?=$setId;?>'
                }
                ,success: function(response, options) {
                    result = Ext.util.JSON.decode(response.responseText);
                    XMsg('<?=STATUS?>',result.msg);
                }
            });
        });
        
        if (treeTraining) treeTraining.on('checkchange', function(node, checked){
            Ext.Ajax.request({
                url: '/subject/jsonsave/'
                ,method: 'POST'
                ,scope:this
                ,params: {
                    cmd: 'actionTeacherSubject'
                    ,checked: checked
                    ,Id: node.id
                    ,type:type
                    ,setId: '<?=$setId;?>'
                }
                ,success: function(response, options) {
                    result = Ext.util.JSON.decode(response.responseText);
                    XMsg('<?=STATUS?>',result.msg);
                }
            });
        });
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>