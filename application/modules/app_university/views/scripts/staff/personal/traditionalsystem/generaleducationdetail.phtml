<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 18.07.2009
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();
  
$classObject = AcademicDBAccess::findGradeFromId($this->classId);

if(!$classObject) {header("Location: /main/permission/");exit;}
    
print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$OBJECT_TREE = new CamemisTree("STAFFS", "LIST");
$OBJECT_TREE->setURL('/staff/jsontree/');

?>
<script>
    
    Ext.onReady(function() {
        
        <?
        /**
         * Extjs: s.gif
         */
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
        
        $TREE_ITEMS = Array();
        
        $attendanceParams = "target=general&academicId=".$classObject->ID."&teacherId=".$this->objectId."";
        $ATTENDANCE_INFORMATION = "{";
            $ATTENDANCE_INFORMATION .= "text:'".ATTENDANCE_INFORMATION."'";
            $ATTENDANCE_INFORMATION .= ",leaf:true";
            $ATTENDANCE_INFORMATION .= ",url:'/attendance/studentclassmain/?camIds=".$this->urlEncryp->encryptedGet($attendanceParams)."'";
            $ATTENDANCE_INFORMATION .= ",cls:'nodeTextBold'";
            $ATTENDANCE_INFORMATION .= ",iconCls: 'icon-component'";
        $ATTENDANCE_INFORMATION .= "}";
        $TREE_ITEMS[] = $ATTENDANCE_INFORMATION;
        
        $scheduleParams = "academicId=".$classObject->ID."";
        $SCHEDULE = "{";
            $SCHEDULE .= "text:'".SCHEDULE."'";
            $SCHEDULE .= ",leaf:true";
            $SCHEDULE .= ",url:'/schedule/byclass/?camIds=".$this->urlEncryp->encryptedGet($scheduleParams)."'";
            $SCHEDULE .= ",cls:'nodeTextBold'";
            $SCHEDULE .= ",iconCls: 'icon-component_yellow'";
        $SCHEDULE .= "}";
        $TREE_ITEMS[] = $SCHEDULE;
        
        $eventParams = "target=general&classId=".$this->classId."";
        $EVENT = "{";
            $EVENT .= "text:'".EVENT."'";
            $EVENT .= ",leaf:true";
            $EVENT .= ",url:'/schoolevent/classevents/?camIds=".$this->urlEncryp->encryptedGet($scheduleParams)."'";
            $EVENT .= ",cls:'nodeTextBold'";
            $EVENT .= ",iconCls: 'icon-component'";
        $EVENT .= "}";
        $TREE_ITEMS[] = $EVENT;
        
        $homeworkParams = "classId=".$classObject->ID."&gradeId=".$classObject->GRADE_ID."&schoolyearId=".$classObject->SCHOOL_YEAR."&teacherId=".$this->objectId."";
        $HOMEWORK = "{";
            $HOMEWORK .= "text:'".HOMEWORK."'";
            $HOMEWORK .= ",leaf:true";
            $HOMEWORK .= ",url:'/homework/homeworkmain/?camIds=".$this->urlEncryp->encryptedGet($homeworkParams)."'";
            $HOMEWORK .= ",cls:'nodeTextBold'";
            $HOMEWORK .= ",iconCls: 'icon-component_yellow'";
        $HOMEWORK .= "}";
        $TREE_ITEMS[] = $HOMEWORK;
        
        $subjectParams = "general&classId=".$classObject->ID."&gradeId=".$classObject->GRADE_ID."&schoolyearId=".$classObject->SCHOOL_YEAR."&teacherId=".$this->objectId."";
        $SUBJECT_LIST = "{";
            $SUBJECT_LIST .= "text:'".SUBJECT_LIST."'";
            $SUBJECT_LIST .= ",leaf:true";
            $SUBJECT_LIST .= ",url:'/subject/byclass/?camIds=".$this->urlEncryp->encryptedGet($subjectParams)."'";
            $SUBJECT_LIST .= ",cls:'nodeTextBold'";
            $SUBJECT_LIST .= ",iconCls: 'icon-component'";
        $SUBJECT_LIST .= "}";
        $TREE_ITEMS[] = $SUBJECT_LIST;
        
        $teachingreportParams = "classId=".$this->classId."&teacherId=".$this->objectId."";
        $TEACHING_REPORT = "{";
            $TEACHING_REPORT .= "text:'".TEACHING_REPORT."'";
            $TEACHING_REPORT .= ",leaf:true";
            $TEACHING_REPORT .= ",url:'/subjectreport/subjectreportmain/?camIds=".$this->urlEncryp->encryptedGet($teachingreportParams)."'";
            $TEACHING_REPORT .= ",cls:'nodeTextBold'";
            $TEACHING_REPORT .= ",iconCls: 'icon-component_yellow'";
        $TEACHING_REPORT .= "}";
        $TREE_ITEMS[] = $TEACHING_REPORT;
        
        $assessmentParams = "classId=".$this->classId."&teacherId=".$this->objectId."";
        $ASSESSMENT = "{";
            $ASSESSMENT .= "text:'".ASSESSMENT."'";
            $ASSESSMENT .= ",leaf:true";
            $ASSESSMENT .= ",url:'/academic/scoremonitor/?camIds=".$this->urlEncryp->encryptedGet($assessmentParams)."'";
            $ASSESSMENT .= ",cls:'nodeTextBold'";
            $ASSESSMENT .= ",iconCls: 'icon-component'";
        $ASSESSMENT .= "}";
        $TREE_ITEMS[] = $ASSESSMENT;
        
        $disciplineParams = "target=general&personType=STAFF&classId=".$classObject->ID."";
        $DISCIPLINE_INFORMATION = "{";
            $DISCIPLINE_INFORMATION .= "text:'".DISCIPLINE_INFORMATION."'";
            $DISCIPLINE_INFORMATION .= ",leaf:true";
            $DISCIPLINE_INFORMATION .= ",url:'/discipline/byclass/?camIds=".$this->urlEncryp->encryptedGet($disciplineParams)."'";
            $DISCIPLINE_INFORMATION .= ",cls:'nodeTextBold'";
            $DISCIPLINE_INFORMATION .= ",iconCls: 'icon-component_yellow'";
        $DISCIPLINE_INFORMATION .= "}";
        $TREE_ITEMS[] = $DISCIPLINE_INFORMATION;
        
        $listOfStudentsParams = "objectId=".$classObject->ID."";
        $LIST_OF_STUDENTS = "{";
            $LIST_OF_STUDENTS .= "text:'".LIST_OF_STUDENTS."'";
            $LIST_OF_STUDENTS .= ",leaf:true";
            $LIST_OF_STUDENTS .= ",url:'/discipline/byclass/?camIds=".$this->urlEncryp->encryptedGet($disciplineParams)."'";
            $LIST_OF_STUDENTS .= ",cls:'nodeTextBold'";
            $LIST_OF_STUDENTS .= ",iconCls: 'icon-component'";
        $LIST_OF_STUDENTS .= "}";
        $TREE_ITEMS[] = $LIST_OF_STUDENTS;
        
        $listOfTeachersParams = "objectId=".$classObject->ID."";
        $LIST_OF_TEACHERS = "{";
            $LIST_OF_TEACHERS .= "text:'".LIST_OF_TEACHERS."'";
            $LIST_OF_TEACHERS .= ",leaf:true";
            $LIST_OF_TEACHERS .= ",url:'/academic/teacherclassmain/?camIds=".$this->urlEncryp->encryptedGet($listOfTeachersParams)."'";
            $LIST_OF_TEACHERS .= ",cls:'nodeTextBold'";
            $LIST_OF_TEACHERS .= ",iconCls: 'icon-component_yellow'";
        $LIST_OF_TEACHERS .= "}";
        $TREE_ITEMS[] = $LIST_OF_TEACHERS;
        
        $extraclassParams = "objectId=".$classObject->ID."&teacherId=".$this->objectId."";
        $EXTRA_CLASS = "{";
            $EXTRA_CLASS .= "text:'".EXTRA_CLASS."'";
            $EXTRA_CLASS .= ",leaf:true";
            $EXTRA_CLASS .= ",url:'/extraclass/showitem/?camIds=".$this->urlEncryp->encryptedGet($extraclassParams)."'";
            $EXTRA_CLASS .= ",cls:'nodeTextBold'";
            $EXTRA_CLASS .= ",iconCls: 'icon-component'";
        $EXTRA_CLASS .= "}";
        $TREE_ITEMS[] = $EXTRA_CLASS;
        
        $CHOOSE_ITEMS = "[".implode(',',$TREE_ITEMS)."]";
        
        $OBJECT_TREE->backgroundColor = "#F9F9F9";
        $OBJECT_TREE->isAsyncTreeNode = true;
        $OBJECT_TREE->setAsyncTreeNode($CHOOSE_ITEMS);
        $OBJECT_TREE->renderJS();
        
        ?>
        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout:'border'
                ,border: false
                ,defaults: {
                    collapsible:true
                    ,split: true
                }
                ,items: [{
                    title: ''
                    ,id:'WEST_ID'
                    ,region:'west'
                    ,margins: '3 0 3 3'
                    ,cmargins: '3 3 3 3'
                    ,width:200
                    ,minSize:200
                    ,maxSize:200
                    ,layout: 'fit'
                    ,items:[{xtype: '<?=$OBJECT_TREE->getObjectXtype();?>'}]
                },{
                    title: ''
                    ,border:true
                    ,collapsible: false
                    ,region:'center'
                    ,id: 'center'
                    ,layout: 'card'
                    ,activeItem: 0
                    ,margins: '3 3 3 0'
                    ,items: [new Ext.ux.IFrameComponent({ id: 'MAIN_CONTENT', url:'/attendance/studentclassmain/?camIds=<?=$this->urlEncryp->encryptedGet($attendanceParams)?>'})]
                }]
            }]
        });
        
        var myTree = <?=$OBJECT_TREE->ExtgetCmp();?>;
        myTree.on('click', function(node, event){
            clickOpenPage('center','',node.attributes.url);
        });
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>