<?
///////////////////////////////////////////////////////////
// @Kaom Vibolrith Senior Software Developer
// Date: 13.03.2012
// Am Stollheen 18, 55120 Mainz, Germany
///////////////////////////////////////////////////////////

///@veasna modify
require_once 'models/UserAuth.php';
require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisField.php'; 
require_once 'clients/CamemisDynamicCombo.php';
require_once 'clients/CamemisBar.php';
require_once 'include/Common.inc.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$DB_ACCESS = Zend_Registry::get('DB_ACCESS');

$FIRST_SQL_SCHOOLYEAR = "";
$FIRST_SQL_SCHOOLYEAR .= " SELECT B.ID AS SCHOOLYEAR_ID";
$FIRST_SQL_SCHOOLYEAR .= " ,B.NAME AS SCHOOLYEAR_NAME";
$FIRST_SQL_SCHOOLYEAR .= " FROM t_grade AS A";
$FIRST_SQL_SCHOOLYEAR .= " LEFT JOIN t_academicdate AS B ON B.ID=A.SCHOOL_YEAR";
$FIRST_SQL_SCHOOLYEAR .= " LEFT JOIN t_instructor AS C ON A.ID=C.CLASS";
$FIRST_SQL_SCHOOLYEAR .= " WHERE 1=1";
$FIRST_SQL_SCHOOLYEAR .= " AND C.TEACHER ='" . $this->objectId . "'";
$FIRST_SQL_SCHOOLYEAR .= " GROUP BY B.ID";
$FIRST_SQL_SCHOOLYEAR .= " ORDER BY B.YEAR_LEVEL DESC";
$FIRST_ENTRIES_SCHOOLYEAR = $DB_ACCESS->fetchAll($FIRST_SQL_SCHOOLYEAR);

$SECOND_SQL_SCHOOLYEAR = "";
$SECOND_SQL_SCHOOLYEAR .= " SELECT B.ID AS SCHOOLYEAR_ID";
$SECOND_SQL_SCHOOLYEAR .= " ,B.NAME AS SCHOOLYEAR_NAME";
$SECOND_SQL_SCHOOLYEAR .= " FROM t_grade AS A";
$SECOND_SQL_SCHOOLYEAR .= " LEFT JOIN t_academicdate AS B ON B.ID=A.SCHOOL_YEAR";
$SECOND_SQL_SCHOOLYEAR .= " LEFT JOIN t_schedule AS C ON A.ID=C.ACADEMIC_ID";
$SECOND_SQL_SCHOOLYEAR .= " WHERE 1=1";
$SECOND_SQL_SCHOOLYEAR .= " AND C.TEACHER_ID ='" . $this->objectId . "'";
$SECOND_SQL_SCHOOLYEAR .= " GROUP BY B.ID";
$SECOND_SQL_SCHOOLYEAR .= " ORDER BY B.START DESC";
$SECOND_ENTRIES_SCHOOLYEAR = $DB_ACCESS->fetchAll($SECOND_SQL_SCHOOLYEAR);
//error_log($SECOND_SQL_SCHOOLYEAR); 
$ENTRIES_SCHOOLYEAR = $FIRST_ENTRIES_SCHOOLYEAR + $SECOND_ENTRIES_SCHOOLYEAR;

$DEFAULT_SCHOOLYEAR_ID = "";
$DATA_SCHOOLYEAR = array();
$STORE_SCHOOLYEAR = "[";
if($ENTRIES_SCHOOLYEAR){
    $i=0;
    foreach($ENTRIES_SCHOOLYEAR as $value){
        if($value->SCHOOLYEAR_ID){
            $DATA_SCHOOLYEAR[$i] = $value->SCHOOLYEAR_ID;
            $STORE_SCHOOLYEAR .= $i?",":"";
            $STORE_SCHOOLYEAR .= "['" . $value->SCHOOLYEAR_ID . "', '" . $value->SCHOOLYEAR_NAME . "']";
        }
        $i++;
    }
    $DEFAULT_SCHOOLYEAR_ID = isset($DATA_SCHOOLYEAR[0])?$DATA_SCHOOLYEAR[0]:0;
}
$STORE_SCHOOLYEAR .= "]";

$schoolyearId = isset($_GET['schoolyearId']) ? addText($_GET["schoolyearId"]):$DEFAULT_SCHOOLYEAR_ID;

$FIRST_SQL_CLASS = "";
$FIRST_SQL_CLASS .= " SELECT A.ID AS SUBJECT_ACADEMIC_ID";
$FIRST_SQL_CLASS .= " ,A.NAME AS DISPLAY_NAME";
$FIRST_SQL_CLASS .= " FROM t_grade AS A";
$FIRST_SQL_CLASS .= " LEFT JOIN t_grade AS B ON B.PARENT=A.ID";
$FIRST_SQL_CLASS .= " LEFT JOIN t_academicdate AS D ON D.ID=A.SCHOOL_YEAR";
$FIRST_SQL_CLASS .= " LEFT JOIN t_instructor AS E ON B.ID=E.CLASS";
$FIRST_SQL_CLASS .= " WHERE 1=1";
$FIRST_SQL_CLASS .= " AND E.TEACHER ='" . $this->objectId . "'";
$FIRST_SQL_CLASS .= " AND A.SCHOOL_YEAR ='" . $schoolyearId . "'";
$FIRST_SQL_CLASS .= " AND A.EDUCATION_SYSTEM ='1'";
$FIRST_SQL_CLASS .= " GROUP BY A.ID";
//error_log($FIRST_SQL_CLASS);

$FIRST_ENTRIES_CLASS = $DB_ACCESS->fetchAll($FIRST_SQL_CLASS);


$CHECK_INSTRUCTOR = array();
if($FIRST_ENTRIES_CLASS){
    foreach($FIRST_ENTRIES_CLASS as $value){
        $CHECK_INSTRUCTOR[$value->SUBJECT_ACADEMIC_ID] = $value->SUBJECT_ACADEMIC_ID;
    }
}

$SECOND_SQL_CLASS = "";
$SECOND_SQL_CLASS .= " SELECT A.ID AS SUBJECT_ACADEMIC_ID";
$SECOND_SQL_CLASS .= " ,A.NAME AS DISPLAY_NAME";
$SECOND_SQL_CLASS .= " FROM t_grade AS A";
$SECOND_SQL_CLASS .= " LEFT JOIN t_schedule AS B ON A.ID=B.ACADEMIC_ID";
$SECOND_SQL_CLASS .= " WHERE 1=1";
$SECOND_SQL_CLASS .= " AND B.TEACHER_ID ='" . $this->objectId . "'";
$SECOND_SQL_CLASS .= " AND A.SCHOOL_YEAR ='" . $schoolyearId . "'";
$SECOND_SQL_CLASS .= " AND A.EDUCATION_SYSTEM ='1'";
$SECOND_SQL_CLASS .= " GROUP BY A.ID";
//error_log($SECOND_SQL_CLASS);

$SECOND_ENTRIES_CLASS = $DB_ACCESS->fetchAll($SECOND_SQL_CLASS);

$TOTAL_ENTRIES = $FIRST_ENTRIES_CLASS + $SECOND_ENTRIES_CLASS;

$RESULT_DATA = array();
if($TOTAL_ENTRIES){
    foreach($TOTAL_ENTRIES as $value){
        $RESULT_DATA[$value->SUBJECT_ACADEMIC_ID] = $value->DISPLAY_NAME; 
    }
}

$DEFAULT_CLASS_ID = "";
$DATA = array();
$STORE_SUBJECT = "[";

if($RESULT_DATA){
    $i=0;
    foreach($RESULT_DATA as $subjectAcademicId=>$subjectName){
        if(in_array($subjectAcademicId, $CHECK_INSTRUCTOR)){
                $icon = "icon-user";
            }else{
                $icon = "icon-application_form_magnify";
            }
            $DATA[$i] = $subjectAcademicId;
            $STORE_SUBJECT .= $i?",":"";
            $STORE_SUBJECT .= "['" . $subjectAcademicId . "', '" . $subjectName . "', '".$icon."']";
        $i++;
    }
    $DEFAULT_CLASS_ID = isset($DATA[0])?$DATA[0]:0;
    ///
    $setParams = "";
    $setParams = "&subjectId=".$subjectAcademicId."";
    $setParams .= "&objectId=".Zend_Registry::get('USER')->ID."";
    $setParams .= "&classId=".$DEFAULT_CLASS_ID."";
    $setParams .= "&schoolyearId=".$schoolyearId."";
    
    $SHOW_LAYOUT = "[new Ext.ux.IFrameComponent({ id: 'GRADE_CLASS', url: '/staff/crediteducationsystemdetail/?camIds=".$this->urlEncryp->encryptedGet($setParams)."'})]";
}else{
    $SHOW_LAYOUT = "{
        title:'".STATUS."'
        ,layout: 'fit'
        ,border: false
        ,contentEl: 'initCenter'
    }";
}
$STORE_SUBJECT .= "]";  



$COMBO_SCHOOLYEAR = "[{".CamemisField::Combo('COMO_SCHOOLYEAR','COMO_SCHOOLYEAR',$STORE_SCHOOLYEAR, false,$schoolyearId,200,false)."}]";

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();
?>
<style type="text/css">
    .ux-icon-combo-icon {
        background-repeat: no-repeat;
        background-position: 0 50%;
        width: 18px;
        height: 14px;
    }
    .ux-icon-combo-input {
        padding-left: 25px;
    }
    .x-form-field-wrap .ux-icon-combo-icon {
        top: 3px;
        left: 5px;
    }
    .ux-icon-combo-item {
        background-repeat: no-repeat ! important;
        background-position: 3px 50% ! important;
        padding-left: 24px ! important;
    }
</style>
<script>

Ext.onReady(function() {
	
    <?
    $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
    $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();     
    ?>
    viewport = new Ext.Viewport({
        layout: 'fit'
        ,border: false
        ,items:[{
            layout: 'card'
            ,id:'content'
            ,activeItem: 0
            ,border: false
            ,tbar:[
            '<b><?=SCHOOL_YEAR?>:</b>',{
            xtype: 'buttongroup'
            ,items:<?=$COMBO_SCHOOLYEAR;?>
            },'<b><?=SUBJECT?>:</b> '
            ,{
                xtype:'combo'
                ,width:250
                ,id:'COMO_CLASS_ID'
                ,fieldLabel:'IconCombo'
                ,store: new Ext.data.SimpleStore({
                    fields: ['comboCode', 'comboName', 'comboIcon'],
                    data: <?=$STORE_SUBJECT;?>
                }),
                plugins:new Ext.ux.plugins.IconCombo()
                ,valueField: 'comboCode'
                ,displayField: 'comboName'
                ,iconClsField: 'comboIcon'
                ,triggerAction: 'all'
                ,mode: 'local'
                ,value:'<?=$DEFAULT_CLASS_ID?>'
            }]
            ,items:<?=$SHOW_LAYOUT?>
        }]
    });
    var comboClass = Ext.getCmp('COMO_CLASS_ID');
    var comboSchoolyear = Ext.getCmp('COMO_SCHOOLYEAR_ID');
    comboClass.on('select', function() {
        clickOpenPage('content','','/staff/crediteducationsystemdetail/?objectId=<?=Zend_Registry::get('USER')->ID?>&classId='+comboClass.getValue());
    });
    comboSchoolyear.on('select', function() {
        window.location='<?=$_SERVER["REQUEST_URI"]?>&schoolyearId='+comboSchoolyear.getValue();
    });
});
</script>
<div id="initCenter" class="x-hide-display" style="border:0px silver solid;margin:30px;padding:8px;height:140px">
    <h1 class="headerError">No data available .</h1>
</div>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>