<?
////////////////////////////////////////////////////////////////////////////////
//@Sea Peng
//Date:22.11.2013
////////////////////////////////////////////////////////////////////////////////

require_once 'clients/CamemisPage.php';
require_once 'clients/CamemisField.php';
require_once 'clients/CamemisBar.php';
require_once 'clients/CamemisGrid.php';
require_once 'clients/CamemisForm.php';
require_once 'clients/CamemisTree.php';
require_once 'include/Common.inc.php';
require_once 'utiles/Utiles.php';
require_once setUserLoacalization();

$CAMEMIS_PAGE_OBJECT = CamemisPage::getInstance();

$OBJECT_FORM = new CamemisForm("ADVISORY");
$OBJECT_FORM->setLoadUrl('/advisory/jsonload/');

$OBJECT_GRID = new CamemisGrid("ADVISORY", "LIST");
$OBJECT_GRID->setLoadUrl("/advisory/jsonload/");

print $CAMEMIS_PAGE_OBJECT->showCamemisHeader();

$columndata = Utiles::getGridColumnData("ADVISORY_LIST_ID");
?>
<script>
    var startDate;
    var endDate;
    var code = '';
    var firstname= '';
    var lastname= '';
    var number= '';
    var advisoryId= '';
    
    Ext.apply(Ext.form.VTypes, {
        daterange : function(val, field) {
            var date = field.parseDate(val);

            if(!date){
                return false;
            }
            if (field.startDateField && (!this.dateRangeMax || (date.getTime() !== this.dateRangeMax.getTime()))) {
                var start = Ext.getCmp(field.startDateField);
                start.setMaxValue(date);
                start.validate();
                this.dateRangeMax = date;
            }
            else if (field.endDateField && (!this.dateRangeMin || (date.getTime() !== this.dateRangeMin.getTime()))) {
                var end = Ext.getCmp(field.endDateField);
                end.setMinValue(date);
                end.validate();
                this.dateRangeMin = date;
            }
            return true;
        }
    });
    
    Ext.onReady(function(){
        function renderText(value,record){
            return '<div style=\"font-weight:normal; color:#000000; padding: 5px; height:15px;background:#FFFFFF;\">' + value + '</div>';
        }
        
        //@ Visal
        function myAjaxRequest(formObject, gridObject){
            var fieldValue = formObject.getForm().getFieldValues();
            if(plsEnterKey(fieldValue)){
                <?=CamemisPage::alertPleaseSelect(NOTES,PLS_ENTER_KEYWORD)?>
            }else{
                var myMask = new Ext.LoadMask(Ext.getBody(), {msg:'<b>CAMEMIS <?=LOADING?></b>', msgCls:'x-mask-loading-camemis'});
                myMask.show();
                Ext.Ajax.request({
                    url: '/advisory/jsonload'
                    ,method: 'POST'
                    ,params:{cmd:'jsonSearchStudentAdvisory'}
                    ,form: formObject.getForm().getEl().dom
                    ,success: function(response, options) {
                        jsonData = Ext.util.JSON.decode(response.responseText);
                        gridObject.getStore().setBaseParam('CODE',fieldValue.CODE);
                        //gridObject.getStore().setBaseParam('STUDENT_SCHOOL_ID',fieldValue.STUDENT_SCHOOL_ID);
                        //gridObject.getStore().setBaseParam('GENDER',fieldValue.GENDER);
                        gridObject.getStore().setBaseParam('FIRSTNAME',fieldValue.FIRSTNAME);
                        gridObject.getStore().setBaseParam('LASTNAME',fieldValue.LASTNAME);
                        gridObject.getStore().loadData(jsonData);
                        myMask.hide();
                    }
                });
            }
        }

        function plsEnterKey(obj){
            var s;
            if(obj.LASTNAME || obj.FIRSTNAME
                || obj.CODE || obj.START_DATE
                || obj.END_DATE || obj.NAME || obj.ADVISORY_TYPE
            ){
                s = 0;
            }else{
                s = 1;
            }
            return s;
        }
        
        function keyEnter(){
            //Ext.getCmp('TABPANEL_ID').getLayout().setActiveItem(1);
            var formObject = Ext.getCmp('<?=$OBJECT_FORM->getObjectId()?>');
            var gridObject = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>');
            myAjaxRequest(formObject, gridObject);
        }
        
        <?
        $CAMEMIS_PAGE_OBJECT->setCostumerCSS();
        $CAMEMIS_PAGE_OBJECT->setExtDefaultGif();
        
        $OBJECT_FORM->addTBarItems("
            text: '".RESET."'
            ,iconCls:'icon-arrow_undo'
            ,scope:this
            ,handler: function(){".CamemisPage::setRequestURI()."}
        ");
        
        $OBJECT_FORM->addTBarItems("
            text: '".FIND."'
            ,formBind:true
            ,iconCls:'icon-magnifier'
            ,scope:this
            ,handler: function(){
                Ext.getCmp('TABPANEL_ID').getLayout().setActiveItem(1);
                var formObject = Ext.getCmp('".$OBJECT_FORM->getObjectId()."');
                var gridObject = Ext.getCmp('".$OBJECT_GRID->getObjectId()."');
                myAjaxRequest(formObject, gridObject);
            }
        ");
        
        $OBJECT_FORM->addTBarItems("
            text: '".ADD_A_NEW_ITEM."'
            ,tooltip:'".ADD_A_NEW_ITEM."'
            ,iconCls:'icon-application_form_add'
            ,scope:this
            ,handler: function(){
                clickOpenPage('center','".ADD_A_NEW_ITEM."', '/advisory/studentshowitem?objectId=new');
            }
        ");
        
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,title: '".DATE."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 330
            ,items:[{
                name: 'START_DATE'
                ,hidden: false
                ,width: 150
                ,fieldLabel: '" . START_DATE . "'
                ,xtype: 'datefield'
                ,id: 'START_DATE'
                ,vtype: 'daterange'
                ,endDateField: 'END_DATE'
                ,format: '" . setExtDatafieldFormat() . "'
                ,allowBlank: true
            },{
                name: 'END_DATE'
                ,hidden: false
                ,width: 150
                ,fieldLabel: '" . END_DATE . "'
                ,xtype: 'datefield'
                ,id: 'END_DATE'
                ,vtype: 'daterange'
                ,format: '" . setExtDatafieldFormat() . "'
                ,startDateField: 'START_DATE'
                ,allowBlank: true
            }]
        ");
        
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,title: '".STUDENT."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 330
            ,items:[
                {".CamemisField::Textfield("CODE", "CODE", CODE, false, false, false, 150)."}
                ,{".CamemisField::Textfield("LASTNAME", "LASTNAME", LASTNAME, false, false, false, 150)."}
                ,{".CamemisField::Textfield("FIRSTNAME", "FIRSTNAME", FIRSTNAME, false, false, false, 150)."}
            ]
        ");
        
        $OBJECT_FORM->addObjectItems("
            xtype:'fieldset'
            ,collapsible:true,collapsed:false
            ,title: '".ADVISORY_INFORMATION."'
            ,bodyStyle: 'background:".CamemisPage::userFormBgColor()."; color:#000;font-weight: bold; padding:10px'
            ,width: 330
            ,items:[
                {".CamemisField::Textfield("NAME", "NAME", NAME, false, false, false, 150)."}
                ,{".CamemisField::comboCamemisTypes("ADVISORY_TYPE", ADVISORY_TYPE, false,150, true)."}
            ]
        ");
        
        $OBJECT_FORM->setBodyStyle("padding:5px;background:".CamemisPage::userFormBgColor().";");
        $OBJECT_FORM->labelAlign = "left";
        $OBJECT_FORM->isObjectDefaultOnLoad = false;
        $OBJECT_FORM->isKeys = true;
        $OBJECT_FORM->renderJS();
        
        //////////////////////////////
        
        $OBJECT_GRID->addReadField("name: 'ID'");
        $OBJECT_GRID->addReadField("name: 'ADVISORY_NAME'");
        $OBJECT_GRID->addReadField("name: 'ADVISORY_TYPE'");
        $OBJECT_GRID->addReadField("name: 'ADVISED_DATE'");
        $OBJECT_GRID->addReadField("name: 'ADVISED_BY'");
        $OBJECT_GRID->addReadField("name: 'STUDENT'");
        
        $OBJECT_GRID->addColumn("header: '<b>" . NAME . "</b>',hidden:".checkColHidden(1, $columndata).", align:'left', menuDisabled : true, sortable: true, width:150, dataIndex: 'ADVISORY_NAME'");
        $OBJECT_GRID->addColumn("header: '<b>" . STUDENT . "</b>', align:'left', renderer: renderText, width: 150,hidden:".checkColHidden(2, $columndata).", dataIndex: 'STUDENT'");
        $OBJECT_GRID->addColumn("header: '<b>" . ADVISORY_TYPE . "</b>', align:'left', renderer: renderText, width: 150,hidden:".checkColHidden(3, $columndata).", dataIndex: 'ADVISORY_TYPE'");
        $OBJECT_GRID->addColumn("header: '<b>" . ADVISED_DATE . "</b>', align:'left', renderer: renderText, width: 150,hidden:".checkColHidden(4, $columndata).", dataIndex: 'ADVISED_DATE'");
        $OBJECT_GRID->addColumn("header: '<b>" . ADVISED_BY . "</b>', align:'left', renderer: renderText, width: 150,hidden:".checkColHidden(5, $columndata).", dataIndex: 'ADVISED_BY'");
        
        $OBJECT_GRID->baseParams = "
            start:0
            ,limit:100
            ,cmd: 'jsonSearchStudentAdvisory'
        ";
        
        $OBJECT_GRID->addTBarItems("
            tbar.add('->');
        ");
        
        $OBJECT_GRID->addTBarItems("
            tbar.add([{
                text: '" . EXPORT_TO_EXCEL . "'
                ,id: 'EXPORT_TO_EXCEL'
                ,iconCls:'icon-page_excel'
                ,handler: function(){
                    Ext.MessageBox.show({
                        msg: '".SAVING_YOUR_DATA_PLEASE_WAIT."',
                        progressText: 'Saving...',
                        width:300,
                        wait:true,
                        waitConfig: {interval:200},
                        icon:'ext-mb-download'
                    });
                    myForm = Ext.getCmp('".$OBJECT_FORM->getObjectId()."').getForm();
                    Ext.Ajax.request({
                        url: '/export/jsonexcel/'
                        ,method: 'POST'
                        ,timeout: 600000
                        ,params:{cmd: 'jsonSearchStudentAdvisory',objectId:'ADVISORY_LIST_ID'}
                        ,form: myForm.getEl().dom
                        ,success: function(response, options) {
                            Ext.MessageBox.hide();
                            window.location='/export/openstudentadvisory/'
                        }
                    });
                }
            }]);
        ");
        
        $OBJECT_GRID->loadMask = true;
        $OBJECT_GRID->isQuickySearch = true;
        $OBJECT_GRID->isObjectDefaultOnLoad = false;
        $OBJECT_GRID->isGroupingView = true;
        $OBJECT_GRID->groupField = "ADVISORY_NAME";
        $OBJECT_GRID->setUserColumn = true;
        $OBJECT_GRID->forceFit = "false";
        $OBJECT_GRID->renderJS();
   
        ?>

        viewport = new Ext.Viewport({
            layout: 'fit'
            ,border: false
            ,items:[{
                layout:'border'
                ,border: false
                ,defaults: {
                    collapsible: true
                    ,split: true
                }
                ,items: [{
                    title: ''
                    ,id:'WEST_ID'
                    ,region:'west'
                    ,margins: '3 0 3 3'
                    ,cmargins: '3 3 3 3'
                    ,width: 350
                    ,minSize: 350
                    ,maxSize: 350
                    ,layout: 'fit'
                    ,keys:{
                        key:[13]
                        ,fn: keyEnter
                        ,scope:this
                    }
                    ,items: [{xtype: '<?=$OBJECT_FORM->getObjectXType();?>'}]
                },{
                    title: ''
                    ,collapsible: false
                    ,id: 'center'
                    ,region:'center'
                    ,layout: 'card'
                    ,activeItem: 0
                    ,margins: '3 3 3 0'
                    ,items:[{
                        layout:'fit'
                        ,bodyStyle: 'background:<?=CamemisPage::userBgColor();?>;padding:3px'
                        ,border: false
                        ,items:[{
                            xtype: 'tabpanel'
                            ,id:'TABPANEL_ID'
                            ,tabPosition: 'top'
                            ,plain:true
                            ,activeTab: 0
                            ,enableTabScroll:true
                            ,items:[{
                                title:'<?=CHARTS;?>'
                                ,layout:'fit'
                                ,items: [new Ext.ux.IFrameComponent({ id: 'ATTENDANCE_CHARTS', url:'/advisory/studentchartreport/?key=<?=camemisId();?>'})]
                            },{
                                title:'<?=SEARCH_RESULT;?>'
                                ,layout:'fit'
                                ,items: [{xtype: '<?=$OBJECT_GRID->getObjectXType();?>'}]
                            }]
                        }]
                    }]
                }]
            }]
        }); 

        var grid = Ext.getCmp('<?=$OBJECT_GRID->getObjectId()?>');
        if (grid) grid.on('cellclick', function(grid, rowIndex, columnIndex, event) {
            var record = grid.store.getAt(rowIndex);
            clickOpenPage('center','', '/advisory/studentshowitem?objectId='+record.data.ID);
        })
        Ext.state.Manager.setProvider(new Ext.state.HttpProvider({url: '/dataset/jsonsave/'}));
    });
</script>
<?
print $CAMEMIS_PAGE_OBJECT->showCamemisFooter();
?>